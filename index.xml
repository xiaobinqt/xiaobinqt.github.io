<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>xiaobinqt 博客 - 技术改变生活</title>
        <link>https://www.xiaobinqt.cn/</link>
        <description>xiaobinqt 博客,萧十一郎博客,php开发,go开发,服务器相关,Laravel等方面的知识,关注架构,elasticsearch,linux,php,mysql,redis,go领域,可以通过xiaobinqt.cn访问,可以通过 xiaobinqt.github.io 访问</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>xiaobinqt@163.com (xiaobinqt)</managingEditor>
            <webMaster>xiaobinqt@163.com (xiaobinqt)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 07 Jul 2023 00:00:00 &#43;0000</lastBuildDate>
            <atom:link href="https://www.xiaobinqt.cn/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>纪念一位老友</title>
    <link>https://www.xiaobinqt.cn/old-pal/</link>
    <pubDate>Wed, 16 Mar 2022 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/old-pal/</guid>
    <description><![CDATA[几年前，一位好朋友去世了，九零后，跟我年纪一样。我跟他从小就认识，我们一起上的小学，一起上的初中，高中之后便联系的少了，后来我去外地读书，联系的就更少了。 那还是二零一九，那时我刚从西安来北京。一天夜里]]></description>
</item><item>
    <title>布雷顿森林体系</title>
    <link>https://www.xiaobinqt.cn/bretton-woods-system/</link>
    <pubDate>Fri, 07 Jul 2023 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/bretton-woods-system/</guid>
    <description><![CDATA[来源布雷顿森林体系（Bretton Woods system）是二战后建立的一套全球金融和货币体系，于 1944 年在美国新罕布什尔州的布雷顿森林酒店（Bretton Woods Hotel）会议上确立。该体系的目标是为世界各国提供稳]]></description>
</item><item>
    <title>windows 下 python virtualenvwrapper-win 使用</title>
    <link>https://www.xiaobinqt.cn/virtualenvwrapper-win/</link>
    <pubDate>Fri, 26 May 2023 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/virtualenvwrapper-win/</guid>
    <description><![CDATA[Virtualenvwrapper 是一个用于管理 Python 虚拟环境的工具，它为创建、切换和删除虚拟环境提供了一组方便的命令，并通过简化管理多个虚拟环境的过程来提高开发效率。 安装可以使用 pip 安装 Virtualenvwrapper： 1 pip install virtualenvwrapper-win 安装完]]></description>
</item><item>
    <title>Docker bridge 网络与自定义 DNS 解析</title>
    <link>https://www.xiaobinqt.cn/docker-net-custom-dns/</link>
    <pubDate>Wed, 24 May 2023 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/docker-net-custom-dns/</guid>
    <description><![CDATA[常见 DNS 记录类型 A 记录（Address Record） 记录格式：example.com. IN A 192.0.2.1，将域名映射到 IPv4 地址，不包含端口信息。 AAAA 记录（IPv6 Address Record） 记录格式：example]]></description>
</item><item>
    <title>SSH error: permissions are too open</title>
    <link>https://www.xiaobinqt.cn/ssh-permissions-are-too-open/</link>
    <pubDate>Sat, 25 Mar 2023 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/ssh-permissions-are-too-open/</guid>
    <description><![CDATA[问题描述我的 git 版本在 1.8.3.1 的时候提交 push 代码时一直报错 git 版本 Permission denied (publickey) 1 2 3 4 5 Permission denied (publickey). fatal: Could not read from remote repository. Please make sure you have the correct access rights and the repository exists. 排查了几个小时，一直没解决，之前也一直是这么用的，也没出现过问题。后来没办法，我尝试]]></description>
</item><item>
    <title>Windows 10 专业版使用 WSL</title>
    <link>https://www.xiaobinqt.cn/windows-wsl/</link>
    <pubDate>Wed, 22 Feb 2023 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/windows-wsl/</guid>
    <description><![CDATA[什么是 wslWindows Subsystem for Linux（WSL）是一个在 Windows 10+ 上能够运行原生 Linux 二进制可执行文件的兼容层。 与 WSL1 相比，WSL 2 使用更新、更强大的虚拟化技术在轻量级实用工具虚拟机 (VM) 中运行 Linux 内核。 安装我是 win10 专业版，其他版本的 win10]]></description>
</item><item>
    <title>Go 编译标签 build tag</title>
    <link>https://www.xiaobinqt.cn/go-build-tag/</link>
    <pubDate>Sat, 28 Jan 2023 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/go-build-tag/</guid>
    <description><![CDATA[简介在 Go 中，build tag 是添加到代码中第一行，来标识编译相关信息的，build tag 决定了当前文件是否会被当前 package 所包含，用于限制一整个文件是否应该被编译入最终的二进制文件，而不是一个文件中的部分代码片段。]]></description>
</item><item>
    <title>curl: (60) Peer&#39;s Certificate has expired 问题解决</title>
    <link>https://www.xiaobinqt.cn/curl-ertificate-has-expired/</link>
    <pubDate>Tue, 17 Jan 2023 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/curl-ertificate-has-expired/</guid>
    <description><![CDATA[刚执行 curl 命令时发现一个问题 Certificate has expired 可以先更新证书试试 1 update-ca-trust 更新证书后如果问题没有解决，继续看是不是由于时间过期引起的问题 1 date 如果发现机器时间不对就需要同步时间 1 ntpdate pool.ntp.org 问题解决]]></description>
</item><item>
    <title>minikube 安装使用</title>
    <link>https://www.xiaobinqt.cn/minikube-usage/</link>
    <pubDate>Sat, 31 Dec 2022 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/minikube-usage/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230128/3cce82b4c8ec479aa27d81f4d0388055.png" referrerpolicy="no-referrer">
            </div>简介Kubernetes 是一个生产级别的容器编排平台和集群管理系统，不仅能够创建、调度容器，还能够监控、管理服务器，它凝聚了 Google 等大公司和开源社区的集体智慧，从而让中小型公司也可以具备轻松运维海量计算节]]></description>
</item><item>
    <title>近视手术调研笔记</title>
    <link>https://www.xiaobinqt.cn/surgery-for-myopia/</link>
    <pubDate>Thu, 03 Nov 2022 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/surgery-for-myopia/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://cdn.xiaobinqt.cn/xiaobinqt.io/20221201/81daef1e24f9440e816b87838959e711.png" referrerpolicy="no-referrer">
            </div>英文简称 英文简称 中文 SMILE 全飞秒激光 FS-LASIK 半飞秒激光 ICL 晶体植入 近视度数划分 300 度以下属于低度近视（25-275度） 300 度以上600度以下属于中度近视（300-575度） 600 度以上900以下属于高度近视（600-87]]></description>
</item><item>
    <title>Go sync.Map 解读</title>
    <link>https://www.xiaobinqt.cn/go-sync-map/</link>
    <pubDate>Wed, 14 Sep 2022 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/go-sync-map/</guid>
    <description><![CDATA[背景项目中遇到了需要使用高并发的 map 的场景，众所周知 Go 官方的原生 map 是不支持并发读写的，直接并发的读写很容易触发 panic。 解决的办法有两个： 自己配一把锁sync.Mutex或者更加考究一点配一把读写锁s]]></description>
</item><item>
    <title>高并发分布式架构演进</title>
    <link>https://www.xiaobinqt.cn/highly-concurrent-architecture-evolution/</link>
    <pubDate>Mon, 29 Aug 2022 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/highly-concurrent-architecture-evolution/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220830/89de4f7569e845ad91eab0a8857d5afb.png" referrerpolicy="no-referrer">
            </div>原文链接：https://segmentfault.com/a/1190000018626163 0. 目录和说明文章在介绍一些基本概念后，按照以下过程阐述了整个架构的演进过程： 单机架构 第一次演进：Tomc]]></description>
</item><item>
    <title>MySQL 常见问题（三）</title>
    <link>https://www.xiaobinqt.cn/mysql-faq-3/</link>
    <pubDate>Mon, 11 Jul 2022 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/mysql-faq-3/</guid>
    <description><![CDATA[InnoDB、MyISAM的区别 磁盘文件不同： MyISAM 引擎的表会生成三个磁盘文件： table_name.frm 该文件中存储表的结构信息。table_name.MYD 该文件中存储表的行数据。table_name.MYI 该文件中存储表的]]></description>
</item><item>
    <title>session cookie token 的区别</title>
    <link>https://www.xiaobinqt.cn/session-cookie-token-difference/</link>
    <pubDate>Sat, 11 Jun 2022 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/session-cookie-token-difference/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220824/ee39a9cb19524d918d984db89b1661a5.png" referrerpolicy="no-referrer">
            </div>Cookie 和 SessionHTTP 协议是一种无状态协议，即每次服务端接收到客户端的请求时，都是一个全新的请求，服务器并不知道客户端的历史请求记录；Session 和 Cookie 的主要目的就是为了弥补 HTTP 的无状态特性。 Session 是什么客户端请求服务端，]]></description>
</item><item>
    <title>MySQL 常见问题（二）</title>
    <link>https://www.xiaobinqt.cn/mysql-faq-2/</link>
    <pubDate>Sat, 21 May 2022 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/mysql-faq-2/</guid>
    <description><![CDATA[索引数据结构为什么不使用红黑树或B树在 InnoDB 引擎中，索引的底层数据结构是 B+ 树。MySQL 的数据是存储在硬盘的，在查询时一般是不能「一次性」把全部数据加载到内存中。红黑树是「二叉查找树」的变种，一个 Node 节点只]]></description>
</item><item>
    <title>MySQL 为什么使用 B&#43; 树索引</title>
    <link>https://www.xiaobinqt.cn/why-mysql-index-use-btree/</link>
    <pubDate>Fri, 20 May 2022 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/why-mysql-index-use-btree/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://cdn.xiaobinqt.cn/xiaobinqt.io/20221127/8018e68746b147a8bba7dac0c65ae308.png" referrerpolicy="no-referrer">
            </div>前言为什么 MySQL 采用 B+ 树作为索引？ 如果纯粹的猜测 MySQL 数据库索引为什么使用 B+ 树？那么围绕这个问题的回答通常一定是围绕 B+ 树本身是什么，有什么优势这两点去解释这个问题。 这不是我开始这么去想的，看了很多文章都是从这]]></description>
</item><item>
    <title>mysql workbench 查看触发器</title>
    <link>https://www.xiaobinqt.cn/mysql-workbench-show-triggers/</link>
    <pubDate>Wed, 20 Apr 2022 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/mysql-workbench-show-triggers/</guid>
    <description><![CDATA[mysql workbench 是官方推荐的数据库工具，用了很长时间却一直不知道触发器在哪儿😢。 触发器是对单个表的操作，而不是整个数据库的操作，所以 Alter Table 就可以看到触发器： 图1 图2 点这个扳手图标也可以看到触发器，跟 Alter Table 效果一样： 图]]></description>
</item><item>
    <title>Redis 缓存击穿、缓存穿透、缓存雪崩</title>
    <link>https://www.xiaobinqt.cn/redis-break-pierce-avalanche/</link>
    <pubDate>Wed, 13 Apr 2022 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/redis-break-pierce-avalanche/</guid>
    <description><![CDATA[缓存击穿高并发流量，访问的这个数据是热点数据，请求的数据在 DB 中存在，但是 Redis 存的那一份已经过期，后端需要从 DB 从加载数据并写到 Redis。 总结起来就是：单一热点数据、高并发、数据失效。 缓存击穿 解决方案 过期]]></description>
</item><item>
    <title>Go GC 垃圾回收</title>
    <link>https://www.xiaobinqt.cn/go-gc/</link>
    <pubDate>Wed, 06 Apr 2022 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/go-gc/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://cdn.xiaobinqt.cn/xiaobinqt.io/20221118/74f00ad9b278426887ea4348fd7a0e1c.png" referrerpolicy="no-referrer">
            </div>垃圾回收（Garbage Collection，GC）是编程语言中提供的自动的内存管理机制，自动释放不需要的内存对象，让出存储器资源。GC 过程中无需程序员手动执行。 GC 机制在现代很多编程语言都支持，GC 能]]></description>
</item><item>
    <title>Github Actions replace env vars in file</title>
    <link>https://www.xiaobinqt.cn/github-actions-replace-env-vars-in-file/</link>
    <pubDate>Sat, 02 Apr 2022 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/github-actions-replace-env-vars-in-file/</guid>
    <description><![CDATA[Github Actions 是个好东西😀，最近在使用的时候有个需求是，我项目不想把设置成私有的，但是有些配置又比较私密，比如 github 的 Personal access token，这种配置就不能暴露出来。 呃，这种需求前辈们估计也遇到过，github actions marketplace 是个好地]]></description>
</item></channel>
</rss>
