<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mysql on xiaobinqt 博客 - 技术改变生活</title>
    <link>https://www.xiaobinqt.cn/categories/mysql/</link>
    <description>Recent content in Mysql on xiaobinqt 博客 - 技术改变生活</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <managingEditor>xiaobinqt@163.com (xiaobinqt)</managingEditor>
    <webMaster>xiaobinqt@163.com (xiaobinqt)</webMaster>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Thu, 20 Feb 2025 19:08:00 +0800</lastBuildDate>
    <atom:link href="https://www.xiaobinqt.cn/categories/mysql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ubuntu Jammy Mysql8.0 搭建主从</title>
      <link>https://www.xiaobinqt.cn/ubuntu-jammy-mysql8/</link>
      <pubDate>Thu, 20 Feb 2025 00:00:00 +0000</pubDate><author>xiaobinqt@163.com (xiaobinqt)</author>
      <guid>https://www.xiaobinqt.cn/ubuntu-jammy-mysql8/</guid>
      <description>&lt;!-- author： xiaobinqt --&gt;&#xA;&lt;!-- email： xiaobinqt@163.com --&gt;&#xA;&lt;!-- https://xiaobinqt.github.io --&gt;&#xA;&lt;!-- https://www.xiaobinqt.cn --&gt;&#xA;&lt;h2 id=&#34;简介&#34; class=&#34;headerLink&#34;&gt;&#xA;    &lt;a href=&#34;#%e7%ae%80%e4%bb%8b&#34; class=&#34;header-mark&#34;&gt;&lt;/a&gt;16 简介&lt;/h2&gt;&lt;p&gt;MySQL 主从复制（Master-Slave Replication）是一种常见的数据复制技术，主要有如下功能：&lt;/p&gt;</description>
    </item>
    <item>
      <title>记一次 MySQL 8.0 JSON 查询</title>
      <link>https://www.xiaobinqt.cn/mysql-json-like-search/</link>
      <pubDate>Thu, 12 Oct 2023 00:00:00 +0000</pubDate><author>xiaobinqt@163.com (xiaobinqt)</author>
      <guid>https://www.xiaobinqt.cn/mysql-json-like-search/</guid>
      <description>&lt;!-- author： xiaobinqt --&gt;&#xA;&lt;!-- email： xiaobinqt@163.com --&gt;&#xA;&lt;!-- https://xiaobinqt.github.io --&gt;&#xA;&lt;!-- https://www.xiaobinqt.cn --&gt;&#xA;&lt;p&gt;有 2 张表，一张 tag 表，主要字段有 id，name。一张 channel 表，有个 tags 字段，存 tag 表中 id，如：&lt;code&gt;[1,5]&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>MySQL 常见问题（三）</title>
      <link>https://www.xiaobinqt.cn/mysql-faq-3/</link>
      <pubDate>Mon, 11 Jul 2022 00:00:00 +0000</pubDate><author>xiaobinqt@163.com (xiaobinqt)</author>
      <guid>https://www.xiaobinqt.cn/mysql-faq-3/</guid>
      <description>&lt;!-- author： xiaobinqt --&gt;&#xA;&lt;!-- email： xiaobinqt@163.com --&gt;&#xA;&lt;!-- https://xiaobinqt.github.io --&gt;&#xA;&lt;!-- https://www.xiaobinqt.cn --&gt;&#xA;&lt;h2 id=&#34;innodbmyisam的区别&#34; class=&#34;headerLink&#34;&gt;&#xA;    &lt;a href=&#34;#innodbmyisam%e7%9a%84%e5%8c%ba%e5%88%ab&#34; class=&#34;header-mark&#34;&gt;&lt;/a&gt;40 InnoDB、MyISAM的区别&lt;/h2&gt;&lt;ul&gt;&#xA;&lt;li&gt;磁盘文件不同：&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;MyISAM 引擎的表会生成三个磁盘文件：&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;table_name.frm&lt;/code&gt; 该文件中存储表的结构信息。&lt;code&gt;table_name.MYD&lt;/code&gt; 该文件中存储表的行数据。&lt;code&gt;table_name.MYI&lt;/code&gt; 该文件中存储表的索引数据。&lt;/p&gt;</description>
    </item>
    <item>
      <title>MySQL 常见问题（二）</title>
      <link>https://www.xiaobinqt.cn/mysql-faq-2/</link>
      <pubDate>Sat, 21 May 2022 00:00:00 +0000</pubDate><author>xiaobinqt@163.com (xiaobinqt)</author>
      <guid>https://www.xiaobinqt.cn/mysql-faq-2/</guid>
      <description>&lt;!-- author： xiaobinqt --&gt;&#xA;&lt;!-- email： xiaobinqt@163.com --&gt;&#xA;&lt;!-- https://xiaobinqt.github.io --&gt;&#xA;&lt;!-- https://www.xiaobinqt.cn --&gt;&#xA;&lt;h2 id=&#34;索引数据结构为什么不使用红黑树或b树&#34; class=&#34;headerLink&#34;&gt;&#xA;    &lt;a href=&#34;#%e7%b4%a2%e5%bc%95%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84%e4%b8%ba%e4%bb%80%e4%b9%88%e4%b8%8d%e4%bd%bf%e7%94%a8%e7%ba%a2%e9%bb%91%e6%a0%91%e6%88%96b%e6%a0%91&#34; class=&#34;header-mark&#34;&gt;&lt;/a&gt;1 索引数据结构为什么不使用红黑树或B树&lt;/h2&gt;&lt;p&gt;在 InnoDB 引擎中，索引的底层数据结构是 B+ 树。MySQL 的数据是存储在硬盘的，在查询时一般是不能「一次性」把全部数据加载到内存中。红黑树是「二叉查找树」的变种，一个 Node 节点只能存储一个&lt;code&gt;Key&lt;/code&gt;和一个&lt;code&gt;Value&lt;/code&gt;。B 和 B+ 树跟红黑树不一样，它们算是「多路搜索树」，相较于「二叉搜索树」而言，一个 Node 节点可以存储的信息会更多，「多路搜索树」的高度会比「二叉搜索树」更低。&lt;/p&gt;</description>
    </item>
    <item>
      <title>MySQL 为什么使用 B&#43; 树索引</title>
      <link>https://www.xiaobinqt.cn/why-mysql-index-use-btree/</link>
      <pubDate>Fri, 20 May 2022 00:00:00 +0000</pubDate><author>xiaobinqt@163.com (xiaobinqt)</author>
      <guid>https://www.xiaobinqt.cn/why-mysql-index-use-btree/</guid>
      <description>&lt;!-- author： xiaobinqt --&gt;&#xA;&lt;!-- email： xiaobinqt@163.com --&gt;&#xA;&lt;!-- https://xiaobinqt.github.io --&gt;&#xA;&lt;!-- https://www.xiaobinqt.cn --&gt;&#xA;&lt;h2 id=&#34;前言&#34; class=&#34;headerLink&#34;&gt;&#xA;    &lt;a href=&#34;#%e5%89%8d%e8%a8%80&#34; class=&#34;header-mark&#34;&gt;&lt;/a&gt;16 前言&lt;/h2&gt;&lt;p&gt;为什么 MySQL 采用 B+ 树作为索引？&lt;/p&gt;&#xA;&lt;p&gt;如果纯粹的猜测 MySQL 数据库索引为什么使用 B+ 树？那么围绕这个问题的回答通常一定是围绕 B+ 树本身是什么，有什么优势这两点去解释这个问题。&lt;/p&gt;</description>
    </item>
    <item>
      <title>mysql workbench 查看触发器</title>
      <link>https://www.xiaobinqt.cn/mysql-workbench-show-triggers/</link>
      <pubDate>Wed, 20 Apr 2022 00:00:00 +0000</pubDate><author>xiaobinqt@163.com (xiaobinqt)</author>
      <guid>https://www.xiaobinqt.cn/mysql-workbench-show-triggers/</guid>
      <description>&lt;!-- author： xiaobinqt --&gt;&#xA;&lt;!-- email： xiaobinqt@163.com --&gt;&#xA;&lt;!-- https://xiaobinqt.github.io --&gt;&#xA;&lt;!-- https://www.xiaobinqt.cn --&gt;&#xA;&lt;p&gt;mysql &lt;a href=&#34;https://dev.mysql.com/downloads/workbench/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;workbench&lt;/a&gt; 是官方推荐的数据库工具，用了很长时间却一直不知道触发器在哪儿&amp;#x1f622;。&lt;/p&gt;&#xA;&lt;p&gt;触发器是对单个表的操作，而不是整个数据库的操作，所以 &lt;code&gt;Alter Table &lt;/code&gt;就可以看到触发器：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker 安装 mysql8.0</title>
      <link>https://www.xiaobinqt.cn/docker-install-mysql8/</link>
      <pubDate>Wed, 08 Sep 2021 00:00:00 +0000</pubDate><author>xiaobinqt@163.com (xiaobinqt)</author>
      <guid>https://www.xiaobinqt.cn/docker-install-mysql8/</guid>
      <description>&lt;!-- author： xiaobinqt --&gt;&#xA;&lt;!-- email： xiaobinqt@163.com --&gt;&#xA;&lt;!-- https://xiaobinqt.github.io --&gt;&#xA;&lt;!-- https://www.xiaobinqt.cn --&gt;&#xA;&lt;h2 id=&#34;设置镜像源&#34; class=&#34;headerLink&#34;&gt;&#xA;    &lt;a href=&#34;#%e8%ae%be%e7%bd%ae%e9%95%9c%e5%83%8f%e6%ba%90&#34; class=&#34;header-mark&#34;&gt;&lt;/a&gt;1 设置镜像源&lt;/h2&gt;&lt;p&gt;国内的网络环境，使用官方的镜像源，下载速度很慢，所以我们需要使用国内的镜像源。&lt;/p&gt;&#xA;&lt;div class=&#34;code-block highlight is-open show-line-numbers  tw-group tw-my-2&#34;&gt;&#xA;  &lt;div class=&#34;&#xA;    &#xA;    tw-flex &#xA;    tw-flex-row&#xA;    tw-flex-1 &#xA;    tw-justify-between &#xA;    tw-w-full tw-bg-bgColor-secondary&#xA;    &#34;&gt;      &#xA;    &lt;button &#xA;      class=&#34;&#xA;        code-block-button&#xA;        tw-mx-2 &#xA;        tw-flex&#xA;        tw-flex-row&#xA;        tw-flex-1&#34;&#xA;      aria-hidden=&#34;true&#34;&gt;&#xA;          &lt;div class=&#34;group-[.is-open]:tw-rotate-90 tw-transition-[transform] tw-duration-500 tw-ease-in-out print:!tw-hidden tw-w-min tw-h-min tw-my-1 tw-mx-1&#34;&gt;&lt;svg class=&#34;icon&#34;&#xA;    xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 320 512&#34;&gt;&lt;!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --&gt;&lt;path d=&#34;M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z&#34;/&gt;&lt;/svg&gt;&lt;/div&gt;&#xA;          &lt;p class=&#34;tw-select-none !tw-my-1&#34;&gt;shell&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mysql 服务端如何处理客户端请求</title>
      <link>https://www.xiaobinqt.cn/mysql-server-exec-client-raw-sql/</link>
      <pubDate>Sun, 20 Dec 2020 00:00:00 +0000</pubDate><author>xiaobinqt@163.com (xiaobinqt)</author>
      <guid>https://www.xiaobinqt.cn/mysql-server-exec-client-raw-sql/</guid>
      <description>&lt;!-- author： xiaobinqt --&gt;&#xA;&lt;!-- email： xiaobinqt@163.com --&gt;&#xA;&lt;!-- https://xiaobinqt.github.io --&gt;&#xA;&lt;!-- https://www.xiaobinqt.cn --&gt;&#xA;&lt;p&gt;不论客户端进程和服务器进程是采用哪种方式进行通信，最后实现的效果都是：客户端进程向服务器进程发送一段文本（MySQL语句），服务器进程处理后再向客户端进程发送一段文本（处理结果）。&lt;/p&gt;</description>
    </item>
    <item>
      <title>mysql 存储程序</title>
      <link>https://www.xiaobinqt.cn/mysql-stored-routine/</link>
      <pubDate>Thu, 08 Oct 2020 00:00:00 +0000</pubDate><author>xiaobinqt@163.com (xiaobinqt)</author>
      <guid>https://www.xiaobinqt.cn/mysql-stored-routine/</guid>
      <description>&lt;!-- author： xiaobinqt --&gt;&#xA;&lt;!-- email： xiaobinqt@163.com --&gt;&#xA;&lt;!-- https://xiaobinqt.github.io --&gt;&#xA;&lt;!-- https://www.xiaobinqt.cn --&gt;&#xA;&lt;h2 id=&#34;总览&#34; class=&#34;headerLink&#34;&gt;&#xA;    &lt;a href=&#34;#%e6%80%bb%e8%a7%88&#34; class=&#34;header-mark&#34;&gt;&lt;/a&gt;1 总览&lt;/h2&gt;&lt;p&gt;&lt;figure&gt;&lt;a class=&#34;lightgallery&#34; href=&#34;https://www.xiaobinqt.cn/e92bc705bec14bcba089f2a8848359b2_6242415333057193940.png&#34; title=&#34;存储程序&#34; data-thumbnail=&#34;/e92bc705bec14bcba089f2a8848359b2_6242415333057193940.png&#34; data-sub-html=&#34;&lt;h2&gt;存储程序&lt;/h2&gt;&lt;p&gt;存储程序&lt;/p&gt;&#34;&gt;&lt;img  loading=&#34;lazy&#34; src=&#39;https://www.xiaobinqt.cn/e92bc705bec14bcba089f2a8848359b2_6242415333057193940.png&#39; srcset=&#34;https://www.xiaobinqt.cn/e92bc705bec14bcba089f2a8848359b2_6242415333057193940_hu_eeecc500952025fa.webp 800w, https://www.xiaobinqt.cn/e92bc705bec14bcba089f2a8848359b2_6242415333057193940_hu_2ef32549d1dc7d1d.webp 1200w, https://www.xiaobinqt.cn/e92bc705bec14bcba089f2a8848359b2_6242415333057193940_hu_458bce4dc5c80aab.webp 1600w&#34;  alt=&#34;存储程序&#34; height=&#34;349&#34; width=&#34;451&#34;&gt;&lt;/a&gt;&lt;figcaption class=&#34;image-caption&#34;&gt;存储程序&lt;/figcaption&gt;&#xA;&lt;/figure&gt;&lt;/p&gt;&#xA;&lt;p&gt;存储程序可以封装一些语句，然后给用户提供一种简单的方式来调用这个存储程序，从而间接地执行某些语句。根据调用方式的不同，可以把存储程序分为&lt;code&gt;存储例程&lt;/code&gt;、&lt;code&gt;触发器&lt;/code&gt;和&lt;code&gt;事件&lt;/code&gt;，存储例程又分为&lt;code&gt;存储函数&lt;/code&gt;和&lt;code&gt;存储过程&lt;/code&gt;，如&amp;#x261d;&amp;#xfe0f;&#xA;上图。&lt;/p&gt;</description>
    </item>
    <item>
      <title>MySQL 常见问题（一）</title>
      <link>https://www.xiaobinqt.cn/mysql-simple-faq/</link>
      <pubDate>Thu, 03 Oct 2019 00:00:00 +0000</pubDate><author>xiaobinqt@163.com (xiaobinqt)</author>
      <guid>https://www.xiaobinqt.cn/mysql-simple-faq/</guid>
      <description>&lt;!-- author： xiaobinqt --&gt;&#xA;&lt;!-- email： xiaobinqt@163.com --&gt;&#xA;&lt;!-- https://xiaobinqt.github.io --&gt;&#xA;&lt;!-- https://www.xiaobinqt.cn --&gt;&#xA;&lt;h2 id=&#34;主键和-unique-的区别&#34; class=&#34;headerLink&#34;&gt;&#xA;    &lt;a href=&#34;#%e4%b8%bb%e9%94%ae%e5%92%8c-unique-%e7%9a%84%e5%8c%ba%e5%88%ab&#34; class=&#34;header-mark&#34;&gt;&lt;/a&gt;1 主键和 UNIQUE 的区别&lt;/h2&gt;&lt;p&gt;主键和&lt;code&gt;UNIQUE&lt;/code&gt;约束都能保证某个列或者列组合的唯一性，但是：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;一张表中只能定义一个主键，却可以定义多个&lt;code&gt;UNIQUE&lt;/code&gt;约束！&lt;/li&gt;&#xA;&lt;li&gt;主键列不允许存放&lt;code&gt;NULL&lt;/code&gt;，而声明了&lt;code&gt;UNIQUE&lt;/code&gt;属性的列可以存放&lt;code&gt;NULL&lt;/code&gt;，而且&lt;code&gt;NULL&lt;/code&gt;可以重复地出现在多条记录中。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;结束符&#34; class=&#34;headerLink&#34;&gt;&#xA;    &lt;a href=&#34;#%e7%bb%93%e6%9d%9f%e7%ac%a6&#34; class=&#34;header-mark&#34;&gt;&lt;/a&gt;2 结束符&lt;/h2&gt;&lt;div class=&#34;code-block highlight is-open show-line-numbers  tw-group tw-my-2&#34;&gt;&#xA;  &lt;div class=&#34;&#xA;    &#xA;    tw-flex &#xA;    tw-flex-row&#xA;    tw-flex-1 &#xA;    tw-justify-between &#xA;    tw-w-full tw-bg-bgColor-secondary&#xA;    &#34;&gt;      &#xA;    &lt;button &#xA;      class=&#34;&#xA;        code-block-button&#xA;        tw-mx-2 &#xA;        tw-flex&#xA;        tw-flex-row&#xA;        tw-flex-1&#34;&#xA;      aria-hidden=&#34;true&#34;&gt;&#xA;          &lt;div class=&#34;group-[.is-open]:tw-rotate-90 tw-transition-[transform] tw-duration-500 tw-ease-in-out print:!tw-hidden tw-w-min tw-h-min tw-my-1 tw-mx-1&#34;&gt;&lt;svg class=&#34;icon&#34;&#xA;    xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 320 512&#34;&gt;&lt;!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --&gt;&lt;path d=&#34;M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z&#34;/&gt;&lt;/svg&gt;&lt;/div&gt;&#xA;          &lt;p class=&#34;tw-select-none !tw-my-1&#34;&gt;shell&lt;/p&gt;</description>
    </item>
    <item>
      <title>mysql 常见数据类型</title>
      <link>https://www.xiaobinqt.cn/mysql-data-type/</link>
      <pubDate>Sat, 15 Jun 2019 00:00:00 +0000</pubDate><author>xiaobinqt@163.com (xiaobinqt)</author>
      <guid>https://www.xiaobinqt.cn/mysql-data-type/</guid>
      <description>&lt;!-- author： xiaobinqt --&gt;&#xA;&lt;!-- email： xiaobinqt@163.com --&gt;&#xA;&lt;!-- https://xiaobinqt.github.io --&gt;&#xA;&lt;!-- https://www.xiaobinqt.cn --&gt;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;MySQL 是以字节为单位存储数据的，一个字节拥有8个比特位。如果存储的不足 1 个字节，MySQL 会自动填充成 1 个字节。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mysql 常用函数备忘</title>
      <link>https://www.xiaobinqt.cn/mysql-common-func-memo/</link>
      <pubDate>Thu, 08 Nov 2018 00:00:00 +0000</pubDate><author>xiaobinqt@163.com (xiaobinqt)</author>
      <guid>https://www.xiaobinqt.cn/mysql-common-func-memo/</guid>
      <description>&lt;!-- author： xiaobinqt --&gt;&#xA;&lt;!-- email： xiaobinqt@163.com --&gt;&#xA;&lt;!-- https://xiaobinqt.github.io --&gt;&#xA;&lt;!-- https://www.xiaobinqt.cn --&gt;&#xA;&lt;h2 id=&#34;时间戳与日期格式转换&#34; class=&#34;headerLink&#34;&gt;&#xA;    &lt;a href=&#34;#%e6%97%b6%e9%97%b4%e6%88%b3%e4%b8%8e%e6%97%a5%e6%9c%9f%e6%a0%bc%e5%bc%8f%e8%bd%ac%e6%8d%a2&#34; class=&#34;header-mark&#34;&gt;&lt;/a&gt;1 时间戳与日期格式转换&lt;/h2&gt;&lt;p&gt;UNIX时间戳转换为日期用函数： &lt;code&gt;FROM_UNIXTIME()&lt;/code&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;code-block highlight is-open show-line-numbers  tw-group tw-my-2&#34;&gt;&#xA;  &lt;div class=&#34;&#xA;    &#xA;    tw-flex &#xA;    tw-flex-row&#xA;    tw-flex-1 &#xA;    tw-justify-between &#xA;    tw-w-full tw-bg-bgColor-secondary&#xA;    &#34;&gt;      &#xA;    &lt;button &#xA;      class=&#34;&#xA;        code-block-button&#xA;        tw-mx-2 &#xA;        tw-flex&#xA;        tw-flex-row&#xA;        tw-flex-1&#34;&#xA;      aria-hidden=&#34;true&#34;&gt;&#xA;          &lt;div class=&#34;group-[.is-open]:tw-rotate-90 tw-transition-[transform] tw-duration-500 tw-ease-in-out print:!tw-hidden tw-w-min tw-h-min tw-my-1 tw-mx-1&#34;&gt;&lt;svg class=&#34;icon&#34;&#xA;    xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 320 512&#34;&gt;&lt;!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --&gt;&lt;path d=&#34;M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z&#34;/&gt;&lt;/svg&gt;&lt;/div&gt;&#xA;          &lt;p class=&#34;tw-select-none !tw-my-1&#34;&gt;mysql&lt;/p&gt;</description>
    </item>
    <item>
      <title>mysql where 和 having 的区别</title>
      <link>https://www.xiaobinqt.cn/what-difference-between-where-and-having/</link>
      <pubDate>Thu, 05 Jul 2018 00:00:00 +0000</pubDate><author>xiaobinqt@163.com (xiaobinqt)</author>
      <guid>https://www.xiaobinqt.cn/what-difference-between-where-and-having/</guid>
      <description>&lt;!-- author： xiaobinqt --&gt;&#xA;&lt;!-- email： xiaobinqt@163.com --&gt;&#xA;&lt;!-- https://xiaobinqt.github.io --&gt;&#xA;&lt;!-- https://www.xiaobinqt.cn --&gt;&#xA;&lt;h2 id=&#34;总览&#34; class=&#34;headerLink&#34;&gt;&#xA;    &lt;a href=&#34;#%e6%80%bb%e8%a7%88&#34; class=&#34;header-mark&#34;&gt;&lt;/a&gt;1 总览&lt;/h2&gt;&lt;p&gt;where 是一个&lt;strong&gt;约束声明&lt;/strong&gt;，在查询数据库的结果返回之前对数据库中的条件进行约束，&lt;strong&gt;where 后面要跟的必须是数据表里真实存在的字段&lt;/strong&gt;，即在&lt;strong&gt;结果返回之前起作用&lt;/strong&gt;。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
