<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>golang - 分类 - xiaobinqt&#39;s blog</title>
        <link>https://xiaobinqt.cn/categories/golang/</link>
        <description>golang - 分类 - xiaobinqt&#39;s blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>xiaobinqt@163.com (xiaobinqt)</managingEditor>
            <webMaster>xiaobinqt@163.com (xiaobinqt)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 16 Mar 2022 21:04:27 &#43;0800</lastBuildDate><atom:link href="https://xiaobinqt.cn/categories/golang/" rel="self" type="application/rss+xml" /><item>
    <title>go GMP 模型</title>
    <link>https://xiaobinqt.cn/gmp_model/</link>
    <pubDate>Wed, 16 Mar 2022 21:04:27 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xiaobinqt.cn/gmp_model/</guid>
    <description><![CDATA[进程、线程、协程的区别 协程的上下文切换比线程的上下文切换代价小 go 调度器机制 知识点 Go程序中没有语言级的关键字让你去创建一个内核线程，你只能创]]></description>
</item><item>
    <title>go build 常用命令</title>
    <link>https://xiaobinqt.cn/go_build_args/</link>
    <pubDate>Wed, 16 Mar 2022 21:01:50 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xiaobinqt.cn/go_build_args/</guid>
    <description><![CDATA[常用编译参数 参数 说明 -o 指定输出可执行文件名 -v 编译时显示包名，可以理解成输出详细编译信息 -race 开启竞态检测 *.go 编译当前目录下的所有go文件，也可以写]]></description>
</item><item>
    <title>Old_palss</title>
    <link>https://xiaobinqt.cn/old_palss/</link>
    <pubDate>Wed, 16 Mar 2022 17:56:15 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xiaobinqt.cn/old_palss/</guid>
    <description><![CDATA[]]></description>
</item><item>
    <title>常见缓存淘汰策略</title>
    <link>https://xiaobinqt.cn/common_cache_-strategies/</link>
    <pubDate>Thu, 05 Mar 2020 16:30:05 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xiaobinqt.cn/common_cache_-strategies/</guid>
    <description><![CDATA[常见缓存淘汰策略 FIFO First In First Out(FIFO)，先进先出，也就是淘汰缓存中最老(最早添加)的记录。FIFO 认为，最早添加的记录，其不再被使用的可]]></description>
</item></channel>
</rss>
