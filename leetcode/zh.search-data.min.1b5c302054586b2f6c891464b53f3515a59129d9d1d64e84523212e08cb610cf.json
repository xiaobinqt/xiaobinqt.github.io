[{"id":0,"href":"/leetcode/docs/easy/","title":"Easy","section":"Docs","content":" Easy # 明日复明日，明日何其多，我生待明日，万事成蹉跎。世人若被明日累，春去秋来老将至。朝看水东流，暮看日西坠。百年明日能几何，请君听我明日歌。 704. 二分查找 "},{"id":1,"href":"/leetcode/docs/medium/","title":"Medium","section":"Docs","content":" Medium # 劝君莫惜金缕衣，劝君须惜少年时。花开堪折直须折，莫待无花空折枝。 xxxxx "},{"id":2,"href":"/leetcode/docs/medium/59/","title":"⚠️59. 螺旋矩阵 II","section":"Medium","content":" 59. 螺旋矩阵 II # 题目地址： https://leetcode.cn/problems/spiral-matrix-ii/\n解题思路 # 可以参考 https://leetcode.cn/problems/spiral-matrix-ii/solutions/12594/spiral-matrix-ii-mo-ni-fa-she-ding-bian-jie-qing-x/\n"},{"id":3,"href":"/leetcode/docs/easy/704/","title":"⚠️704. 二分查找","section":"Easy","content":" 704. 二分查找 # 题目地址： https://leetcode.cn/problems/binary-search/\n解题思路 # 参考 https://www.bilibili.com/video/BV1fA4y1o715/?spm_id_from=333.788\n对于常规实现来说，其实要区分区间，也就是左闭右闭和左闭右开的两种解法，对于左闭右闭来说，包含最右边，那么right其实是数组长度-1，但是对于左闭右开来说，因为不包含最右元素，那个right其实就是数组长度。\n具体实现 # Go 区间左闭右闭\npackage main import ( \u0026#34;fmt\u0026#34; ) func main() { arr := []int{0, 1, 2, 3, 4, 5, 10} fmt.Println(binarySearch(arr, 10)) } func binarySearch(nums []int, target int) int { left := 0 right := len(nums) - 1 for left \u0026lt;= right { middle := (left + right) / 2 if target \u0026gt; nums[middle] { left = middle + 1 } else if target \u0026lt; nums[middle] { right = middle - 1 } else { return middle } } return -1 } 区间左闭右开\npackage main import ( \u0026#34;fmt\u0026#34; ) func main() { arr := []int{0, 1, 2, 3, 4, 5, 10} fmt.Println(binarySearch(arr, 10)) } func binarySearch(nums []int, target int) int { left := 0 right := len(nums) for left \u0026lt; right { middle := (left + right) / 2 if target \u0026gt; nums[middle] { left = middle + 1 } else if target \u0026lt; nums[middle] { right = middle } else { return middle } } return -1 } Python TODO "},{"id":4,"href":"/leetcode/docs/medium/hidden/","title":"Hidden","section":"Medium","content":" This page is hidden in menu # Quondam non pater est dignior ille Eurotas # Latent te facies # Lorem markdownum arma ignoscas vocavit quoque ille texit mandata mentis ultimus, frementes, qui in vel. Hippotades Peleus pennas conscia cuiquam Caeneus quas.\nPater demittere evincitque reddunt Maxime adhuc pressit huc Danaas quid freta Soror ego Luctus linguam saxa ultroque prior Tatiumque inquit Saepe liquitur subita superata dederat Anius sudor Cum honorum Latona # O fallor in sustinui iussorum equidem. Nymphae operi oris alii fronde parens dumque, in auro ait mox ingenti proxima iamdudum maius?\nreality(burnDocking(apache_nanometer), pad.property_data_programming.sectorBrowserPpga(dataMask, 37, recycleRup)); intellectualVaporwareUser += -5 * 4; traceroute_key_upnp /= lag_optical(android.smb(thyristorTftp)); surge_host_golden = mca_compact_device(dual_dpi_opengl, 33, commerce_add_ppc); if (lun_ipv) { verticalExtranet(1, thumbnail_ttl, 3); bar_graphics_jpeg(chipset - sector_xmp_beta); } Fronde cetera dextrae sequens pennis voce muneris # Acta cretus diem restet utque; move integer, oscula non inspirat, noctisque scelus! Nantemque in suas vobis quamvis, et labori!\nvar runtimeDiskCompiler = home - array_ad_software; if (internic \u0026gt; disk) { emoticonLockCron += 37 + bps - 4; wan_ansi_honeypot.cardGigaflops = artificialStorageCgi; simplex -= downloadAccess; } var volumeHardeningAndroid = pixel + tftp + onProcessorUnmount; sector(memory(firewire + interlaced, wired)); "}]