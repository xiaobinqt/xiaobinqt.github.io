<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hard on LeetCode</title>
    <link>https://example.com/leetcode/docs/hard/</link>
    <description>Recent content in Hard on LeetCode</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language><atom:link href="https://example.com/leetcode/docs/hard/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>25. K 个一组翻转链表</title>
      <link>https://example.com/leetcode/docs/hard/25/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/leetcode/docs/hard/25/</guid>
      <description>25. K 个一组翻转链表 # 题目地址 # 力扣 LeetCode 解题思路 # 具体实现 # Go package main import &amp;#34;fmt&amp;#34; type ListNode struct { Val int Next *ListNode } func reverseKGroup(head *ListNode, k int) *ListNode { // 反转链表 reverse := func(head *ListNode) *ListNode { if head == nil { return nil } var ( prev, curr, next *ListNode ) curr = head for curr != nil { next = curr.Next curr.Next = prev prev = curr curr = next } return prev } dummy := &amp;amp;ListNode{} var ( prev, end *ListNode ) dummy.</description>
    </item>
    
    <item>
      <title>😪76. 最小覆盖子串</title>
      <link>https://example.com/leetcode/docs/hard/76/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/leetcode/docs/hard/76/</guid>
      <description> 76. 最小覆盖子串 # 题目地址 # 力扣 LeetCode 解题思路 # TODO
具体思路 # </description>
    </item>
    
    <item>
      <title>224. 基本计算器</title>
      <link>https://example.com/leetcode/docs/hard/224/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/leetcode/docs/hard/224/</guid>
      <description> 224. 基本计算器 # 题目地址 # 力扣 LeetCode </description>
    </item>
    
  </channel>
</rss>
