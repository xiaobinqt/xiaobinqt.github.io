<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Medium on LeetCode</title>
    <link>https://example.com/leetcode/docs/medium/</link>
    <description>Recent content in Medium on LeetCode</description>
    <generator>Hugo</generator>
    <language>zh</language>
    <atom:link href="https://example.com/leetcode/docs/medium/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>15. 三数之和</title>
      <link>https://example.com/leetcode/docs/medium/15/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/leetcode/docs/medium/15/</guid>
      <description>&lt;h1 id=&#34;15-三数之和&#34;&gt;&#xA;  15. 三数之和&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#15-%e4%b8%89%e6%95%b0%e4%b9%8b%e5%92%8c&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;题目地址&#34;&gt;&#xA;  题目地址&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%a2%98%e7%9b%ae%e5%9c%b0%e5%9d%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;  &lt;a href=&#34;https://leetcode.cn/problems/3sum/&#34;&gt;力扣&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;  &lt;a href=&#34;https://leetcode.com/problems/3sum/&#34;&gt;LeetCode&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;解题思路&#34;&gt;&#xA;  解题思路&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%a7%a3%e9%a2%98%e6%80%9d%e8%b7%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;具体实现&#34;&gt;&#xA;  具体实现&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%b7%e4%bd%93%e5%ae%9e%e7%8e%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;book-tabs&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;input type=&#34;radio&#34; class=&#34;toggle&#34; name=&#34;tabs-uniqueid&#34; id=&#34;tabs-uniqueid-0&#34; checked=&#34;checked&#34; /&gt;&#xA;&lt;label for=&#34;tabs-uniqueid-0&#34;&gt;Go&lt;/label&gt;&#xA;&lt;div class=&#34;book-tabs-content markdown-inner&#34;&gt;&#xA;&#xA;```go&#xA;package main&#xA;&#xA;import (&#xA;&#x9;&#34;fmt&#34;&#xA;&#x9;&#34;sort&#34;&#xA;)&#xA;&#xA;func threeSum(nums []int) [][]int {&#xA;&#x9;sort.Ints(nums)&#xA;&#x9;res := [][]int{}&#xA;&#x9;// 找出 a + b + c = 0&#xA;&#x9;// a = nums[i], b = nums[left], c = nums[right]&#xA;&#x9;for i := 0; i &lt; len(nums)-2; i++ {&#xA;&#x9;&#x9;// 排序之后如果第一个元素已经大于零，那么无论如何组合都不可能凑成三元组，直接返回结果就可以了&#xA;&#x9;&#x9;n1 := nums[i]&#xA;&#x9;&#x9;if n1 &gt; 0 {&#xA;&#x9;&#x9;&#x9;return res&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;// 去重 a&#xA;&#x9;&#x9;if i &gt; 0 &amp;&amp; n1 == nums[i-1] {&#xA;&#x9;&#x9;&#x9;continue&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;left, right := i+1, len(nums)-1&#xA;&#xA;&#x9;&#x9;for left &lt; right {&#xA;&#x9;&#x9;&#x9;n2, n3 := nums[left], nums[right]&#xA;&#x9;&#x9;&#x9;if n1+n2+n3 == 0 {&#xA;&#x9;&#x9;&#x9;&#x9;res = append(res, []int{n1, n2, n3})&#xA;&#x9;&#x9;&#x9;&#x9;// 去重逻辑应该放在找到一个三元组之后，对 b 和 c 去重&#xA;&#x9;&#x9;&#x9;&#x9;for left &lt; right &amp;&amp; nums[left] == n2 {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;left++&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;for left &lt; right &amp;&amp; nums[right] == n3 {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;right--&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;} else if n1+n2+n3 &lt; 0 {&#xA;&#x9;&#x9;&#x9;&#x9;left++&#xA;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;right--&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;return res&#xA;}&#xA;&#xA;func main() {&#xA;&#x9;ret := threeSum([]int{-1, 0, 1, 2, -1, -4})&#xA;&#x9;fmt.Println(ret)&#xA;}&#xA;&#xA;```&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>18. 四数之和</title>
      <link>https://example.com/leetcode/docs/medium/18/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/leetcode/docs/medium/18/</guid>
      <description>&lt;h1 id=&#34;18-四数之和&#34;&gt;&#xA;  18. 四数之和&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#18-%e5%9b%9b%e6%95%b0%e4%b9%8b%e5%92%8c&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;题目地址&#34;&gt;&#xA;  题目地址&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%a2%98%e7%9b%ae%e5%9c%b0%e5%9d%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;  &lt;a href=&#34;https://leetcode.cn/problems/4sum/&#34;&gt;力扣&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;  &lt;a href=&#34;https://leetcode.com/problems/4sum/&#34;&gt;LeetCode&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;解题思路&#34;&gt;&#xA;  解题思路&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%a7%a3%e9%a2%98%e6%80%9d%e8%b7%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;具体实现&#34;&gt;&#xA;  具体实现&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%b7%e4%bd%93%e5%ae%9e%e7%8e%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;book-tabs&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;input type=&#34;radio&#34; class=&#34;toggle&#34; name=&#34;tabs-uniqueid&#34; id=&#34;tabs-uniqueid-0&#34; checked=&#34;checked&#34; /&gt;&#xA;&lt;label for=&#34;tabs-uniqueid-0&#34;&gt;Go&lt;/label&gt;&#xA;&lt;div class=&#34;book-tabs-content markdown-inner&#34;&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>19. 删除链表的倒数第 N 个结点</title>
      <link>https://example.com/leetcode/docs/medium/19/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/leetcode/docs/medium/19/</guid>
      <description>&lt;h1 id=&#34;19-删除链表的倒数第-n-个结点&#34;&gt;&#xA;  19. 删除链表的倒数第 N 个结点&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#19-%e5%88%a0%e9%99%a4%e9%93%be%e8%a1%a8%e7%9a%84%e5%80%92%e6%95%b0%e7%ac%ac-n-%e4%b8%aa%e7%bb%93%e7%82%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;题目地址&#34;&gt;&#xA;  题目地址&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%a2%98%e7%9b%ae%e5%9c%b0%e5%9d%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;  &lt;a href=&#34;https://leetcode.cn/problems/remove-nth-node-from-end-of-list/&#34;&gt;力扣&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;  &lt;a href=&#34;https://leetcode.com/problems/remove-nth-node-from-end-of-list/&#34;&gt;LeetCode&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;解题思路&#34;&gt;&#xA;  解题思路&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%a7%a3%e9%a2%98%e6%80%9d%e8%b7%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;常规法&#34;&gt;&#xA;  常规法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b8%b8%e8%a7%84%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;先计算链表长度，比如是 length。那么删除倒数第 n 个节点，也就是删除顺数第 length-n+1 个节点，设为 s，直接从 1 找到第 s-1 个也就是 s 的上一个节点（其实也就是 length-n），直接把 s-1 删除即可。&lt;/p&gt;&#xA;&lt;h3 id=&#34;双指针法&#34;&gt;&#xA;  双指针法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8f%8c%e6%8c%87%e9%92%88%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;TODO&lt;/p&gt;&#xA;&lt;h2 id=&#34;具体实现&#34;&gt;&#xA;  具体实现&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%b7%e4%bd%93%e5%ae%9e%e7%8e%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;book-tabs&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;input type=&#34;radio&#34; class=&#34;toggle&#34; name=&#34;tabs-uniqueid&#34; id=&#34;tabs-uniqueid-0&#34; checked=&#34;checked&#34; /&gt;&#xA;&lt;label for=&#34;tabs-uniqueid-0&#34;&gt;Go常规法&lt;/label&gt;&#xA;&lt;div class=&#34;book-tabs-content markdown-inner&#34;&gt;&#xA;&#xA;```go&#xA;package main&#xA;&#xA;import &#34;fmt&#34;&#xA;&#xA;type ListNode struct {&#xA;&#x9;Val  int&#xA;&#x9;Next *ListNode&#xA;}&#xA;&#xA;func removeNthFromEnd(head *ListNode, n int) *ListNode {&#xA;&#x9;if head == nil {&#xA;&#x9;&#x9;return head&#xA;&#x9;}&#xA;&#xA;&#x9;length := 0&#xA;&#x9;tmpc := head&#xA;&#x9;for tmpc != nil {&#xA;&#x9;&#x9;//fmt.Println(tmpc.Val)&#xA;&#x9;&#x9;length++&#xA;&#x9;&#x9;tmpc = tmpc.Next&#xA;&#x9;}&#xA;&#xA;&#x9;// 需要有虚拟头结点是因为，可能删除的是最后的节点，也就是头结点，用虚拟头结点可以统一处理&#xA;&#x9;dummy := &amp;ListNode{&#xA;&#x9;&#x9;Val:  0,&#xA;&#x9;&#x9;Next: head,&#xA;&#x9;}&#xA;&#xA;&#x9;cur := dummy&#xA;&#x9;// 注意这里 i 是从 1 开始&#xA;&#x9;for i := 1; i &lt; length-n+1; i++ {&#xA;&#x9;&#x9;cur = cur.Next&#xA;&#x9;}&#xA;&#x9;cur.Next = cur.Next.Next&#xA;&#x9;return dummy.Next&#xA;}&#xA;&#xA;func main() {&#xA;&#x9;ret := removeNthFromEnd(&amp;ListNode{&#xA;&#x9;&#x9;Val: 1,&#xA;&#x9;&#x9;Next: &amp;ListNode{&#xA;&#x9;&#x9;&#x9;Val: 2,&#xA;&#x9;&#x9;&#x9;Next: &amp;ListNode{&#xA;&#x9;&#x9;&#x9;&#x9;Val: 3,&#xA;&#x9;&#x9;&#x9;&#x9;Next: &amp;ListNode{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Val: 4,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Next: &amp;ListNode{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Val:  5,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Next: nil,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;},&#xA;&#x9;&#x9;&#x9;&#x9;},&#xA;&#x9;&#x9;&#x9;},&#xA;&#x9;&#x9;},&#xA;&#x9;}, 2)&#xA;&#x9;fmt.Println(ret)&#xA;}&#xA;&#xA;```&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;input type=&#34;radio&#34; class=&#34;toggle&#34; name=&#34;tabs-uniqueid&#34; id=&#34;tabs-uniqueid-1&#34;  /&gt;&#xA;&lt;label for=&#34;tabs-uniqueid-1&#34;&gt;Go双指针&lt;/label&gt;&#xA;&lt;div class=&#34;book-tabs-content markdown-inner&#34;&gt;&#xA;&#xA;```go&#xA;package main&#xA;&#xA;import &#34;fmt&#34;&#xA;&#xA;type ListNode struct {&#xA;&#x9;Val  int&#xA;&#x9;Next *ListNode&#xA;}&#xA;&#xA;func removeNthFromEnd(head *ListNode, n int) *ListNode {&#xA;&#x9;if head == nil {&#xA;&#x9;&#x9;return head&#xA;&#x9;}&#xA;&#xA;&#x9;dummy := &amp;ListNode{&#xA;&#x9;&#x9;Next: head,&#xA;&#x9;}&#xA;&#xA;&#x9;fast, low := dummy, dummy&#xA;&#x9;// fast 先移动 n 步&#xA;&#x9;for n != 0 &amp;&amp; fast != nil {&#xA;&#x9;&#x9;fast = fast.Next&#xA;&#x9;&#x9;n--&#xA;&#x9;}&#xA;&#x9;// fast 再移动一步，这样当 fast 为 nil 时，low 在 n 的上一位&#xA;&#x9;fast = fast.Next&#xA;&#x9;for fast != nil {&#xA;&#x9;&#x9;fast = fast.Next&#xA;&#x9;&#x9;low = low.Next&#xA;&#x9;}&#xA;&#x9;low.Next = low.Next.Next&#xA;&#x9;return dummy.Next&#xA;}&#xA;&#xA;func main() {&#xA;&#x9;ret := removeNthFromEnd(&amp;ListNode{&#xA;&#x9;&#x9;Val: 1,&#xA;&#x9;&#x9;Next: &amp;ListNode{&#xA;&#x9;&#x9;&#x9;Val: 2,&#xA;&#x9;&#x9;&#x9;Next: &amp;ListNode{&#xA;&#x9;&#x9;&#x9;&#x9;Val: 3,&#xA;&#x9;&#x9;&#x9;&#x9;Next: &amp;ListNode{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Val: 4,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Next: &amp;ListNode{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Val:  5,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Next: nil,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;},&#xA;&#x9;&#x9;&#x9;&#x9;},&#xA;&#x9;&#x9;&#x9;},&#xA;&#x9;&#x9;},&#xA;&#x9;}, 2)&#xA;&#x9;fmt.Println(ret)&#xA;}&#xA;&#xA;```&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h2 id=&#34;参考&#34;&gt;&#xA;  参考&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8f%82%e8%80%83&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;  &lt;a href=&#34;https://programmercarl.com/0019.%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E7%9A%84%E5%80%92%E6%95%B0%E7%AC%ACN%E4%B8%AA%E8%8A%82%E7%82%B9.html&#34;&gt;19.删除链表的倒数第N个节点&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>24. 两两交换链表中的节点</title>
      <link>https://example.com/leetcode/docs/medium/24/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/leetcode/docs/medium/24/</guid>
      <description>&lt;h1 id=&#34;24-两两交换链表中的节点&#34;&gt;&#xA;  24. 两两交换链表中的节点&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#24-%e4%b8%a4%e4%b8%a4%e4%ba%a4%e6%8d%a2%e9%93%be%e8%a1%a8%e4%b8%ad%e7%9a%84%e8%8a%82%e7%82%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;题目地址&#34;&gt;&#xA;  题目地址&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%a2%98%e7%9b%ae%e5%9c%b0%e5%9d%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;  &lt;a href=&#34;https://leetcode.cn/problems/swap-nodes-in-pairs/&#34;&gt;力扣&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;  &lt;a href=&#34;https://leetcode.com/problems/swap-nodes-in-pairs/&#34;&gt;LeetCode&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;解题思路&#34;&gt;&#xA;  解题思路&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%a7%a3%e9%a2%98%e6%80%9d%e8%b7%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;参考 &#xA;  &lt;a href=&#34;https://leetcode.cn/problems/swap-nodes-in-pairs/solutions/444474/liang-liang-jiao-huan-lian-biao-zhong-de-jie-di-91/&#34;&gt;https://leetcode.cn/problems/swap-nodes-in-pairs/solutions/444474/liang-liang-jiao-huan-lian-biao-zhong-de-jie-di-91/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;递归法&#34;&gt;&#xA;  递归法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%80%92%e5%bd%92%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;可以通过递归的方式实现两两交换链表中的节点。递归的终止条件是链表中没有节点，或者链表中只有一个节点，此时无法进行交换。&lt;/p&gt;&#xA;&lt;p&gt;如果链表中至少有两个节点，则在两两交换链表中的节点之后，原始链表的头节点变成新的链表的第二个节点，原始链表的第二个节点变成新的链表的头节点。链表中的其余节点的两两交换可以递归地实现。在对链表中的其余节点递归地两两交换之后，更新节点之间的指针关系，即可完成整个链表的两两交换。&lt;/p&gt;&#xA;&lt;p&gt;用&lt;code&gt;head&lt;/code&gt;表示原始链表的头节点，新的链表的第二个节点，用&lt;code&gt;newHead&lt;/code&gt;表示新的链表的头节点，原始链表的第二个节点，则原始链表中的其余节点的头节点是&lt;code&gt;newHead.next&lt;/code&gt;。令&lt;code&gt;head.next = swapPairs(newHead.next)&lt;/code&gt;，表示将其余节点进行两两交换，交换后的新的头节点为&lt;code&gt;head&lt;/code&gt;的下一个节点。然后令&lt;code&gt;newHead.next = head&lt;/code&gt;，即完成了所有节点的交换。最后返回新的链表的头节点&lt;code&gt;newHead&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;p&gt;⚠️好吧，再理解一下，关于递归，我只关注我这一层要干什么，返回什么，至于我的下一层（规模减 1），我不管，我就是一个甩手掌柜🙈。&lt;/p&gt;&#xA;&lt;p&gt;我其实只需要关心第一层，也就是&lt;code&gt;节点1&lt;/code&gt;和&lt;code&gt;节点2&lt;/code&gt;的交换，把&lt;code&gt;节点2&lt;/code&gt;的&lt;code&gt;next&lt;/code&gt;指向&lt;code&gt;节点1&lt;/code&gt;，&lt;code&gt;节点2&lt;/code&gt;的&lt;code&gt;next&lt;/code&gt;给下一层也就是递归函数。而我最后返回的应该是头结点，其实也就是原始节点的&lt;code&gt;节点2&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;h3 id=&#34;迭代法&#34;&gt;&#xA;  迭代法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%bf%ad%e4%bb%a3%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;TODO&lt;/p&gt;&#xA;&lt;h2 id=&#34;具体实现&#34;&gt;&#xA;  具体实现&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%b7%e4%bd%93%e5%ae%9e%e7%8e%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;book-tabs&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;input type=&#34;radio&#34; class=&#34;toggle&#34; name=&#34;tabs-uniqueid&#34; id=&#34;tabs-uniqueid-0&#34; checked=&#34;checked&#34; /&gt;&#xA;&lt;label for=&#34;tabs-uniqueid-0&#34;&gt;Go迭代&lt;/label&gt;&#xA;&lt;div class=&#34;book-tabs-content markdown-inner&#34;&gt;&#xA;&#xA;```go&#xA;package main&#xA;&#xA;import (&#xA;&#x9;&#34;fmt&#34;&#xA;)&#xA;&#xA;type ListNode struct {&#xA;&#x9;Val  int&#xA;&#x9;Next *ListNode&#xA;}&#xA;&#xA;func swapPairs(head *ListNode) *ListNode {&#xA;&#x9;if head == nil {&#xA;&#x9;&#x9;return head&#xA;&#x9;}&#xA;&#xA;&#x9;dummy := &amp;ListNode{&#xA;&#x9;&#x9;Val:  0,&#xA;&#x9;&#x9;Next: head,&#xA;&#x9;}&#xA;&#xA;&#x9;curr := dummy&#xA;&#x9;// 如果是链表长度是奇数那就没有必要交换，只有偶数才需要交换，所以这里的判断条件是 &amp;&amp;&#xA;&#x9;// 这里不能用一个临时参数，因为链表指针后的值会变化&#xA;&#x9;for curr.Next != nil &amp;&amp; curr.Next.Next != nil {&#xA;&#x9;&#x9;tmp := curr.Next&#xA;&#x9;&#x9;tmp1 := curr.Next.Next.Next&#xA;&#xA;&#x9;&#x9;curr.Next = curr.Next.Next&#xA;&#x9;&#x9;curr.Next.Next = tmp&#xA;&#x9;&#x9;curr.Next.Next.Next = tmp1&#xA;&#xA;&#x9;&#x9;// 这里也可以直接写成 curr = tmp&#xA;&#x9;&#x9;curr = curr.Next.Next&#xA;&#x9;}&#xA;&#xA;&#x9;return dummy.Next&#xA;}&#xA;&#xA;func main() {&#xA;&#x9;x := swapPairs(&amp;ListNode{&#xA;&#x9;&#x9;Val: 1,&#xA;&#x9;&#x9;Next: &amp;ListNode{&#xA;&#x9;&#x9;&#x9;Val: 2,&#xA;&#x9;&#x9;&#x9;Next: &amp;ListNode{&#xA;&#x9;&#x9;&#x9;&#x9;Val: 3,&#xA;&#x9;&#x9;&#x9;&#x9;Next: &amp;ListNode{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Val:  4,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Next: nil,&#xA;&#x9;&#x9;&#x9;&#x9;},&#xA;&#x9;&#x9;&#x9;},&#xA;&#x9;&#x9;},&#xA;&#x9;})&#xA;&#x9;fmt.Println(x)&#xA;}&#xA;&#xA;```&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;input type=&#34;radio&#34; class=&#34;toggle&#34; name=&#34;tabs-uniqueid&#34; id=&#34;tabs-uniqueid-1&#34;  /&gt;&#xA;&lt;label for=&#34;tabs-uniqueid-1&#34;&gt;Go递归&lt;/label&gt;&#xA;&lt;div class=&#34;book-tabs-content markdown-inner&#34;&gt;&#xA;&#xA;```go&#xA;package main&#xA;&#xA;import (&#xA;&#x9;&#34;fmt&#34;&#xA;)&#xA;&#xA;type ListNode struct {&#xA;&#x9;Val  int&#xA;&#x9;Next *ListNode&#xA;}&#xA;&#xA;func swapPairs(head *ListNode) *ListNode {&#xA;&#x9;if head == nil || head.Next == nil {&#xA;&#x9;&#x9;return head&#xA;&#x9;}&#xA;&#xA;&#x9;newHead := head.Next&#xA;&#x9;head.Next = swapPairs(head.Next.Next)&#xA;&#x9;newHead.Next = head&#xA;&#x9;return newHead&#xA;}&#xA;&#xA;func main() {&#xA;&#x9;x := swapPairs(&amp;ListNode{&#xA;&#x9;&#x9;Val: 1,&#xA;&#x9;&#x9;Next: &amp;ListNode{&#xA;&#x9;&#x9;&#x9;Val: 2,&#xA;&#x9;&#x9;&#x9;Next: &amp;ListNode{&#xA;&#x9;&#x9;&#x9;&#x9;Val: 3,&#xA;&#x9;&#x9;&#x9;&#x9;Next: &amp;ListNode{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Val:  4,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Next: nil,&#xA;&#x9;&#x9;&#x9;&#x9;},&#xA;&#x9;&#x9;&#x9;},&#xA;&#x9;&#x9;},&#xA;&#x9;})&#xA;&#x9;fmt.Println(x)&#xA;}&#xA;&#xA;```&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>53. 最大子数组和</title>
      <link>https://example.com/leetcode/docs/medium/53/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/leetcode/docs/medium/53/</guid>
      <description>&lt;h1 id=&#34;53-最大子数组和&#34;&gt;&#xA;  53. 最大子数组和&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#53-%e6%9c%80%e5%a4%a7%e5%ad%90%e6%95%b0%e7%bb%84%e5%92%8c&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;题目地址&#34;&gt;&#xA;  题目地址&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%a2%98%e7%9b%ae%e5%9c%b0%e5%9d%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;  &lt;a href=&#34;https://leetcode.cn/problems/maximum-subarray/&#34;&gt;力扣&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;  &lt;a href=&#34;https://leetcode.com/problems/maximum-subarray/&#34;&gt;LeetCode&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;解题思路&#34;&gt;&#xA;  解题思路&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%a7%a3%e9%a2%98%e6%80%9d%e8%b7%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;具体实现&#34;&gt;&#xA;  具体实现&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%b7%e4%bd%93%e5%ae%9e%e7%8e%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;book-tabs&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;input type=&#34;radio&#34; class=&#34;toggle&#34; name=&#34;tabs-uniqueid&#34; id=&#34;tabs-uniqueid-0&#34; checked=&#34;checked&#34; /&gt;&#xA;&lt;label for=&#34;tabs-uniqueid-0&#34;&gt;Go贪心算法&lt;/label&gt;&#xA;&lt;div class=&#34;book-tabs-content markdown-inner&#34;&gt;&#xA;&#xA;```go&#xA;package main&#xA;&#xA;import (&#xA;&#x9;&#34;fmt&#34;&#xA;&#x9;&#34;math&#34;&#xA;)&#xA;&#xA;func maxSubArray(nums []int) int {&#xA;&#x9;if len(nums) == 0 {&#xA;&#x9;&#x9;return 0&#xA;&#x9;}&#xA;&#xA;&#x9;count := 0&#xA;&#x9;result := math.MinInt64&#xA;&#x9;length := len(nums)&#xA;&#xA;&#x9;for i := 0; i &lt; length; i++ {&#xA;&#x9;&#x9;count += nums[i]&#xA;&#x9;&#x9;if count &gt; result {&#xA;&#x9;&#x9;&#x9;result = count&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if count &lt;= 0 {&#xA;&#x9;&#x9;&#x9;count = 0&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;return result&#xA;}&#xA;&#xA;func main() {&#xA;&#x9;fmt.Println(maxSubArray([]int{-2, 1, -3, 4, -1, 2, 1, -5, 4}))&#xA;}&#xA;&#xA;```&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;input type=&#34;radio&#34; class=&#34;toggle&#34; name=&#34;tabs-uniqueid&#34; id=&#34;tabs-uniqueid-1&#34;  /&gt;&#xA;&lt;label for=&#34;tabs-uniqueid-1&#34;&gt;Go暴力法&lt;/label&gt;&#xA;&lt;div class=&#34;book-tabs-content markdown-inner&#34;&gt;&#xA;&#xA;```go&#xA;package main&#xA;&#xA;import (&#xA;&#x9;&#34;fmt&#34;&#xA;&#x9;&#34;math&#34;&#xA;)&#xA;&#xA;func maxSubArray(nums []int) int {&#xA;&#x9;if len(nums) == 0 {&#xA;&#x9;&#x9;return 0&#xA;&#x9;}&#xA;&#xA;&#x9;count := 0&#xA;&#x9;result := math.MinInt64&#xA;&#x9;length := len(nums)&#xA;&#xA;&#x9;for i := 0; i &lt; length; i++ {&#xA;&#x9;&#x9;count = 0&#xA;&#x9;&#x9;for j := i; j &lt; length; j++ {&#xA;&#x9;&#x9;&#x9;count += nums[j]&#xA;&#x9;&#x9;&#x9;if count &gt; result {&#xA;&#x9;&#x9;&#x9;&#x9;result = count&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;return result&#xA;}&#xA;&#xA;func main() {&#xA;&#x9;fmt.Println(maxSubArray([]int{-2, 1, -3, 4, -1, 2, 1, -5, 4}))&#xA;}&#xA;&#xA;```&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>59. 螺旋矩阵 II</title>
      <link>https://example.com/leetcode/docs/medium/59/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/leetcode/docs/medium/59/</guid>
      <description>&lt;h1 id=&#34;59-螺旋矩阵-ii&#34;&gt;&#xA;  59. 螺旋矩阵 II&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#59-%e8%9e%ba%e6%97%8b%e7%9f%a9%e9%98%b5-ii&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;题目地址&#34;&gt;&#xA;  题目地址&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%a2%98%e7%9b%ae%e5%9c%b0%e5%9d%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;  &lt;a href=&#34;https://leetcode.cn/problems/spiral-matrix-ii/&#34;&gt;力扣&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;  &lt;a href=&#34;https://leetcode.com/problems/spiral-matrix-ii/&#34;&gt;LeetCode&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;解题思路&#34;&gt;&#xA;  解题思路&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%a7%a3%e9%a2%98%e6%80%9d%e8%b7%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;可以参考 &#xA;  &lt;a href=&#34;https://leetcode.cn/problems/spiral-matrix-ii/solutions/12594/spiral-matrix-ii-mo-ni-fa-she-ding-bian-jie-qing-x/&#34;&gt;https://leetcode.cn/problems/spiral-matrix-ii/solutions/12594/spiral-matrix-ii-mo-ni-fa-she-ding-bian-jie-qing-x/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;具体实现&#34;&gt;&#xA;  具体实现&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%b7%e4%bd%93%e5%ae%9e%e7%8e%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;book-tabs&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;input type=&#34;radio&#34; class=&#34;toggle&#34; name=&#34;tabs-uniqueid&#34; id=&#34;tabs-uniqueid-0&#34; checked=&#34;checked&#34; /&gt;&#xA;&lt;label for=&#34;tabs-uniqueid-0&#34;&gt;Go&lt;/label&gt;&#xA;&lt;div class=&#34;book-tabs-content markdown-inner&#34;&gt;&#xA;&#xA;```go&#xA;package main&#xA;&#xA;import &#34;fmt&#34;&#xA;&#xA;func main() {&#xA;&#x9;n := 3&#xA;&#x9;fmt.Println(generateMatrix(n))&#xA;}&#xA;&#xA;func generateMatrix(n int) [][]int {&#xA;&#x9;ret := make([][]int, n)&#xA;&#x9;startX, startY := 0, 0&#xA;&#x9;count := 1&#xA;&#x9;offset := 1&#xA;&#x9;loop := n / 2&#xA;&#xA;&#x9;for i := 0; i &lt; n; i++ {&#xA;&#x9;&#x9;ret[i] = make([]int, n)&#xA;&#x9;}&#xA;&#xA;&#x9;for loop &gt; 0 {&#xA;&#x9;&#x9;i, j := startX, startY&#xA;&#xA;&#x9;&#x9;for j = startY; j &lt; n-offset; j++ {&#xA;&#x9;&#x9;&#x9;ret[startX][j] = count&#xA;&#x9;&#x9;&#x9;count++&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;for i = startX; i &lt; n-offset; i++ {&#xA;&#x9;&#x9;&#x9;ret[i][j] = count&#xA;&#x9;&#x9;&#x9;count++&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;for ; j &gt; startY; j-- {&#xA;&#x9;&#x9;&#x9;ret[i][j] = count&#xA;&#x9;&#x9;&#x9;count++&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;for ; i &gt; startX; i-- {&#xA;&#x9;&#x9;&#x9;ret[i][j] = count&#xA;&#x9;&#x9;&#x9;count++&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;startX++&#xA;&#x9;&#x9;startY++&#xA;&#x9;&#x9;offset++&#xA;&#x9;&#x9;loop--&#xA;&#x9;}&#xA;&#xA;&#x9;if n%2 == 1 {&#xA;&#x9;&#x9;ret[n/2][n/2] = n * n&#xA;&#x9;}&#xA;&#xA;&#x9;return ret&#xA;}&#xA;&#xA;```&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h2 id=&#34;参考&#34;&gt;&#xA;  参考&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8f%82%e8%80%83&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;  &lt;a href=&#34;https://www.bilibili.com/video/BV1SL4y1N7mV/?spm_id_from=333.788&#34;&gt;一入循环深似海 | LeetCode：59.螺旋矩阵II&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>92. 反转链表 II</title>
      <link>https://example.com/leetcode/docs/medium/92/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/leetcode/docs/medium/92/</guid>
      <description>&lt;h1 id=&#34;92-反转链表-ii&#34;&gt;&#xA;  92. 反转链表 II&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#92-%e5%8f%8d%e8%bd%ac%e9%93%be%e8%a1%a8-ii&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;题目地址&#34;&gt;&#xA;  题目地址&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%a2%98%e7%9b%ae%e5%9c%b0%e5%9d%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;  &lt;a href=&#34;https://leetcode.cn/problems/reverse-linked-list-ii/&#34;&gt;力扣&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;  &lt;a href=&#34;https://leetcode.com/problems/reverse-linked-list-ii/&#34;&gt;LeetCode&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;解题思路&#34;&gt;&#xA;  解题思路&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%a7%a3%e9%a2%98%e6%80%9d%e8%b7%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;具体实现&#34;&gt;&#xA;  具体实现&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%b7%e4%bd%93%e5%ae%9e%e7%8e%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;book-tabs&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;input type=&#34;radio&#34; class=&#34;toggle&#34; name=&#34;tabs-uniqueid&#34; id=&#34;tabs-uniqueid-0&#34; checked=&#34;checked&#34; /&gt;&#xA;&lt;label for=&#34;tabs-uniqueid-0&#34;&gt;Go&lt;/label&gt;&#xA;&lt;div class=&#34;book-tabs-content markdown-inner&#34;&gt;&#xA;&#xA;```go&#xA;package main&#xA;&#xA;import &#34;fmt&#34;&#xA;&#xA;type ListNode struct {&#xA;&#x9;Val  int&#xA;&#x9;Next *ListNode&#xA;}&#xA;&#xA;func reverseBetween(head *ListNode, left int, right int) *ListNode {&#xA;&#x9;if head == nil {&#xA;&#x9;&#x9;return head&#xA;&#x9;}&#xA;&#xA;&#x9;var (&#xA;&#x9;&#x9;dummy      = &amp;ListNode{}&#xA;&#x9;&#x9;prev, curr *ListNode&#xA;&#x9;)&#xA;&#x9;dummy.Next = head&#xA;&#x9;prev = dummy&#xA;&#xA;&#x9;for i := 0; i &lt; left-1; i++ {&#xA;&#x9;&#x9;prev = prev.Next&#xA;&#x9;}&#xA;&#xA;&#x9;curr = prev.Next&#xA;&#x9;for i := 0; i &lt; right-left; i++ {&#xA;&#x9;&#x9;next := curr.Next&#xA;&#x9;&#x9;curr.Next = curr.Next.Next&#xA;&#x9;&#x9;next.Next = prev.Next&#xA;&#x9;&#x9;prev.Next = next&#xA;&#x9;}&#xA;&#xA;&#x9;return dummy.Next&#xA;}&#xA;&#xA;func main() {&#xA;&#x9;ret := reverseBetween(&amp;ListNode{&#xA;&#x9;&#x9;Val: 1,&#xA;&#x9;&#x9;Next: &amp;ListNode{&#xA;&#x9;&#x9;&#x9;Val: 2,&#xA;&#x9;&#x9;&#x9;Next: &amp;ListNode{&#xA;&#x9;&#x9;&#x9;&#x9;Val: 3,&#xA;&#x9;&#x9;&#x9;&#x9;Next: &amp;ListNode{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Val: 4,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Next: &amp;ListNode{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Val:  5,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Next: nil,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;},&#xA;&#x9;&#x9;&#x9;&#x9;},&#xA;&#x9;&#x9;&#x9;},&#xA;&#x9;&#x9;},&#xA;&#x9;}, 2, 4)&#xA;&#xA;&#x9;fmt.Println(ret)&#xA;}&#xA;&#xA;```&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h2 id=&#34;参考&#34;&gt;&#xA;  参考&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8f%82%e8%80%83&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;  &lt;a href=&#34;https://www.bilibili.com/video/BV1Rc411V79B/&#34;&gt;链表内指定区间反转&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>142. 环形链表 II</title>
      <link>https://example.com/leetcode/docs/medium/142/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/leetcode/docs/medium/142/</guid>
      <description>&lt;h1 id=&#34;142-环形链表-ii&#34;&gt;&#xA;  142. 环形链表 II&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#142-%e7%8e%af%e5%bd%a2%e9%93%be%e8%a1%a8-ii&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;题目地址&#34;&gt;&#xA;  题目地址&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%a2%98%e7%9b%ae%e5%9c%b0%e5%9d%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;  &lt;a href=&#34;https://leetcode.cn/problems/linked-list-cycle-ii/&#34;&gt;力扣&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;  &lt;a href=&#34;https://leetcode.com/problems/linked-list-cycle-ii/&#34;&gt;LeetCode&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;解题思路&#34;&gt;&#xA;  解题思路&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%a7%a3%e9%a2%98%e6%80%9d%e8%b7%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;具体实现&#34;&gt;&#xA;  具体实现&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%b7%e4%bd%93%e5%ae%9e%e7%8e%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;book-tabs&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;input type=&#34;radio&#34; class=&#34;toggle&#34; name=&#34;tabs-uniqueid&#34; id=&#34;tabs-uniqueid-0&#34; checked=&#34;checked&#34; /&gt;&#xA;&lt;label for=&#34;tabs-uniqueid-0&#34;&gt;Go&lt;/label&gt;&#xA;&lt;div class=&#34;book-tabs-content markdown-inner&#34;&gt;&#xA;&#xA;```go&#xA;package main&#xA;&#xA;import &#34;fmt&#34;&#xA;&#xA;type ListNode struct {&#xA;&#x9;Val  int&#xA;&#x9;Next *ListNode&#xA;}&#xA;&#xA;func detectCycle(head *ListNode) *ListNode {&#xA;&#x9;if head == nil {&#xA;&#x9;&#x9;return head&#xA;&#x9;}&#xA;&#xA;&#x9;low, fast := head, head&#xA;&#xA;&#x9;// 因为快指针走 2 步，不要判断 next 是否为 nil&#xA;&#x9;for fast != nil &amp;&amp; fast.Next != nil {&#xA;&#x9;&#x9;low = low.Next&#xA;&#x9;&#x9;fast = fast.Next.Next // 注意这里 fast 是走 2 步&#xA;&#x9;&#x9;if fast == low {&#xA;&#x9;&#x9;&#x9;for low != head {&#xA;&#x9;&#x9;&#x9;&#x9;low = low.Next&#xA;&#x9;&#x9;&#x9;&#x9;head = head.Next&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;return head&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;return nil&#xA;}&#xA;&#xA;func main() {&#xA;&#x9;index2 := &amp;ListNode{&#xA;&#x9;&#x9;Val:  101,&#xA;&#x9;&#x9;Next: nil,&#xA;&#x9;}&#xA;&#x9;index := &amp;ListNode{&#xA;&#x9;&#x9;Val:  100,&#xA;&#x9;&#x9;Next: index2,&#xA;&#x9;}&#xA;&#x9;index.Next.Next = &amp;ListNode{&#xA;&#x9;&#x9;Val:  4,&#xA;&#x9;&#x9;Next: index,&#xA;&#x9;}&#xA;&#x9;fmt.Println(detectCycle(&amp;ListNode{&#xA;&#x9;&#x9;Val: 1,&#xA;&#x9;&#x9;Next: &amp;ListNode{&#xA;&#x9;&#x9;&#x9;Val: 2,&#xA;&#x9;&#x9;&#x9;Next: &amp;ListNode{&#xA;&#x9;&#x9;&#x9;&#x9;Val:  3,&#xA;&#x9;&#x9;&#x9;&#x9;Next: index,&#xA;&#x9;&#x9;&#x9;},&#xA;&#x9;&#x9;},&#xA;&#x9;}))&#xA;}&#xA;&#xA;```&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h2 id=&#34;参考&#34;&gt;&#xA;  参考&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8f%82%e8%80%83&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;  &lt;a href=&#34;https://www.bilibili.com/video/BV1if4y1d7ob&#34;&gt;把环形链表讲清楚！ 如何判断环形链表？如何找到环形链表的入口？&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>151. 反转字符串中的单词</title>
      <link>https://example.com/leetcode/docs/medium/151/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/leetcode/docs/medium/151/</guid>
      <description>&lt;h1 id=&#34;151-反转字符串中的单词&#34;&gt;&#xA;  151. 反转字符串中的单词&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#151-%e5%8f%8d%e8%bd%ac%e5%ad%97%e7%ac%a6%e4%b8%b2%e4%b8%ad%e7%9a%84%e5%8d%95%e8%af%8d&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;题目地址&#34;&gt;&#xA;  题目地址&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%a2%98%e7%9b%ae%e5%9c%b0%e5%9d%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;  &lt;a href=&#34;https://leetcode.cn/problems/reverse-words-in-a-string/&#34;&gt;力扣&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;  &lt;a href=&#34;https://leetcode.com/problems/reverse-words-in-a-string/&#34;&gt;LeetCode&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>155. 最小栈</title>
      <link>https://example.com/leetcode/docs/medium/155/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/leetcode/docs/medium/155/</guid>
      <description>&lt;h1 id=&#34;155-最小栈&#34;&gt;&#xA;  155. 最小栈&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#155-%e6%9c%80%e5%b0%8f%e6%a0%88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;题目地址&#34;&gt;&#xA;  题目地址&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%a2%98%e7%9b%ae%e5%9c%b0%e5%9d%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;  &lt;a href=&#34;https://leetcode.cn/problems/min-stack/&#34;&gt;力扣&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;  &lt;a href=&#34;https://leetcode.com/problems/min-stack/&#34;&gt;LeetCode&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>209. 长度最小的子数组</title>
      <link>https://example.com/leetcode/docs/medium/209/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/leetcode/docs/medium/209/</guid>
      <description>&lt;h1 id=&#34;209-长度最小的子数组&#34;&gt;&#xA;  209. 长度最小的子数组&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#209-%e9%95%bf%e5%ba%a6%e6%9c%80%e5%b0%8f%e7%9a%84%e5%ad%90%e6%95%b0%e7%bb%84&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;题目地址&#34;&gt;&#xA;  题目地址&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%a2%98%e7%9b%ae%e5%9c%b0%e5%9d%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;  &lt;a href=&#34;https://leetcode.cn/problems/minimum-size-subarray-sum/description/&#34;&gt;力扣&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;  &lt;a href=&#34;https://leetcode.com/problems/minimum-size-subarray-sum/description/&#34;&gt;LeetCode&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;解题思路&#34;&gt;&#xA;  解题思路&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%a7%a3%e9%a2%98%e6%80%9d%e8%b7%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;暴力法&#34;&gt;&#xA;  暴力法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%9a%b4%e5%8a%9b%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;暴力法是最直观的方法，但是在 leetcode 提交暴力法解题会报「超出时间限制」😴。暴力法可以参看 &#xA;  &lt;a href=&#34;https://leetcode.cn/problems/minimum-size-subarray-sum/solutions/305704/chang-du-zui-xiao-de-zi-shu-zu-by-leetcode-solutio/&#34;&gt;https://leetcode.cn/problems/minimum-size-subarray-sum/solutions/305704/chang-du-zui-xiao-de-zi-shu-zu-by-leetcode-solutio/&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt;初始化子数组的最小长度为无穷大，枚举数组&lt;code&gt;nums&lt;/code&gt;中的每个下标作为子数组的开始下标，对于每个开始下标&lt;code&gt;i&lt;/code&gt;，需要找到大于或等于&lt;code&gt;i&lt;/code&gt;的最小下标&lt;code&gt;j&lt;/code&gt;，使得从&lt;code&gt;nums[i]&lt;/code&gt;到&lt;code&gt;nums[j]&lt;/code&gt;的元素和大于或等于&lt;code&gt;s&lt;/code&gt;，并更新子数组的最小长度，此时子数组的长度是 &lt;code&gt;j−i+1&lt;/code&gt;。需要&#xA;&lt;strong&gt;注意&lt;/strong&gt;的是，两个 for 循环都是&lt;code&gt;&amp;lt;len(nums)&lt;/code&gt;，&lt;strong&gt;不是&lt;/strong&gt;内层的&lt;code&gt;&amp;lt;len(nums)-1&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;h3 id=&#34;滑动窗口法&#34;&gt;&#xA;  滑动窗口法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%bb%91%e5%8a%a8%e7%aa%97%e5%8f%a3%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;可以参看 &#xA;  &lt;a href=&#34;https://www.bilibili.com/video/BV1tZ4y1q7XE/&#34;&gt;B站-长度最小的子数组&lt;/a&gt; 和 &#xA;  &lt;a href=&#34;https://programmercarl.com/0209.%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84.html#%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3&#34;&gt;209.长度最小的子数组&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;具体实现&#34;&gt;&#xA;  具体实现&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%b7%e4%bd%93%e5%ae%9e%e7%8e%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;book-tabs&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;input type=&#34;radio&#34; class=&#34;toggle&#34; name=&#34;tabs-uniqueid&#34; id=&#34;tabs-uniqueid-0&#34; checked=&#34;checked&#34; /&gt;&#xA;&lt;label for=&#34;tabs-uniqueid-0&#34;&gt;Go滑动窗口&lt;/label&gt;&#xA;&lt;div class=&#34;book-tabs-content markdown-inner&#34;&gt;&#xA;&#xA;```go&#xA;package main&#xA;&#xA;import (&#xA;&#x9;&#34;fmt&#34;&#xA;&#x9;&#34;math&#34;&#xA;)&#xA;&#xA;func minSubArrayLen02(target int, nums []int) int {&#xA;&#x9;n := len(nums)&#xA;&#x9;if n == 0 {&#xA;&#x9;&#x9;return 0&#xA;&#x9;}&#xA;&#xA;&#x9;min := func(x, y int) int {&#xA;&#x9;&#x9;if x &lt; y {&#xA;&#x9;&#x9;&#x9;return x&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return y&#xA;&#x9;}&#xA;&#xA;&#x9;ans := math.MaxInt32&#xA;&#x9;i := 0&#xA;&#x9;sum := 0 // 子数组的和&#xA;&#xA;&#x9;for j := 0; j &lt; n; j++ {&#xA;&#x9;&#x9;sum += nums[j]&#xA;&#x9;&#x9;for sum &gt;= target {&#xA;&#x9;&#x9;&#x9;ans = min(ans, j-i+1)&#xA;&#x9;&#x9;&#x9;sum -= nums[i]&#xA;&#x9;&#x9;&#x9;i++&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;if ans == math.MaxInt32 {&#xA;&#x9;&#x9;return 0&#xA;&#x9;}&#xA;&#xA;&#x9;return ans&#xA;}&#xA;&#xA;func main() {&#xA;&#x9;fmt.Println(minSubArrayLen02(7, []int{2, 3, 1, 2, 4, 3}))&#xA;}&#xA;&#xA;```&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;input type=&#34;radio&#34; class=&#34;toggle&#34; name=&#34;tabs-uniqueid&#34; id=&#34;tabs-uniqueid-1&#34;  /&gt;&#xA;&lt;label for=&#34;tabs-uniqueid-1&#34;&gt;Go暴力法&lt;/label&gt;&#xA;&lt;div class=&#34;book-tabs-content markdown-inner&#34;&gt;&#xA;&#xA;```go&#xA;package main&#xA;&#xA;import (&#xA;&#x9;&#34;fmt&#34;&#xA;&#x9;&#34;math&#34;&#xA;)&#xA;&#xA;func minSubArrayLen(target int, nums []int) int {&#xA;&#x9;n := len(nums)&#xA;&#x9;if n == 0 {&#xA;&#x9;&#x9;return 0&#xA;&#x9;}&#xA;&#xA;&#x9;min := func(x, y int) int {&#xA;&#x9;&#x9;if x &gt; y {&#xA;&#x9;&#x9;&#x9;return y&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;return x&#xA;&#x9;}&#xA;&#xA;&#x9;ans := math.MaxInt32&#xA;&#x9;for i := 0; i &lt; n; i++ {&#xA;&#x9;&#x9;sum := 0&#xA;&#x9;&#x9;for j := i; j &lt; n; j++ {&#xA;&#x9;&#x9;&#x9;sum += nums[j]&#xA;&#x9;&#x9;&#x9;if sum &gt;= target {&#xA;&#x9;&#x9;&#x9;&#x9;ans = min(ans, j-i+1)&#xA;&#x9;&#x9;&#x9;&#x9;break&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;if ans == math.MaxInt32 {&#xA;&#x9;&#x9;return 0&#xA;&#x9;}&#xA;&#xA;&#x9;return ans&#xA;}&#xA;&#xA;func main() {&#xA;&#x9;fmt.Println(minSubArrayLen(7, []int{2, 3, 1, 2, 4, 3}))&#xA;}&#xA;&#xA;```&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>454. 四数相加 II</title>
      <link>https://example.com/leetcode/docs/medium/454/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/leetcode/docs/medium/454/</guid>
      <description>&lt;h1 id=&#34;454-四数相加-ii&#34;&gt;&#xA;  454. 四数相加 II&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#454-%e5%9b%9b%e6%95%b0%e7%9b%b8%e5%8a%a0-ii&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;题目地址&#34;&gt;&#xA;  题目地址&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%a2%98%e7%9b%ae%e5%9c%b0%e5%9d%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;  &lt;a href=&#34;https://leetcode.cn/problems/4sum-ii/&#34;&gt;力扣&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;  &lt;a href=&#34;https://leetcode.com/problems/4sum-ii/&#34;&gt;LeetCode&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;解题思路&#34;&gt;&#xA;  解题思路&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%a7%a3%e9%a2%98%e6%80%9d%e8%b7%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;具体实现&#34;&gt;&#xA;  具体实现&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%b7%e4%bd%93%e5%ae%9e%e7%8e%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;book-tabs&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;input type=&#34;radio&#34; class=&#34;toggle&#34; name=&#34;tabs-uniqueid&#34; id=&#34;tabs-uniqueid-0&#34; checked=&#34;checked&#34; /&gt;&#xA;&lt;label for=&#34;tabs-uniqueid-0&#34;&gt;Go&lt;/label&gt;&#xA;&lt;div class=&#34;book-tabs-content markdown-inner&#34;&gt;&#xA;&#xA;```go&#xA;package main&#xA;&#xA;import &#34;fmt&#34;&#xA;&#xA;func fourSumCount(nums1 []int, nums2 []int, nums3 []int, nums4 []int) int {&#xA;&#x9;count := 0&#xA;&#x9;m := make(map[int]int)&#xA;&#x9;for _, a := range nums1 {&#xA;&#x9;&#x9;for _, b := range nums2 {&#xA;&#x9;&#x9;&#x9;m[a+b]++&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;for _, c := range nums3 {&#xA;&#x9;&#x9;for _, d := range nums4 {&#xA;&#x9;&#x9;&#x9;target := 0 - (c + d)&#xA;&#x9;&#x9;&#x9;if v, ok := m[target]; ok {&#xA;&#x9;&#x9;&#x9;&#x9;count += v&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;return count&#xA;}&#xA;&#xA;func main() {&#xA;&#x9;nums1 := []int{1, 2}&#xA;&#x9;nums2 := []int{-2, -1}&#xA;&#x9;nums3 := []int{-1, 2}&#xA;&#x9;nums4 := []int{0, 2}&#xA;&#x9;ret := fourSumCount(nums1, nums2, nums3, nums4)&#xA;&#x9;fmt.Println(ret)&#xA;}&#xA;&#xA;```&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>😪707. 设计链表</title>
      <link>https://example.com/leetcode/docs/medium/707/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/leetcode/docs/medium/707/</guid>
      <description>&lt;h1 id=&#34;707-设计链表&#34;&gt;&#xA;  707. 设计链表&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#707-%e8%ae%be%e8%ae%a1%e9%93%be%e8%a1%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;题目地址：&#xA;  &lt;a href=&#34;https://leetcode.cn/problems/design-linked-list/&#34;&gt;https://leetcode.cn/problems/design-linked-list/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;解题思路&#34;&gt;&#xA;  解题思路&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%a7%a3%e9%a2%98%e6%80%9d%e8%b7%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;具体实现&#34;&gt;&#xA;  具体实现&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%b7%e4%bd%93%e5%ae%9e%e7%8e%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;book-tabs&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;input type=&#34;radio&#34; class=&#34;toggle&#34; name=&#34;tabs-uniqueid&#34; id=&#34;tabs-uniqueid-0&#34; checked=&#34;checked&#34; /&gt;&#xA;&lt;label for=&#34;tabs-uniqueid-0&#34;&gt;Go&lt;/label&gt;&#xA;&lt;div class=&#34;book-tabs-content markdown-inner&#34;&gt;&#xA;&#xA;```go&#xA;&#xA;```&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;/div&gt;</description>
    </item>
  </channel>
</rss>
