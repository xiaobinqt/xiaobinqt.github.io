<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>简介 on Kubernetes 学习笔记</title>
    <link>https://example.com/kubernetes/</link>
    <description>Recent content in 简介 on Kubernetes 学习笔记</description>
    <generator>Hugo</generator>
    <language>zh</language>
    <atom:link href="https://example.com/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>1.1 Docker 简介</title>
      <link>https://example.com/kubernetes/docs/part1-primary/1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/kubernetes/docs/part1-primary/1/</guid>
      <description>&lt;h1 id=&#34;11-docker-简介&#34;&gt;&#xA;  1.1 Docker 简介&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#11-docker-%e7%ae%80%e4%bb%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230509/d55b31e11e9546cb992bbd5af756b5ca.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;p&gt;目前使用 Docker 基本上有两个选择：Docker Desktop 和 Docker Engine。&lt;/p&gt;&#xA;&lt;p&gt;Docker Desktop 是专门针对个人使用而设计的，支持 Mac 和 Windows 快速安装，具有直观的图形界面，还集成了许多周边工具，方便易用。Docker Engine 完全免费，但只能在 Linux 上运行，只能使用命令行操作，缺乏辅助工具，需要我们自己动手安装运行环境，是现在各个公司在生产环境中实际使用的 Docker 产品，毕竟机房里 99% 的服务器跑的都是 Linux。&lt;/p&gt;&#xA;&lt;h2 id=&#34;111-docker-安装&#34;&gt;&#xA;  1.1.1 Docker 安装&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#111-docker-%e5%ae%89%e8%a3%85&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Docker 的安装可以参看官网 &#xA;  &lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;https://docs.docker.com/engine/install/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230509/2b23eaefbd5c48efa34ae369fbe20cc2.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;p&gt;Docker Engine 不像 Docker Desktop 那样可以安装后就直接使用，必须要做一些手工调整才能用起来，所以在安装完毕后需要执行下面的两条命令：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo service docker start       &lt;span style=&#34;color:#75715e&#34;&gt;#启动docker服务&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo usermod -aG docker &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;USER&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#当前用户加入docker组&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;第一个 service docker start 是启动 Docker 的后台服务，第二个 usermod -aG 是把当前的用户加入 Docker 的用户组。这是因为操作 Docker 必须要有 root 权限，而直接使用 root 用户不够安全，加入 Docker 用户组是一个比较好的选择，这也是 Docker &lt;strong&gt;官方推荐&lt;/strong&gt;的做法。当然，如果为了图省事，也可以直接切换到 root 用户来操作 Docker。&lt;/p&gt;</description>
    </item>
    <item>
      <title>2.1 简介</title>
      <link>https://example.com/kubernetes/docs/part2-break-ice/2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/kubernetes/docs/part2-break-ice/2/</guid>
      <description>&lt;h1 id=&#34;21-k8s-简介&#34;&gt;&#xA;  2.1 k8s 简介&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#21-k8s-%e7%ae%80%e4%bb%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230511/e733bdf69a354a6e826d7b7b49b689ed.png&#34; width=600  /&gt;&lt;/div&gt;&#xA;&lt;h2 id=&#34;211-容器编排&#34;&gt;&#xA;  2.1.1 容器编排&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#211-%e5%ae%b9%e5%99%a8%e7%bc%96%e6%8e%92&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;容器技术其实只是解决了运维部署工作中一个很小的问题，在现实中的生产环境复杂程度特别高，除了最基本的安装，还会有各式各样的需求，比如服务发现、负载均衡、状态监控、健康检查、扩容缩容、应用迁移、高可用等等。&lt;/p&gt;&#xA;&lt;p&gt;这些问题已经不再是隔离一两个进程的普通问题，而是要隔离数不清的进程，还有它们之间互相通信、互相协作的超级问题，困难程度可以说是指数级别的上升。这些容器之上的管理、调度工作，就是 “容器编排”（Container Orchestration）。&lt;/p&gt;&#xA;&lt;h2 id=&#34;212-什么是-k8s&#34;&gt;&#xA;  2.1.2 什么是 k8s&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#212-%e4%bb%80%e4%b9%88%e6%98%af-k8s&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;简单来说，Kubernetes 就是一个&lt;strong&gt;生产级别的容器编排平台和集群管理系统&lt;/strong&gt;，不仅能够创建、调度容器，还能够监控、管理服务器，它凝聚了 Google 等大公司和开源社区的集体智慧，从而让中小型公司也可以具备轻松运维海量计算节点 —— 也就是 “云计算” 的能力。&lt;/p&gt;&#xA;&lt;p&gt;k8s 脱胎与 Google 内部代号为 Borg 的集群应用管理系统。在 2015 年，Google 又联合 Linux 基金会成立了 CNCF（Cloud Native Computing Foundation，云原生基金会），并把 Kubernetes 捐献出来作为种子项目。&lt;/p&gt;&#xA;&lt;p&gt;有了 Google 和 Linux 两大家族的保驾护航，再加上宽容开放的社区，作为 CNCF 的 “头把交椅”，Kubernetes 旗下很快就汇集了众多行业精英，仅用几年的时间就打败了同期的竞争对手 Apache Mesos 和 Docker Swarm，成为了容器编排和集群管理这个领域的唯一霸主。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
