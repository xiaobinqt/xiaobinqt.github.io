<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>收藏夹 on KeepLearning</title>
    <link>https://example.com/keeplearning/docs/favorite/</link>
    <description>Recent content in 收藏夹 on KeepLearning</description>
    <generator>Hugo</generator>
    <language>zh</language>
    <atom:link href="https://example.com/keeplearning/docs/favorite/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>计算机基础书籍推荐</title>
      <link>https://example.com/keeplearning/docs/favorite/cs-learn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/keeplearning/docs/favorite/cs-learn/</guid>
      <description>&lt;h1 id=&#34;计算机基础书籍推荐&#34;&gt;&#xA;  计算机基础书籍推荐&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%ae%a1%e7%ae%97%e6%9c%ba%e5%9f%ba%e7%a1%80%e4%b9%a6%e7%b1%8d%e6%8e%a8%e8%8d%90&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;在自学过程中，最容易踩坑的地方就是不看自己当前水平，盲目跟风买那些豆瓣高分的大而全的计算机黑皮系列的书，然后学几天，就放弃了。&lt;/p&gt;&#xA;&lt;p&gt;这些大而全的计算机黑皮书当然很经典，但是它们并不适合新人入门学习，因为这类书籍的内容都充满大量的专业术语，我们在看到陌生又难以理解的词汇时，就会感觉很吃力，脑子看着就会很累，就会驱使你做简单和快乐的事情，比如睡觉、刷短视频、玩游戏。&lt;/p&gt;&#xA;&lt;p&gt;所以，&lt;strong&gt;学习一门学科的时候，要从最基础的书开始学起，接着搭配视频快速入门，然后再渐渐步入到这些大而全的计算机黑皮书&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;关键的问题来了，计算机基础有哪些入门的基础书和视频呢？&lt;/p&gt;&#xA;&lt;h2 id=&#34;一数据结构与算法&#34;&gt;&#xA;  一、数据结构与算法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%80%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84%e4%b8%8e%e7%ae%97%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;数据结构与算法是非常非常非常重要的，想要冲大厂如果这方面不过关可能连笔试都过不去，更别谈面试的手撕算法了。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;算法：&lt;/strong&gt; 动态规划、回溯算法、查找算法、搜索算法、贪心算法、分治算法、位运算、双指针、排序、模拟、数学、……&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;数据结构：&lt;/strong&gt; 数组、栈、队列、字符串、链表、树、图、堆、哈希表、……&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;数据结构学习&#34;&gt;&#xA;  数据结构学习&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84%e5%ad%a6%e4%b9%a0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;首先推荐 &#xA;  &lt;a href=&#34;https://book.douban.com/subject/6424904/&#34;&gt;&lt;strong&gt;《大话数据结构》&lt;/strong&gt;&lt;/a&gt; 这本入门级别的书，因为书里的内容都是大白话，而且还图文并茂，读起来还是很顺畅的。&lt;/p&gt;&#xA;&lt;p&gt;然后视频推荐 &#xA;  &lt;a href=&#34;https://www.bilibili.com/video/BV1H4411N7oD&#34;&gt;&lt;strong&gt;《浙江大学的数据结构》&lt;/strong&gt;&lt;/a&gt;&#xA;课程，在 B 站就能搜索到，课程是老师带大家用 C 语言来实现各种常见的数据结构。&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt; &lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230107/6ffb2db5a9354496b7badccf7edfa0a1.png&#34; width=500 /&gt; &lt;/div&gt;&#xA;&lt;p&gt;现在大多数高级语言都会有容器，就是把一些常见的数据结构封装成了容器，使用起来比较方便，但是不利于理解底层的数据结构是怎么变换和操作的，所以这门课还是很有意义的。&lt;/p&gt;&#xA;&lt;p&gt;如果想要实战的话，可以去 LeetCode 官方出品的免费教程 Leetbook，网站很细心的按照各个知识点循序渐进地罗列了出来。讲解知识 + 实战演练，学习起来会比看书效率高。&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt; &lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230107/42fac3a5565d444abf72adaf8ade19f3.png&#34; width=600 /&gt; &lt;/div&gt;&#xA;&lt;h3 id=&#34;算法学习&#34;&gt;&#xA;  算法学习&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ae%97%e6%b3%95%e5%ad%a6%e4%b9%a0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;算法刷题可从以下三个渠道。&lt;/p&gt;&#xA;&lt;p&gt;第一个，&#xA;  &lt;a href=&#34;https://www.nowcoder.com/ta/coding-interviews&#34;&gt;剑指offer&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt; &lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230107/9305d5e85f404a028a24c4f26a509166.png&#34; width=600 /&gt; &lt;/div&gt;&#xA;&lt;p&gt;第二个，&#xA;  &lt;a href=&#34;https://leetcode.cn/problemset/algorithms/&#34;&gt;力扣&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt; &lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230107/e029f9b1f09f4358aa67919404f94a60.png&#34; width=600 /&gt; &lt;/div&gt;&#xA;&lt;p&gt;第三个，近期&#xA;  &lt;a href=&#34;https://www.nowcoder.com/activity/oj&#34;&gt;面试中常考题&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt; &lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230107/0e3acd698d3e4a5ab2e72591d241dc41.png&#34; width=600 /&gt; &lt;/div&gt;&#xA;&lt;p&gt;《剑指 offer》作为大经典，是一定要刷两遍以上的，很多题都是面试时的原题，里面包含了很多笔试常用的思想方法，反复看，反复研。&lt;/p&gt;&#xA;&lt;p&gt;leetcode 由于题目十分之多，刷完是不太可能的。可以把 leetcode 作为弱项的专项练习。leetcode 右侧有标签分类，如下图：&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt; &lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230107/adbfce4aa3c34f5eb206a239bfb1a6e0.png&#34; width= /&gt; &lt;/div&gt;&#xA;&lt;p&gt;另外在巩固完弱项的情况下，建议将 leetcode 前 300 题刷熟练，国内大厂面试出的代码题 80% 都是这个范围内的。&lt;/p&gt;&#xA;&lt;p&gt;另外，labuladong 总结的&#xA;  &lt;a href=&#34;https://labuladong.github.io/algo/&#34;&gt;算法小抄&lt;/a&gt; 对算法的理解很有帮助。&lt;/p&gt;&#xA;&lt;p&gt;公司常考题有：&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
