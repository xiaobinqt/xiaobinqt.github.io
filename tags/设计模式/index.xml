<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>设计模式 on xiaobinqt 博客 - 技术改变生活</title>
    <link>https://www.xiaobinqt.cn/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link>
    <description>Recent content in 设计模式 on xiaobinqt 博客 - 技术改变生活</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <managingEditor>xiaobinqt@163.com (xiaobinqt)</managingEditor>
    <webMaster>xiaobinqt@163.com (xiaobinqt)</webMaster>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Thu, 17 Nov 2022 11:51:30 +0800</lastBuildDate>
    <atom:link href="https://www.xiaobinqt.cn/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>常见设计模式-Go实现</title>
      <link>https://www.xiaobinqt.cn/design-patterns/</link>
      <pubDate>Wed, 20 Oct 2021 00:00:00 +0000</pubDate><author>xiaobinqt@163.com (xiaobinqt)</author>
      <guid>https://www.xiaobinqt.cn/design-patterns/</guid>
      <description>&lt;!-- author： xiaobinqt --&gt;&#xA;&lt;!-- email： xiaobinqt@163.com --&gt;&#xA;&lt;!-- https://xiaobinqt.github.io --&gt;&#xA;&lt;!-- https://www.xiaobinqt.cn --&gt;&#xA;&lt;h2 id=&#34;创建型模式&#34; class=&#34;headerLink&#34;&gt;&#xA;    &lt;a href=&#34;#%e5%88%9b%e5%bb%ba%e5%9e%8b%e6%a8%a1%e5%bc%8f&#34; class=&#34;header-mark&#34;&gt;&lt;/a&gt;16 创建型模式&lt;/h2&gt;&lt;h3 id=&#34;单例模式&#34; class=&#34;headerLink&#34;&gt;&#xA;    &lt;a href=&#34;#%e5%8d%95%e4%be%8b%e6%a8%a1%e5%bc%8f&#34; class=&#34;header-mark&#34;&gt;&lt;/a&gt;16.1 单例模式&lt;/h3&gt;&lt;p&gt;保证一个类永远只能有一个对象，并提供一个访问它的全局访问点，且该对象的功能依然能被其他模块使用。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
