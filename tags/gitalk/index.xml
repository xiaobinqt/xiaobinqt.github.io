<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Gitalk - 标签 - xiaobinqt 博客 - 技术改变生活</title>
        <link>https://www.xiaobinqt.cn/tags/gitalk/</link>
        <description>Gitalk - 标签 - xiaobinqt 博客 - 技术改变生活</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>xiaobinqt@163.com (xiaobinqt)</managingEditor>
            <webMaster>xiaobinqt@163.com (xiaobinqt)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 01 Apr 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://www.xiaobinqt.cn/tags/gitalk/" rel="self" type="application/rss+xml" /><item>
    <title>Gitalk 初始化 issue</title>
    <link>https://www.xiaobinqt.cn/gitalk-init-issue/</link>
    <pubDate>Fri, 01 Apr 2022 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/gitalk-init-issue/</guid>
    <description><![CDATA[<p>在用 Gitalk 作为个人博客评论系统时，发现有个恶心的点是，每篇文章必须手动初始化一个 issue 或是登录 github 后，把文章一个一个点开界面去初始化 issue，不然就会出现以下的提示</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220401/e360635c7d7b4e5b931306af6c0455cd.png?imageView2/0/q/75%7cwatermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" title="no issus" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220401/e360635c7d7b4e5b931306af6c0455cd.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-sub-html="<h2>no issus</h2><p>no issus</p>">
        
    </a><figcaption class="image-caption">no issus</figcaption>
    </figure></p>
<p>个人觉得这件事情非常麻烦，<strong>Gitalk 使用 labels 来映射 issuse</strong>，可以看下我用的主题 Gitalk 在初始化评论时发出的网络请求</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220401/be1fd41847d1449c8287f4a7820a35e1.png?imageView2/0/q/75%7cwatermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" title="创建 issue 的请求" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220401/be1fd41847d1449c8287f4a7820a35e1.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-sub-html="<h2>创建 issue 的请求</h2><p>创建 issue 的请求</p>">
        
    </a><figcaption class="image-caption">创建 issue 的请求</figcaption>
    </figure></p>
<p>labels 第一个参数是 Gitalk，第二个参数是文章的发布时间，呃，感觉改成文章的 path 会更好，但是 <strong>github label 的最大长度是 50 个字符</strong>，所以把 path md5 会更好。我看了下源码修改成了 URL
path 的 md5 格式</p>
<p><code>themes/LoveIt/layouts/partials/comment.html</code></p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220404/94a28c0aa1fd4f44a034b1dce2087af4.png?imageView2/0/q/75%7cwatermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" title="comment id" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220404/94a28c0aa1fd4f44a034b1dce2087af4.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-sub-html="<h2>comment id</h2><p>comment id</p>">
        
    </a><figcaption class="image-caption">comment id</figcaption>
    </figure></p>
<p>初始工作做完，就可以写脚本了。</p>
<h2 id="分析" class="headerLink">
    <a href="#%e5%88%86%e6%9e%90" class="header-mark"></a>分析</h2><p>我们要做的事其实就是给每篇新文章初始化一个 issue，可以用 github Actions 来做这件事。</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220402/fcdfd734b67b4e4283637061f717788b.png?imageView2/0/q/75%7cwatermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" title="初始化 issue 大致逻辑" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220402/fcdfd734b67b4e4283637061f717788b.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-sub-html="<h2>初始化 issue 大致逻辑</h2><p>初始化 issue 大致逻辑</p>">
        
    </a><figcaption class="image-caption">初始化 issue 大致逻辑</figcaption>
    </figure></p>
<p>这里有几个稍微麻烦的地方，以下是我的实现方案，<strong>仅仅是提供一个思路</strong>。</p>
<h3 id="获取所有文章信息" class="headerLink">
    <a href="#%e8%8e%b7%e5%8f%96%e6%89%80%e6%9c%89%e6%96%87%e7%ab%a0%e4%bf%a1%e6%81%af" class="header-mark"></a>获取所有文章信息</h3><p>怎么获取所有的文章&#x2753;，我用的 <a href="https://github.com/dillonzq/LoveIt" target="_blank" rel="noopener noreferrer">LoveIt</a> 主题在 build 时在 public 目录里会有一个 index.json
文件，里面包含了所有的文章的信息。</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220402/e224ac9d408e4dea972caecabecec8ba.png?imageView2/0/q/75%7cwatermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" title="public index.json" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220402/e224ac9d408e4dea972caecabecec8ba.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-sub-html="<h2>public index.json</h2><p>public index.json</p>">
        
    </a><figcaption class="image-caption">public index.json</figcaption>
    </figure></p>
<p>其他的主题可以使用 sitemap.xml 来获取所有的文章信息，hugo 在 build 时会生成 sitemap.xml 文件。</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220402/f59bb44ee8924b639a949bb494a40b9c.png?imageView2/0/q/75%7cwatermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" title="sitemap.xml" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220402/f59bb44ee8924b639a949bb494a40b9c.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-sub-html="<h2>sitemap.xml</h2><p>sitemap.xml</p>">
        
    </a><figcaption class="image-caption">sitemap.xml</figcaption>
    </figure></p>
<h3 id="issue-如何初始化" class="headerLink">
    <a href="#issue-%e5%a6%82%e4%bd%95%e5%88%9d%e5%a7%8b%e5%8c%96" class="header-mark"></a>issue 如何初始化</h3><p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220404/3f28b1b6486e44cfbeeef571bfded6f2.png?imageView2/0/q/75%7cwatermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" title="issue内容" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220404/3f28b1b6486e44cfbeeef571bfded6f2.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-sub-html="<h2>issue内容</h2><p>issue内容</p>">
        
    </a><figcaption class="image-caption">issue内容</figcaption>
    </figure></p>
<p>如上截图&#x1f446;是我创建的 issue 内容。body 是文章的 URL，title 是文章标题，labels 有 Gitalk 和文章的 URL path 的 md5
两个。那么问题就简单了，我们只需要给每篇文章初始化一个这样的 issue 就可以了。</p>
<p>固定文章的 URL 为唯一标识，组成两个 map ，map 键就是文章的 URL。一个 map 是 github 已存在的 issue 暂定为 <code>issue_map</code>，一个 map 是我们所有文章的 map 暂定为 <code>posts_map</code>
，URL 在 <code>posts_map</code>
中存在但是 <code>issue_map</code> 不存在的就是<strong>新增</strong>
。URL 在 <code>posts_map</code> 和 <code>issue_map</code> 中都存在但是 <code>posts_map</code> 中的标题跟 <code>issue_map</code> 中的标题不相同可能就是文章标题被修改了。</p>
<p>对于新的 URL 我的做法是承认它是新文章，或是旧文章的 URL 被修改了那只能去 github 手动修改 issue body 为新的 URL, label 为新的 uri 的 md5 值。</p>
<h2 id="python-脚本实现" class="headerLink">
    <a href="#python-%e8%84%9a%e6%9c%ac%e5%ae%9e%e7%8e%b0" class="header-mark"></a>python 脚本实现</h2><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span><span class="lnt">119
</span><span class="lnt">120
</span><span class="lnt">121
</span><span class="lnt">122
</span><span class="lnt">123
</span><span class="lnt">124
</span><span class="lnt">125
</span><span class="lnt">126
</span><span class="lnt">127
</span><span class="lnt">128
</span><span class="lnt">129
</span><span class="lnt">130
</span><span class="lnt">131
</span><span class="lnt">132
</span><span class="lnt">133
</span><span class="lnt">134
</span><span class="lnt">135
</span><span class="lnt">136
</span><span class="lnt">137
</span><span class="lnt">138
</span><span class="lnt">139
</span><span class="lnt">140
</span><span class="lnt">141
</span><span class="lnt">142
</span><span class="lnt">143
</span><span class="lnt">144
</span><span class="lnt">145
</span><span class="lnt">146
</span><span class="lnt">147
</span><span class="lnt">148
</span><span class="lnt">149
</span><span class="lnt">150
</span><span class="lnt">151
</span><span class="lnt">152
</span><span class="lnt">153
</span><span class="lnt">154
</span><span class="lnt">155
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">hashlib</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">json</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">sys</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">time</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">requests</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">site_url</span> <span class="o">=</span> <span class="s2">&#34;https://xiaobinqt.github.io&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">4</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;Usage:&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="s2">&#34;token username repo_name&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># issue 的 body 就是文章的 URL</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">token</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="n">username</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="n">repo_name</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="n">issue_map</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">()</span>  <span class="c1">## [issue_body] = {&#34;issue_number&#34;: issue_number, &#34;issue_title&#34;: issue_title}</span>
</span></span><span class="line"><span class="cl"><span class="n">posts_map</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">()</span>  <span class="c1"># [post_url] = {&#34;post_uri&#34;:uri,&#34;post_date&#34;:date,&#34;post_title&#34;:title}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">get_all_gitalk_issues</span><span class="p">(</span><span class="n">token</span><span class="p">,</span> <span class="n">username</span><span class="p">,</span> <span class="n">repo_name</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">150</span><span class="p">):</span>  <span class="c1"># 15000 个 issue 基本够用了,不够可以再加</span>
</span></span><span class="line"><span class="cl">        <span class="n">_</span><span class="p">,</span> <span class="n">ret</span> <span class="o">=</span> <span class="n">get_issues_page</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">time</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">ret</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">break</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## 删除的文章不管....</span>
</span></span><span class="line"><span class="cl"><span class="c1">## 文章 title 修改了的文章该怎么处理？ 标题可能修改,但是 uri 不变,issue 的 body 是文章地址,只要文章地址不变，就可以直接 update issue title</span>
</span></span><span class="line"><span class="cl"><span class="c1">## uri 如果也变了，相当于是文件的重命名了，这时只能去手动 update issue title 了?.....</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">update_issue</span><span class="p">(</span><span class="n">issue_number</span><span class="p">,</span> <span class="n">title</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">title</span> <span class="o">==</span> <span class="s2">&#34;&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">url</span> <span class="o">=</span> <span class="s1">&#39;https://api.github.com/repos/</span><span class="si">%s</span><span class="s1">/</span><span class="si">%s</span><span class="s1">/issues/</span><span class="si">%d</span><span class="s1">&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">username</span><span class="p">,</span> <span class="n">repo_name</span><span class="p">,</span> <span class="n">issue_number</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;update_issue url: </span><span class="si">%s</span><span class="s2">&#34;</span> <span class="o">%</span> <span class="n">url</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">data</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;title&#39;</span><span class="p">:</span> <span class="n">title</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;create_issue req json: </span><span class="si">%s</span><span class="s2">&#34;</span> <span class="o">%</span> <span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">data</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">    <span class="n">r</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">patch</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">data</span><span class="p">),</span> <span class="n">headers</span><span class="o">=</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;Authorization&#34;</span><span class="p">:</span> <span class="s2">&#34;token </span><span class="si">%s</span><span class="s2">&#34;</span> <span class="o">%</span> <span class="n">token</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span> <span class="n">verify</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">r</span><span class="o">.</span><span class="n">status_code</span> <span class="o">==</span> <span class="mi">200</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;update_issue success&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;update_issue fail, status_code: </span><span class="si">%d</span><span class="s2">,title: </span><span class="si">%s</span><span class="s2">,issue_number: </span><span class="si">%d</span><span class="s2">&#34;</span> <span class="o">%</span>
</span></span><span class="line"><span class="cl">              <span class="p">(</span><span class="n">r</span><span class="o">.</span><span class="n">status_code</span><span class="p">,</span> <span class="n">title</span><span class="p">,</span> <span class="n">issue_number</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 获取所有 label 为 gitalk 的 issue</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">get_issues_page</span><span class="p">(</span><span class="n">page</span><span class="o">=</span><span class="mi">1</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="n">url</span> <span class="o">=</span> <span class="s1">&#39;https://api.github.com/repos/</span><span class="si">%s</span><span class="s1">/</span><span class="si">%s</span><span class="s1">/issues?labels=Gitalk&amp;per_page=100&amp;page=</span><span class="si">%d</span><span class="s1">&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">username</span><span class="p">,</span> <span class="n">repo_name</span><span class="p">,</span> <span class="n">page</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;get_issues url: </span><span class="si">%s</span><span class="s2">&#34;</span> <span class="o">%</span> <span class="n">url</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">r</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;Authorization&#34;</span><span class="p">:</span> <span class="s2">&#34;token </span><span class="si">%s</span><span class="s2">&#34;</span> <span class="o">%</span> <span class="n">token</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;Accept&#34;</span><span class="p">:</span> <span class="s2">&#34;application/vnd.github.v3+json&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">})</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">r</span><span class="o">.</span><span class="n">status_code</span> <span class="o">!=</span> <span class="mi">200</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;get_issues_page fail, status_code: </span><span class="si">%d</span><span class="s2">&#34;</span> <span class="o">%</span> <span class="n">r</span><span class="o">.</span><span class="n">status_code</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">r</span><span class="o">.</span><span class="n">json</span><span class="p">()</span> <span class="o">==</span> <span class="p">[]:</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">(</span><span class="n">issue_map</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">issue</span> <span class="ow">in</span> <span class="n">r</span><span class="o">.</span><span class="n">json</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">issue</span><span class="p">[</span><span class="s1">&#39;body&#39;</span><span class="p">]</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">issue_map</span> <span class="ow">and</span> <span class="n">issue</span><span class="p">[</span><span class="s2">&#34;body&#34;</span><span class="p">]</span> <span class="o">!=</span> <span class="s2">&#34;&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">issue_map</span><span class="p">[</span><span class="n">issue</span><span class="p">[</span><span class="s1">&#39;body&#39;</span><span class="p">]]</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;issue_number&#34;</span><span class="p">:</span> <span class="n">issue</span><span class="p">[</span><span class="s1">&#39;number&#39;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;issue_title&#34;</span><span class="p">:</span> <span class="n">issue</span><span class="p">[</span><span class="s1">&#39;title&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="p">(</span><span class="n">issue_map</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 通过 public/index.json 获取所有的文章</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">get_post_titles</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">    <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">file</span><span class="o">=</span><span class="s1">&#39;public/index.json&#39;</span><span class="p">,</span> <span class="n">mode</span><span class="o">=</span><span class="s1">&#39;r&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">file_data</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">file_data</span> <span class="o">==</span> <span class="s2">&#34;&#34;</span> <span class="ow">or</span> <span class="n">file_data</span> <span class="o">==</span> <span class="p">[]</span> <span class="ow">or</span> <span class="n">file_data</span> <span class="o">==</span> <span class="p">{}:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="n">posts_map</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="n">file_data</span> <span class="o">=</span> <span class="n">json</span><span class="o">.</span><span class="n">loads</span><span class="p">(</span><span class="n">file_data</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="n">data</span> <span class="ow">in</span> <span class="n">file_data</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">key</span> <span class="o">=</span> <span class="s2">&#34;</span><span class="si">%s%s</span><span class="s2">&#34;</span> <span class="o">%</span> <span class="p">(</span><span class="n">site_url</span><span class="p">,</span> <span class="n">data</span><span class="p">[</span><span class="s1">&#39;uri&#39;</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">key</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">posts_map</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">posts_map</span><span class="p">[</span><span class="n">key</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;post_uri&#34;</span><span class="p">:</span> <span class="n">data</span><span class="p">[</span><span class="s1">&#39;uri&#39;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;post_date&#34;</span><span class="p">:</span> <span class="n">data</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;post_title&#34;</span><span class="p">:</span> <span class="n">data</span><span class="p">[</span><span class="s1">&#39;title&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">posts_map</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">create_issue</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s2">&#34;&#34;</span><span class="p">,</span> <span class="n">uri</span><span class="o">=</span><span class="s2">&#34;&#34;</span><span class="p">,</span> <span class="n">date</span><span class="o">=</span><span class="s2">&#34;&#34;</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">title</span> <span class="o">==</span> <span class="s2">&#34;&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">url</span> <span class="o">=</span> <span class="s1">&#39;https://api.github.com/repos/</span><span class="si">%s</span><span class="s1">/</span><span class="si">%s</span><span class="s1">/issues&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">username</span><span class="p">,</span> <span class="n">repo_name</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;create_issue title: </span><span class="si">%s</span><span class="s2"> uri: </span><span class="si">%s</span><span class="s2"> date: </span><span class="si">%s</span><span class="s2">&#34;</span> <span class="o">%</span> <span class="p">(</span><span class="n">title</span><span class="p">,</span> <span class="n">uri</span><span class="p">,</span> <span class="n">date</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">    <span class="n">m</span> <span class="o">=</span> <span class="n">hashlib</span><span class="o">.</span><span class="n">md5</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">m</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">uri</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="s1">&#39;utf-8&#39;</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">    <span class="n">urlmd5</span> <span class="o">=</span> <span class="n">m</span><span class="o">.</span><span class="n">hexdigest</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">data</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;title&#39;</span><span class="p">:</span> <span class="n">title</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;body&#39;</span><span class="p">:</span> <span class="s1">&#39;</span><span class="si">%s%s</span><span class="s1">&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">site_url</span><span class="p">,</span> <span class="n">uri</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;labels&#39;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">            <span class="s1">&#39;Gitalk&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="n">urlmd5</span>
</span></span><span class="line"><span class="cl">        <span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;create_issue req json: </span><span class="si">%s</span><span class="s2">&#34;</span> <span class="o">%</span> <span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">data</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">    <span class="n">r</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">post</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">data</span><span class="p">),</span> <span class="n">headers</span><span class="o">=</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;Authorization&#34;</span><span class="p">:</span> <span class="s2">&#34;token </span><span class="si">%s</span><span class="s2">&#34;</span> <span class="o">%</span> <span class="n">token</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">})</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">r</span><span class="o">.</span><span class="n">status_code</span> <span class="o">==</span> <span class="mi">201</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;create_issue success&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;create_issue fail, status_code: </span><span class="si">%d</span><span class="s2">,title: </span><span class="si">%s</span><span class="s2">,req url: </span><span class="si">%s</span><span class="s2"> </span><span class="se">\n</span><span class="s2">&#34;</span> <span class="o">%</span> <span class="p">(</span><span class="n">r</span><span class="o">.</span><span class="n">status_code</span><span class="p">,</span> <span class="n">title</span><span class="p">,</span> <span class="n">url</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 创建 gitalk 创建 issue,如果 issue 已经存在，则不创建</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">init_gitalk</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">post_url</span><span class="p">,</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">posts_map</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">        <span class="c1">## 标题被修改了</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">post_url</span> <span class="ow">in</span> <span class="n">issue_map</span> <span class="ow">and</span> <span class="n">item</span><span class="p">[</span><span class="s1">&#39;post_title&#39;</span><span class="p">]</span> <span class="o">!=</span> <span class="n">issue_map</span><span class="p">[</span><span class="n">post_url</span><span class="p">][</span><span class="s1">&#39;issue_title&#39;</span><span class="p">]:</span>
</span></span><span class="line"><span class="cl">            <span class="n">update_issue</span><span class="p">(</span><span class="n">issue_map</span><span class="p">[</span><span class="n">post_url</span><span class="p">][</span><span class="s2">&#34;issue_number&#34;</span><span class="p">],</span> <span class="n">item</span><span class="p">[</span><span class="s1">&#39;post_title&#39;</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">        <span class="k">elif</span> <span class="n">post_url</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">issue_map</span><span class="p">:</span>  <span class="c1"># 新增的文章</span>
</span></span><span class="line"><span class="cl">            <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;title: [</span><span class="si">%s</span><span class="s2">] , body [</span><span class="si">%s</span><span class="s2">] issue 不存在,创建...&#34;</span> <span class="o">%</span> <span class="p">(</span><span class="n">item</span><span class="p">[</span><span class="s2">&#34;post_title&#34;</span><span class="p">],</span> <span class="n">post_url</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">            <span class="n">create_issue</span><span class="p">(</span><span class="n">item</span><span class="p">[</span><span class="s2">&#34;post_title&#34;</span><span class="p">],</span> <span class="n">item</span><span class="p">[</span><span class="s2">&#34;post_uri&#34;</span><span class="p">],</span> <span class="n">item</span><span class="p">[</span><span class="s2">&#34;post_date&#34;</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">            <span class="c1"># 延迟 5 秒，防止 github api 请求过于频繁： https://docs.github.com/en/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits</span>
</span></span><span class="line"><span class="cl">            <span class="n">time</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">get_uri_md5</span><span class="p">(</span><span class="n">uri</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="n">m</span> <span class="o">=</span> <span class="n">hashlib</span><span class="o">.</span><span class="n">md5</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">m</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">uri</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="s1">&#39;utf-8&#39;</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">m</span><span class="o">.</span><span class="n">hexdigest</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&#34;__main__&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># print(get_uri_md5(&#34;/gmp-model/&#34;))</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">## 执行....</span>
</span></span><span class="line"><span class="cl">    <span class="n">get_all_gitalk_issues</span><span class="p">(</span><span class="n">token</span><span class="p">,</span> <span class="n">username</span><span class="p">,</span> <span class="n">repo_name</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">get_post_titles</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">init_gitalk</span><span class="p">()</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>在 github Actions 中执行：</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220404/0cfea81fd2804aeca5099c364779dda8.png?imageView2/0/q/75%7cwatermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" title="github actions build" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220404/0cfea81fd2804aeca5099c364779dda8.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-sub-html="<h2>github actions build</h2><p>github actions build</p>">
        
    </a><figcaption class="image-caption">github actions build</figcaption>
    </figure></p>
<p>完整的 Action
文件可以参考 <a href="https://github.com/xiaobinqt/xiaobinqt.github.io/blob/main/.github/workflows/ci.yml" target="_blank" rel="noopener noreferrer">https://github.com/xiaobinqt/xiaobinqt.github.io/blob/main/.github/workflows/ci.yml</a></p>
<h2 id="参考" class="headerLink">
    <a href="#%e5%8f%82%e8%80%83" class="header-mark"></a>参考</h2><ul>
<li><a href="https://draveness.me/git-comments-initialize/" target="_blank" rel="noopener noreferrer">自动初始化 Gitalk 和 Gitment 评论</a></li>
<li><a href="https://www.lshell.com/post/use-github-action-and-python-to-automatically-initialize-gitalk-comments/" target="_blank" rel="noopener noreferrer">利用 Github Action 自动初始化 Gitalk 评论之Python篇</a></li>
</ul>
]]></description>
</item></channel>
</rss>
