<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Low-Code - 标签 - xiaobinqt 博客 - 技术改变生活</title>
        <link>https://www.xiaobinqt.cn/tags/low-code/</link>
        <description>Low-Code - 标签 - xiaobinqt 博客 - 技术改变生活</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>xiaobinqt@163.com (xiaobinqt)</managingEditor>
            <webMaster>xiaobinqt@163.com (xiaobinqt)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 01 Nov 2021 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://www.xiaobinqt.cn/tags/low-code/" rel="self" type="application/rss+xml" /><item>
    <title>Node-RED 节点开发</title>
    <link>https://www.xiaobinqt.cn/node-red-glance/</link>
    <pubDate>Mon, 01 Nov 2021 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/node-red-glance/</guid>
    <description><![CDATA[<h2 id="概述" class="headerLink">
    <a href="#%e6%a6%82%e8%bf%b0" class="header-mark"></a>概述</h2><p>Node-RED 是构建物联网 (IOT,Internet of Things) 应用程序的一个强大工具，其重点是简化代码块的“连接&quot;以执行任务。它使用可视 化编程方法，允许开发人员将预定义的代码块（称为“节点”，Node)
连接起来执行任务。连接的节点，通常是输入节点、处理节点和输出节点的组合，当它们连接在一起时，构成一个“流”(Flows)。</p>
<h2 id="安装node-red" class="headerLink">
    <a href="#%e5%ae%89%e8%a3%85node-red" class="header-mark"></a>安装node-red</h2><p>安装 node-red 的方式大致有 2 种，使用 docker 和 npm ，docker 安装可以<a href="https://hub.docker.com/r/nodered/node-red" target="_blank" rel="noopener noreferrer">参考</a>。这里使用 npm 安装。个人觉得在本地调试
npm 比 docker 更方便一点，源码都在本地，docker 的话还需要把目录映射出来。</p>
<p>npm 安装直接一行命令就可以搞定，具体可以<a href="https://www.npmjs.com/package/node-red" target="_blank" rel="noopener noreferrer">参考</a></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">npm i node-red
</span></span></code></pre></td></tr></table>
</div>
</div><p>安装成功后，会在用户目录下生成一个 .node-red 目录，我用的是 Windows 系统，所以这里的目录是 <code>C:\Users\weibin\.node-red</code>，这个目录下有配置文件 <code>settings.js</code>，里面有一些
node-red 配置项，比如默认端口等。</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220401/b9f737df274442a7b420a3f42c21e28d.png?imageView2/0/q/75%7cwatermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" title="node-red 目录" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220401/b9f737df274442a7b420a3f42c21e28d.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-sub-html="<h2>node-red 目录</h2><p>node-red 目录</p>">
        
    </a><figcaption class="image-caption">node-red 目录</figcaption>
    </figure></p>
<h2 id="启动" class="headerLink">
    <a href="#%e5%90%af%e5%8a%a8" class="header-mark"></a>启动</h2><p>安装完成后，直接执行</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">node-red
</span></span></code></pre></td></tr></table>
</div>
</div><p>就可以启动服务。</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220401/3d6ba253b0b143299d2dc813b5f80d26.png?imageView2/0/q/75%7cwatermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" title="cmd 启动 node-red" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220401/3d6ba253b0b143299d2dc813b5f80d26.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-sub-html="<h2>cmd 启动 node-red</h2><p>cmd 启动 node-red</p>">
        
    </a><figcaption class="image-caption">cmd 启动 node-red</figcaption>
    </figure></p>
<p>node-red 的默认端口是 <code>1880</code>，直接用浏览器访问 <code>http://127.0.0.1:1880</code> 就可以看到 node-red 的页面。</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220401/91898a6735a64fb58df297e07d8b9f63.png?imageView2/0/q/75%7cwatermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" title="node-red 界面" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220401/91898a6735a64fb58df297e07d8b9f63.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-sub-html="<h2>node-red 界面</h2><p>node-red 界面</p>">
        
    </a><figcaption class="image-caption">node-red 界面</figcaption>
    </figure></p>
<h2 id="创建自定义节点" class="headerLink">
    <a href="#%e5%88%9b%e5%bb%ba%e8%87%aa%e5%ae%9a%e4%b9%89%e8%8a%82%e7%82%b9" class="header-mark"></a>创建自定义节点</h2><p>每一个 node-red 节点都是一个 npm 包，开发 npm 节点跟开发 npm 组件包是一样。</p>
<p>一个 node-red 节点主要包括两个文件，一个是 html 文件，一个是 js 文件。html 是界面配置，js 处理逻辑，加上 npm 的 package.json 文件，正常<strong>三个文件就可以实现一个 node-red 节点</strong>。</p>
<h3 id="加法器节点开发" class="headerLink">
    <a href="#%e5%8a%a0%e6%b3%95%e5%99%a8%e8%8a%82%e7%82%b9%e5%bc%80%e5%8f%91" class="header-mark"></a>加法器节点开发</h3><p>我们创建一个自定义节点实现一个加法器，输入两个数字，输出两个数字的和。</p>
<h3 id="新建项目" class="headerLink">
    <a href="#%e6%96%b0%e5%bb%ba%e9%a1%b9%e7%9b%ae" class="header-mark"></a>新建项目</h3><p>我们新建一个节点项目 node-sum，这个项目随便放在那个目录下都行，这里我的目录是 <code>D:\tmp\node-sum</code>。</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220401/41153959469246afa75dca44d467a863.png?imageView2/0/q/75%7cwatermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" title="新建项目" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220401/41153959469246afa75dca44d467a863.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-sub-html="<h2>新建项目</h2><p>新建项目</p>">
        
    </a><figcaption class="image-caption">新建项目</figcaption>
    </figure></p>
<h3 id="npm-初始化" class="headerLink">
    <a href="#npm-%e5%88%9d%e5%a7%8b%e5%8c%96" class="header-mark"></a>npm 初始化</h3><p>切到项目目录下，执行</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">npm init
</span></span></code></pre></td></tr></table>
</div>
</div><p>将项目进行 npm 初始化，然后根据提示填写即可。</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220401/c0026a5e7cd34a4bb1bdcdbeeb5b4379.png?imageView2/0/q/75%7cwatermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" title="npm init" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220401/c0026a5e7cd34a4bb1bdcdbeeb5b4379.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-sub-html="<h2>npm init</h2><p>npm init</p>">
        
    </a><figcaption class="image-caption">npm init</figcaption>
    </figure></p>
<p>用 IDE 打开 node-sum 项目就可以看到已经给我们初始化好了 package.json 文件。</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220401/4be9b27c770847b4ae7d46888eaefb48.png?imageView2/0/q/75%7cwatermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" title="package.json" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220401/4be9b27c770847b4ae7d46888eaefb48.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-sub-html="<h2>package.json</h2><p>package.json</p>">
        
    </a><figcaption class="image-caption">package.json</figcaption>
    </figure></p>
<h3 id="功能实现" class="headerLink">
    <a href="#%e5%8a%9f%e8%83%bd%e5%ae%9e%e7%8e%b0" class="header-mark"></a>功能实现</h3><p>sum.html</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">script</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text/javascript&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nx">RED</span><span class="p">.</span><span class="nx">nodes</span><span class="p">.</span><span class="nx">registerType</span><span class="p">(</span><span class="s1">&#39;sum&#39;</span><span class="p">,</span> <span class="p">{</span> <span class="c1">// 这个值 必须和 js 中 RED.nodes.registerType 的值一致
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nx">category</span><span class="o">:</span> <span class="s1">&#39;自定义节点&#39;</span><span class="p">,</span> <span class="c1">// 分类
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nx">color</span><span class="o">:</span> <span class="s1">&#39;#a6bbcf&#39;</span><span class="p">,</span> <span class="c1">// 节点颜色
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nx">defaults</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nx">name</span><span class="o">:</span> <span class="p">{</span><span class="nx">value</span><span class="o">:</span> <span class="s2">&#34;&#34;</span><span class="p">},</span> <span class="c1">// name 默认是空
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="nx">add1</span><span class="o">:</span> <span class="p">{</span><span class="nx">value</span><span class="o">:</span> <span class="mi">0</span><span class="p">},</span> <span class="c1">// add1 默认值 0
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="nx">add2</span><span class="o">:</span> <span class="p">{</span><span class="nx">value</span><span class="o">:</span> <span class="mi">0</span><span class="p">},</span> <span class="c1">// add2 默认值 0
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="p">},</span>
</span></span><span class="line"><span class="cl">        <span class="nx">inputs</span><span class="o">:</span> <span class="mi">0</span><span class="p">,</span> <span class="c1">// 节点有多少输入 0 或者多个
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nx">outputs</span><span class="o">:</span> <span class="mi">1</span><span class="p">,</span> <span class="c1">// 节点有多少输出 0 或者多个
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nx">icon</span><span class="o">:</span> <span class="s2">&#34;file.png&#34;</span><span class="p">,</span> <span class="c1">// 节点使用的图标
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nx">paletteLabel</span><span class="o">:</span> <span class="s2">&#34;加法器&#34;</span><span class="p">,</span> <span class="c1">// 节点显示的名称
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nx">label</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span> <span class="c1">// 节点的工作区的标签
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">name</span> <span class="o">||</span> <span class="s2">&#34;加法器&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">},</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// 钩子函数,双节节点调出 template 时触发
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nx">oneditprepare</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;oneditprepare 被调用&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">},</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// 钩子函数,点击 template 中的完成按钮时触发
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nx">oneditsave</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;oneditsave 被调用&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">});</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c">&lt;!--data-template-name 必须和 js 中 RED.nodes.registerType 的值一致 --&gt;</span>
</span></span><span class="line"><span class="cl"><span class="c">&lt;!--template 是模板，可以理解成表单，节点需要的信息可以从这里输入--&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">script</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text/html&#34;</span> <span class="na">data-template-name</span><span class="o">=</span><span class="s">&#34;sum&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="o">&lt;</span><span class="nx">div</span> <span class="kr">class</span><span class="o">=</span><span class="s2">&#34;form-row&#34;</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="o">&lt;</span><span class="nx">label</span> <span class="k">for</span><span class="o">=</span><span class="s2">&#34;node-input-name&#34;</span><span class="o">&gt;&lt;</span><span class="nx">i</span> <span class="kr">class</span><span class="o">=</span><span class="s2">&#34;fa fa-tag&#34;</span><span class="o">&gt;&lt;</span><span class="err">/i&gt; Name&lt;/label&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&#34;text&#34;</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&#34;node-input-name&#34;</span> <span class="nx">placeholder</span><span class="o">=</span><span class="s2">&#34;Name&#34;</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="o">&lt;</span><span class="err">/div&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="o">&lt;</span><span class="nx">div</span> <span class="kr">class</span><span class="o">=</span><span class="s2">&#34;form-row&#34;</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="o">&lt;</span><span class="nx">label</span> <span class="k">for</span><span class="o">=</span><span class="s2">&#34;node-input-add1&#34;</span><span class="o">&gt;&lt;</span><span class="nx">i</span> <span class="kr">class</span><span class="o">=</span><span class="s2">&#34;fa fa-tag&#34;</span><span class="o">&gt;&lt;</span><span class="err">/i&gt;加数1&lt;/label&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&#34;text&#34;</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&#34;node-input-add1&#34;</span> <span class="nx">placeholder</span><span class="o">=</span><span class="s2">&#34;加数1&#34;</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="o">&lt;</span><span class="err">/div&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="o">&lt;</span><span class="nx">div</span> <span class="kr">class</span><span class="o">=</span><span class="s2">&#34;form-row&#34;</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="o">&lt;</span><span class="nx">label</span> <span class="k">for</span><span class="o">=</span><span class="s2">&#34;node-input-add2&#34;</span><span class="o">&gt;&lt;</span><span class="nx">i</span> <span class="kr">class</span><span class="o">=</span><span class="s2">&#34;fa fa-tag&#34;</span><span class="o">&gt;&lt;</span><span class="err">/i&gt;加数2&lt;/label&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&#34;text&#34;</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&#34;node-input-add2&#34;</span> <span class="nx">placeholder</span><span class="o">=</span><span class="s2">&#34;加数2&#34;</span><span class="o">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="o">&lt;</span><span class="err">/div&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c">&lt;!--data-help-name 必须和 js 中 RED.nodes.registerType 的值一致 --&gt;</span>
</span></span><span class="line"><span class="cl"><span class="c">&lt;!--help 是节点的帮助文档--&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">script</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text/html&#34;</span> <span class="na">data-help-name</span><span class="o">=</span><span class="s">&#34;sum&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="nx">一个简单的加法器</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<p>sum.js</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">RED</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kd">function</span> <span class="nx">Sum</span><span class="p">(</span><span class="nx">config</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">RED</span><span class="p">.</span><span class="nx">nodes</span><span class="p">.</span><span class="nx">createNode</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="nx">config</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="kd">var</span> <span class="nx">node</span> <span class="o">=</span> <span class="k">this</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">// 获取输入的参数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="kd">let</span> <span class="nx">add1</span> <span class="o">=</span> <span class="nb">parseInt</span><span class="p">(</span><span class="nx">config</span><span class="p">.</span><span class="nx">add1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="kd">let</span> <span class="nx">add2</span> <span class="o">=</span> <span class="nb">parseInt</span><span class="p">(</span><span class="nx">config</span><span class="p">.</span><span class="nx">add2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="nx">node</span><span class="p">.</span><span class="nx">send</span><span class="p">({</span> <span class="c1">// 向下一个节点输出信息
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="nx">payload</span><span class="o">:</span> <span class="sb">`</span><span class="si">${</span><span class="nx">add1</span><span class="si">}</span><span class="sb"> + </span><span class="si">${</span><span class="nx">add2</span><span class="si">}</span><span class="sb"> 结果为 `</span> <span class="o">+</span> <span class="p">(</span><span class="nx">add1</span> <span class="o">+</span> <span class="nx">add2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">});</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="nx">node</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;input&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">msg</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// 接收上游节点接收消息
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">        <span class="p">});</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// 注册一个节点 sum,注册的节点不能重复也就是说同一个 node-red 项目不能有 2 个 registerType sum 节点
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nx">RED</span><span class="p">.</span><span class="nx">nodes</span><span class="p">.</span><span class="nx">registerType</span><span class="p">(</span><span class="s2">&#34;sum&#34;</span><span class="p">,</span> <span class="nx">Sum</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<p>需要在 package.json 文件里添加 node-red 信息，完整的 package.json 如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;node-sum&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;version&#34;</span><span class="p">:</span> <span class="s2">&#34;1.0.0&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;description&#34;</span><span class="p">:</span> <span class="s2">&#34;node-red 加法器&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;main&#34;</span><span class="p">:</span> <span class="s2">&#34;index.js&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;scripts&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;test&#34;</span><span class="p">:</span> <span class="s2">&#34;echo \&#34;Error: no test specified\&#34; &amp;&amp; exit 1&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;keywords&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;node-red&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;add&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="p">],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;author&#34;</span><span class="p">:</span> <span class="s2">&#34;xiaobinqt@163.com&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;license&#34;</span><span class="p">:</span> <span class="s2">&#34;ISC&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;node-red&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;nodes&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;sum&#34;</span><span class="p">:</span> <span class="s2">&#34;sum.js&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>在 package.json 中添加的 node-red 信息是固定写法，可以理解成向 node-red 中注册了 nodes 的名称为 sum，注册的 js 文件为 sum.js。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">&#34;node-red&#34;: {
</span></span><span class="line"><span class="cl">    &#34;nodes&#34;: {
</span></span><span class="line"><span class="cl">      &#34;sum&#34;: &#34;sum.js&#34;
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">  }
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="本地安装" class="headerLink">
    <a href="#%e6%9c%ac%e5%9c%b0%e5%ae%89%e8%a3%85" class="header-mark"></a>本地安装</h3><p>可以通过 <code>npm i </code> 安装刚才的 sum 节点到 node-red 中。<strong>切到<code>.node-red</code> 目录</strong>下，执行</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">npm i d:\tmp\node-sum
</span></span></code></pre></td></tr></table>
</div>
</div><p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220401/ca420dae84014b20b6240bbf3bc43cea.png?imageView2/0/q/75%7cwatermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" title="安转本地节点并重启" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220401/ca420dae84014b20b6240bbf3bc43cea.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-sub-html="<h2>安转本地节点并重启</h2><p>安转本地节点并重启</p>">
        
    </a><figcaption class="image-caption">安转本地节点并重启</figcaption>
    </figure></p>
<p>然后重启 node-red 就可以看到刚才安装的节点了。</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220401/b6e7c77292a64f69924bf9e29c758748.png?imageView2/0/q/75%7cwatermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" title="节点安装成功" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220401/b6e7c77292a64f69924bf9e29c758748.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-sub-html="<h2>节点安装成功</h2><p>节点安装成功</p>">
        
    </a><figcaption class="image-caption">节点安装成功</figcaption>
    </figure></p>
<h3 id="测试功能" class="headerLink">
    <a href="#%e6%b5%8b%e8%af%95%e5%8a%9f%e8%83%bd" class="header-mark"></a>测试功能</h3><p>把节点拖到工作区，双击节点（会触发<code>oneditprepare</code>函数）打开编辑区</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220401/4b0152769e1a4380bdd53f293076ef10.png?imageView2/0/q/75%7cwatermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" title="双节节点填写编辑区" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220401/4b0152769e1a4380bdd53f293076ef10.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-sub-html="<h2>双节节点填写编辑区</h2><p>双节节点填写编辑区</p>">
        
    </a><figcaption class="image-caption">双节节点填写编辑区</figcaption>
    </figure></p>
<p>填写完编辑区内容后点击完成（会触发<code>oneditsave</code>函数），点击部署就会在调试窗口输出 <code>node.send</code> 信息。</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220401/adc4ec6a9f5442a584eff58a95a07496.png?imageView2/0/q/75%7cwatermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" title="部署" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220401/adc4ec6a9f5442a584eff58a95a07496.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-sub-html="<h2>部署</h2><p>部署</p>">
        
    </a><figcaption class="image-caption">部署</figcaption>
    </figure></p>
<h2 id="参考" class="headerLink">
    <a href="#%e5%8f%82%e8%80%83" class="header-mark"></a>参考</h2><ul>
<li><a href="https://nodered.org/docs/creating-nodes/first-node" target="_blank" rel="noopener noreferrer">Creating your first node</a></li>
<li><a href="https://github.com/node-red/node-red/wiki/Design:-i18n" target="_blank" rel="noopener noreferrer">Design: i18n</a></li>
</ul>
]]></description>
</item></channel>
</rss>
