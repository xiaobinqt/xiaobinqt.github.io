<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Docker - 标签 - xiaobinqt 博客 - 技术改变生活</title>
        <link>https://www.xiaobinqt.cn/tags/docker/</link>
        <description>Docker - 标签 - xiaobinqt 博客 - 技术改变生活</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>xiaobinqt@163.com (xiaobinqt)</managingEditor>
            <webMaster>xiaobinqt@163.com (xiaobinqt)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 21 Aug 2023 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://www.xiaobinqt.cn/tags/docker/" rel="self" type="application/rss+xml" /><item>
    <title>Docker 容器网络分析</title>
    <link>https://www.xiaobinqt.cn/docker-network/</link>
    <pubDate>Mon, 21 Aug 2023 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/docker-network/</guid>
    <description><![CDATA[<!-- author： xiaobinqt -->
<!-- email： xiaobinqt@163.com -->
<!-- https://xiaobinqt.github.io -->
<!-- https://www.xiaobinqt.cn -->
<h2 id="概述" class="headerLink">
    <a href="#%e6%a6%82%e8%bf%b0" class="header-mark"></a>1 概述</h2><p>一个 Linux 容器能看见的“网络栈”，实际上是被隔离在它自己的 Network Namespace 当中的。</p>
<p>而所谓“网络栈”其实包括了：网卡（Network Interface）、回环设备（Loopback Device）、路由表（Routing Table）和 iptables 规则。对于一个进程来说，这些要素，其实就构成了它发起和响应网络请求的基本环境。</p>]]></description>
</item><item>
    <title>Docker bridge 网络与自定义 DNS 解析</title>
    <link>https://www.xiaobinqt.cn/docker-net-custom-dns/</link>
    <pubDate>Wed, 24 May 2023 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/docker-net-custom-dns/</guid>
    <description><![CDATA[<!-- author： xiaobinqt -->
<!-- email： xiaobinqt@163.com -->
<!-- https://xiaobinqt.github.io -->
<!-- https://www.xiaobinqt.cn -->
<h2 id="常见-dns-记录类型" class="headerLink">
    <a href="#%e5%b8%b8%e8%a7%81-dns-%e8%ae%b0%e5%bd%95%e7%b1%bb%e5%9e%8b" class="header-mark"></a>1 常见 DNS 记录类型</h2><ul>
<li>A 记录（Address Record）</li>
</ul>
<p>记录格式：<code>example.com. IN A 192.0.2.1</code>，将域名映射到 IPv4 地址，不包含端口信息。</p>]]></description>
</item><item>
    <title>Docker 安装 mysql8.0</title>
    <link>https://www.xiaobinqt.cn/docker-install-mysql8.0/</link>
    <pubDate>Wed, 08 Sep 2021 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/docker-install-mysql8.0/</guid>
    <description><![CDATA[<!-- author： xiaobinqt -->
<!-- email： xiaobinqt@163.com -->
<!-- https://xiaobinqt.github.io -->
<!-- https://www.xiaobinqt.cn -->
<h2 id="设置镜像源" class="headerLink">
    <a href="#%e8%ae%be%e7%bd%ae%e9%95%9c%e5%83%8f%e6%ba%90" class="header-mark"></a>1 设置镜像源</h2><p>国内的网络环境，使用官方的镜像源，下载速度很慢，所以我们需要使用国内的镜像源。</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">shell</p>]]></description>
</item><item>
    <title>IPv4 forwarding is disabled. Networking will not work</title>
    <link>https://www.xiaobinqt.cn/ipv4-forwarding-is-disabled-networking-will-not-work/</link>
    <pubDate>Sun, 08 Nov 2020 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/ipv4-forwarding-is-disabled-networking-will-not-work/</guid>
    <description><![CDATA[<!-- author： xiaobinqt -->
<!-- email： xiaobinqt@163.com -->
<!-- https://xiaobinqt.github.io -->
<!-- https://www.xiaobinqt.cn -->
<h2 id="问题" class="headerLink">
    <a href="#%e9%97%ae%e9%a2%98" class="header-mark"></a>1 问题</h2><p>今天在操作 docker 时遇到了一个问题<code>IPv4 forwarding is disabled. Networking will not work</code>&#x1f447;</p>
<p><figure><a class="lightgallery" href="/e1bf06fd0d134476833680c7c412da4a_8000363411573178690.png" title="报错信息" data-thumbnail="/e1bf06fd0d134476833680c7c412da4a_8000363411573178690.png" data-sub-html="<h2>报错信息</h2><p>报错信息</p>]]></description>
</item><item>
    <title>WARNING: bridge-nf-call-iptables is disabled</title>
    <link>https://www.xiaobinqt.cn/bridge-nf-call-iptables-is-disabled/</link>
    <pubDate>Thu, 06 Aug 2020 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/bridge-nf-call-iptables-is-disabled/</guid>
    <description><![CDATA[<!-- author： xiaobinqt -->
<!-- email： xiaobinqt@163.com -->
<!-- https://xiaobinqt.github.io -->
<!-- https://www.xiaobinqt.cn -->
<h2 id="问题" class="headerLink">
    <a href="#%e9%97%ae%e9%a2%98" class="header-mark"></a>1 问题</h2><p>今天在使用 docker 时出现如下问题：</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">shell</p>]]></description>
</item><item>
    <title>Docker Swarm 笔记</title>
    <link>https://www.xiaobinqt.cn/docker-swarm/</link>
    <pubDate>Sun, 14 Jun 2020 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/docker-swarm/</guid>
    <description><![CDATA[<!-- author： xiaobinqt -->
<!-- email： xiaobinqt@163.com -->
<!-- https://xiaobinqt.github.io -->
<!-- https://www.xiaobinqt.cn -->
<p>作为容器集群管理器，Swarm 最大的优势之一就是原生支持 Docker API。各种基于标准 API 的工具比如 Compose、Docker
SDK、各种管理软件，甚至 Docker 本身等都可以很容易的与 Swarm
进行集成，这大大方便了用户将原先基于单节点的系统移植到 Swarm 上。同时 Swarm 内置了对 Docker 网络插件的支持，这样就可以很容易地<strong>部署跨主机的容器集群服务</strong>。</p>]]></description>
</item><item>
    <title>Docker 备忘</title>
    <link>https://www.xiaobinqt.cn/docker-summary-of-common-usage/</link>
    <pubDate>Wed, 06 May 2020 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/docker-summary-of-common-usage/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220506/3305e58fbade4acc862591389ce7cd0f.png" referrerpolicy="no-referrer">
            </div><!-- author： xiaobinqt -->
<!-- email： xiaobinqt@163.com -->
<!-- https://xiaobinqt.github.io -->
<!-- https://www.xiaobinqt.cn -->
<h2 id="root-用户执行" class="headerLink">
    <a href="#root-%e7%94%a8%e6%88%b7%e6%89%a7%e8%a1%8c" class="header-mark"></a>1 root 用户执行</h2><p>有时进入容器后，用户就是变成非 root 用户，这种时候又没有密码，在执行一些操作的时候就会非常不方便，这是可以用 <code>-u root</code> 来指定用户。</p>]]></description>
</item><item>
    <title>Docker Compose 笔记</title>
    <link>https://www.xiaobinqt.cn/docker-compose/</link>
    <pubDate>Tue, 21 May 2019 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/docker-compose/</guid>
    <description><![CDATA[<!-- author： xiaobinqt -->
<!-- email： xiaobinqt@163.com -->
<!-- https://xiaobinqt.github.io -->
<!-- https://www.xiaobinqt.cn -->
<p>在日常工作中，经常会碰到需要多个容器相互配合来完成某项任务的情况。例如要实现一个 Web 项目，除了 Web 服务容器本身，往往还需要再加上后端的数据库服务容器，甚至还包括前端的负载均衡容器等。Compose
恰好满足了这样的需求。Compose 定位是<strong>定义和运行多个Docker容器的应用</strong>。</p>]]></description>
</item><item>
    <title>slim、stretch、buster、jessie、alpine、debian、ubuntu、centOS、fedora、buildpack-deps</title>
    <link>https://www.xiaobinqt.cn/docker-slim-stretch-buster-jessie/</link>
    <pubDate>Thu, 10 May 2018 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/docker-slim-stretch-buster-jessie/</guid>
    <description><![CDATA[<!-- author： xiaobinqt -->
<!-- email： xiaobinqt@163.com -->
<!-- https://xiaobinqt.github.io -->
<!-- https://www.xiaobinqt.cn -->
<h2 id="版本代号" class="headerLink">
    <a href="#%e7%89%88%e6%9c%ac%e4%bb%a3%e5%8f%b7" class="header-mark"></a>1 版本代号</h2><p>我太难了，搞这么多代号干啥&#x1f622;</p>
<p>在写 Dockerfile 引用基础镜像时经常会看到这样的写法：</p>]]></description>
</item><item>
    <title>Docker 学习笔记</title>
    <link>https://www.xiaobinqt.cn/docker-glance/</link>
    <pubDate>Sun, 18 Mar 2018 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/docker-glance/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220428/21100b3b2f8b4afb9e6df1a48bee2c33.png" referrerpolicy="no-referrer">
            </div><!-- author： xiaobinqt -->
<!-- email： xiaobinqt@163.com -->
<!-- https://xiaobinqt.github.io -->
<!-- https://www.xiaobinqt.cn -->
<h2 id="虚拟化" class="headerLink">
    <a href="#%e8%99%9a%e6%8b%9f%e5%8c%96" class="header-mark"></a>1 虚拟化</h2><h3 id="硬件虚拟化" class="headerLink">
    <a href="#%e7%a1%ac%e4%bb%b6%e8%99%9a%e6%8b%9f%e5%8c%96" class="header-mark"></a>1.1 硬件虚拟化</h3><p>硬件虚拟化，指物理硬件本身就提供虚拟化的支持。</p>
<p>比如，A 平台的 CPU，能够将 B 平台的指令集转换为自身的指令集执行，并给程序完全运行在 B 平台上的感觉。又或者，CPU 能够自身模拟裂变，让程序或者操作系统认为存在多个 CPU，进而能够同时运行多个程序或者操作系统。这些都是硬件虚拟化的体现。</p>]]></description>
</item></channel>
</rss>
