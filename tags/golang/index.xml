<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>golang - 标签 - xiaobinqt 博客 - 技术改变生活</title>
        <link>https://www.xiaobinqt.cn/tags/golang/</link>
        <description>golang - 标签 - xiaobinqt 博客 - 技术改变生活</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>xiaobinqt@163.com (xiaobinqt)</managingEditor>
            <webMaster>xiaobinqt@163.com (xiaobinqt)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 29 Aug 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://www.xiaobinqt.cn/tags/golang/" rel="self" type="application/rss+xml" /><item>
    <title>高并发分布式架构演进</title>
    <link>https://www.xiaobinqt.cn/highly-concurrent-architecture-evolution/</link>
    <pubDate>Mon, 29 Aug 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://www.xiaobinqt.cn/highly-concurrent-architecture-evolution/</guid>
    <description><![CDATA[原文链接：https://segmentfault.com/a/1190000018626163 0. 目录和说明 文章在介绍一些基本概念后，按照以]]></description>
</item><item>
    <title>Go GC 原理</title>
    <link>https://www.xiaobinqt.cn/go-gc/</link>
    <pubDate>Wed, 06 Apr 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://www.xiaobinqt.cn/go-gc/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220407/e9a10f9b61de47f8bdf2db1d0bb22bb2.png" referrerpolicy="no-referrer">
            </div>垃圾回收（Garbage Collection，GC）是编程语言中提供的自动的内存管理机制，自动释放不需要的内存对象，让出存储器资源。GC 过程]]></description>
</item><item>
    <title>Go GMP 模型</title>
    <link>https://www.xiaobinqt.cn/gmp-model/</link>
    <pubDate>Wed, 16 Mar 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://www.xiaobinqt.cn/gmp-model/</guid>
    <description><![CDATA[进程、线程、协程的区别 进程 进程是操作系统对一个正在运行的程序的一种抽象，进程是资源分配的最小单位。 进程在操作系统中的抽象表现 进程存在的意义是]]></description>
</item><item>
    <title>Go 常用命令</title>
    <link>https://www.xiaobinqt.cn/go-build-args/</link>
    <pubDate>Wed, 16 Mar 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://www.xiaobinqt.cn/go-build-args/</guid>
    <description><![CDATA[常用编译参数 参数 说明 -o 指定输出可执行文件名 -v 编译时显示包名，可以理解成输出详细编译信息 -race 开启竞态检测 *.go 编译当前目录下的所有go文件，也可以写]]></description>
</item><item>
    <title>grpc 入门应用</title>
    <link>https://www.xiaobinqt.cn/grpc-demo/</link>
    <pubDate>Sat, 05 Mar 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://www.xiaobinqt.cn/grpc-demo/</guid>
    <description><![CDATA[RPC 是一种跨语言的协议，它可以让我们在不同的语言之间进行通信。 远程过程调用（英语：Remote Procedure Call，缩写为 RPC）是一个计算机通信协议。]]></description>
</item><item>
    <title>running gcc failed: exit status 1</title>
    <link>https://www.xiaobinqt.cn/build-running-gcc-failed/</link>
    <pubDate>Thu, 10 Feb 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://www.xiaobinqt.cn/build-running-gcc-failed/</guid>
    <description><![CDATA[今天在编译 go 项目时出现了如下错误： 1 2 3 4 /usr/local/go/pkg/tool/linux_amd64/link: running gcc failed: exit status 1 /usr/bin/ld: cannot find -lpthread /usr/bin/ld: cannot find -lc collect2: error: ld returned 1 exit status 解决办法： 1 yum install glibc-static.x86_64 -y]]></description>
</item><item>
    <title>Go 实现下载文件的断点续传</title>
    <link>https://www.xiaobinqt.cn/go-breakpoint-resume/</link>
    <pubDate>Fri, 21 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://www.xiaobinqt.cn/go-breakpoint-resume/</guid>
    <description><![CDATA[断点续传 断点继传就是下载的文件可以在你下载了一半的时候暂停，下一次下载的时候可以从你暂停的地方继续下载，不用从头开始下载。 服务端 martini 实现 martini 框架]]></description>
</item><item>
    <title>Go 使用原生 Swagger</title>
    <link>https://www.xiaobinqt.cn/go-swagger/</link>
    <pubDate>Mon, 27 Dec 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://www.xiaobinqt.cn/go-swagger/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220519/a12951789f2d401bab720fd3d4bb6472.png" referrerpolicy="no-referrer">
            </div>Swagger 是一个规范且完整的框架，用于生成、描述、调用和可视化 RESTful 风格的 Web 服务。 当通过 Swagger 进行正确定义，用户可以理解远程服务并使用最少实现逻辑与远程服务]]></description>
</item><item>
    <title>Go 使用 sse</title>
    <link>https://www.xiaobinqt.cn/go-use-sse/</link>
    <pubDate>Wed, 08 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://www.xiaobinqt.cn/go-use-sse/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220826/8b29290860a04491bfdaa11a5b5e0f28.png" referrerpolicy="no-referrer">
            </div>SSE 的本质 严格地说，HTTP 协议无法做到服务器主动推送信息。但是，有一种变通方法，就是服务器向客户端声明，接下来要发送的是流信息（stream]]></description>
</item><item>
    <title>go 函数式选项模式</title>
    <link>https://www.xiaobinqt.cn/functional-options-pattern/</link>
    <pubDate>Mon, 23 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://www.xiaobinqt.cn/functional-options-pattern/</guid>
    <description><![CDATA[Go 语言没有构造函数，一般通过定义 New 函数来充当构造函数。但是，如果结构有较多字段，要初始化这些字段，就有很多种方式，有一种方式被认为是最优雅的]]></description>
</item></channel>
</rss>
