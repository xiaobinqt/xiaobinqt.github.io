<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web on xiaobinqt 博客 - 技术改变生活</title>
    <link>https://www.xiaobinqt.cn/tags/web/</link>
    <description>Recent content in Web on xiaobinqt 博客 - 技术改变生活</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <managingEditor>xiaobinqt@163.com (xiaobinqt)</managingEditor>
    <webMaster>xiaobinqt@163.com (xiaobinqt)</webMaster>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sat, 17 Aug 2024 21:12:47 +0800</lastBuildDate>
    <atom:link href="https://www.xiaobinqt.cn/tags/web/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>session cookie token 的区别</title>
      <link>https://www.xiaobinqt.cn/session-cookie-token-difference/</link>
      <pubDate>Sat, 11 Jun 2022 00:00:00 +0000</pubDate><author>xiaobinqt@163.com (xiaobinqt)</author>
      <guid>https://www.xiaobinqt.cn/session-cookie-token-difference/</guid>
      <description>&lt;!-- author： xiaobinqt --&gt;&#xA;&lt;!-- email： xiaobinqt@163.com --&gt;&#xA;&lt;!-- https://xiaobinqt.github.io --&gt;&#xA;&lt;!-- https://www.xiaobinqt.cn --&gt;&#xA;&lt;h2 id=&#34;cookie-和-session&#34; class=&#34;headerLink&#34;&gt;&#xA;    &lt;a href=&#34;#cookie-%e5%92%8c-session&#34; class=&#34;header-mark&#34;&gt;&lt;/a&gt;16 Cookie 和 Session&lt;/h2&gt;&lt;p&gt;HTTP 协议是一种&lt;code&gt;无状态协议&lt;/code&gt;，即每次服务端接收到客户端的请求时，都是一个全新的请求，服务器并不知道客户端的历史请求记录；Session 和 Cookie 的主要目的就是为了弥补 HTTP 的无状态特性。&lt;/p&gt;</description>
    </item>
    <item>
      <title>OAuth2.0的理解与应用</title>
      <link>https://www.xiaobinqt.cn/oauth2/</link>
      <pubDate>Tue, 22 Mar 2022 00:00:00 +0000</pubDate><author>xiaobinqt@163.com (xiaobinqt)</author>
      <guid>https://www.xiaobinqt.cn/oauth2/</guid>
      <description>&lt;h2 id=&#34;什么是-oauth20&#34; class=&#34;headerLink&#34;&gt;&#xA;    &lt;a href=&#34;#%e4%bb%80%e4%b9%88%e6%98%af-oauth20&#34; class=&#34;header-mark&#34;&gt;&lt;/a&gt;22 什么是 OAuth2.0&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;OAuth 的核心就是向第三方应用颁发令牌&lt;/strong&gt;，比如网站 A 想用 Github 的信息，那么对于 Github 来说，网站 A 就是第三方应用。&lt;/p&gt;&#xA;&lt;p&gt;第三方应用申请令牌之前，都必须先到系统备案，比如申请 Github 的令牌，得先到&lt;a href=&#34;https://github.com/settings/applications/new&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;github备案登记&lt;/a&gt;， 说明自己的身份，然后会拿到两个身份识别码：客户端 ID（client ID）和客户端密钥（client secret）。这是为了防止令牌被滥用，没有备案过的第三方应用，是不会拿到令牌的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>JavaScript heap out of memory</title>
      <link>https://www.xiaobinqt.cn/node-oom/</link>
      <pubDate>Wed, 16 Mar 2022 00:00:00 +0000</pubDate><author>xiaobinqt@163.com (xiaobinqt)</author>
      <guid>https://www.xiaobinqt.cn/node-oom/</guid>
      <description>&lt;p&gt;刚在打包项目时执行 &lt;code&gt;yarn run build &lt;/code&gt; 时出现了 oom 的情况，具体报错信息如下：&lt;/p&gt;&#xA;&lt;p&gt;&lt;figure&gt;&lt;a class=&#34;lightgallery&#34; href=&#34;https://www.xiaobinqt.cn/90ed6000706b48e39d4da241245dd9f0_5783146336285632683.png&#34; title=&#34;JavaScript heap out of memory&#34; data-thumbnail=&#34;/90ed6000706b48e39d4da241245dd9f0_5783146336285632683.png&#34; data-sub-html=&#34;&lt;h2&gt; &lt;/h2&gt;&lt;p&gt;JavaScript heap out of memory&lt;/p&gt;&#34;&gt;&lt;img  loading=&#34;lazy&#34; src=&#39;https://www.xiaobinqt.cn/90ed6000706b48e39d4da241245dd9f0_5783146336285632683.png&#39; srcset=&#34;https://www.xiaobinqt.cn/90ed6000706b48e39d4da241245dd9f0_5783146336285632683_hu_a1912c5a44f593fb.webp 800w, https://www.xiaobinqt.cn/90ed6000706b48e39d4da241245dd9f0_5783146336285632683_hu_ff223f04dabb624e.webp 1200w, https://www.xiaobinqt.cn/90ed6000706b48e39d4da241245dd9f0_5783146336285632683_hu_b7230e40aaabfe1f.webp 1600w&#34;  alt=&#34;JavaScript heap out of memory&#34; height=&#34;867&#34; width=&#34;1778&#34;&gt;&lt;/a&gt;&lt;figcaption class=&#34;image-caption&#34;&gt; &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&lt;/p&gt;&#xA;&lt;p&gt;我的环境是 win10 专业版 WSL。&lt;/p&gt;&#xA;&lt;p&gt;解决办法，设置 &lt;code&gt;export NODE_OPTIONS=--max_old_space_size=4096&lt;/code&gt;，设置完之后重新执行 &lt;code&gt;yarn run build &lt;/code&gt; 即可。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ajax 在请求时携带 cookie 信息</title>
      <link>https://www.xiaobinqt.cn/ajax-req-add-cookie/</link>
      <pubDate>Tue, 01 Mar 2022 00:00:00 +0000</pubDate><author>xiaobinqt@163.com (xiaobinqt)</author>
      <guid>https://www.xiaobinqt.cn/ajax-req-add-cookie/</guid>
      <description>&lt;p&gt;最近有个需求在使用 $.ajax 时需要把 cookie 信息也带着，google 下发现可以这么写：&lt;/p&gt;&#xA;&lt;div class=&#34;code-block highlight is-open show-line-numbers  tw-group tw-my-2&#34;&gt;&#xA;  &lt;div class=&#34;&#xA;    &#xA;    tw-flex &#xA;    tw-flex-row&#xA;    tw-flex-1 &#xA;    tw-justify-between &#xA;    tw-w-full tw-bg-bgColor-secondary&#xA;    &#34;&gt;      &#xA;    &lt;button &#xA;      class=&#34;&#xA;        code-block-button&#xA;        tw-mx-2 &#xA;        tw-flex&#xA;        tw-flex-row&#xA;        tw-flex-1&#34;&#xA;      aria-hidden=&#34;true&#34;&gt;&#xA;          &lt;div class=&#34;group-[.is-open]:tw-rotate-90 tw-transition-[transform] tw-duration-500 tw-ease-in-out print:!tw-hidden tw-w-min tw-h-min tw-my-1 tw-mx-1&#34;&gt;&lt;svg class=&#34;icon&#34;&#xA;    xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 320 512&#34;&gt;&lt;!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --&gt;&lt;path d=&#34;M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z&#34;/&gt;&lt;/svg&gt;&lt;/div&gt;&#xA;          &lt;p class=&#34;tw-select-none !tw-my-1&#34;&gt;javascript&lt;/p&gt;</description>
    </item>
    <item>
      <title>跨域问题</title>
      <link>https://www.xiaobinqt.cn/cross-domain/</link>
      <pubDate>Mon, 18 Mar 2019 00:00:00 +0000</pubDate><author>xiaobinqt@163.com (xiaobinqt)</author>
      <guid>https://www.xiaobinqt.cn/cross-domain/</guid>
      <description>&lt;!-- author： xiaobinqt --&gt;&#xA;&lt;!-- email： xiaobinqt@163.com --&gt;&#xA;&lt;!-- https://xiaobinqt.github.io --&gt;&#xA;&lt;!-- https://www.xiaobinqt.cn --&gt;&#xA;&lt;h2 id=&#34;同源策略&#34; class=&#34;headerLink&#34;&gt;&#xA;    &lt;a href=&#34;#%e5%90%8c%e6%ba%90%e7%ad%96%e7%95%a5&#34; class=&#34;header-mark&#34;&gt;&lt;/a&gt;1 同源策略&lt;/h2&gt;&lt;p&gt;同源策略是浏览器的一个安全行为，是指浏览器对不同源的脚本或文本的访问方式进行限制。比如，ajax 在进行请求时，浏览器要求当前网页和请求地址必须同源，也就是协议，域名和端口必须相同。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
