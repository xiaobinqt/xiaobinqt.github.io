<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>mysql - 标签 - xiaobinqt 博客 - 技术改变生活</title>
        <link>https://www.xiaobinqt.cn/tags/mysql/</link>
        <description>mysql - 标签 - xiaobinqt 博客 - 技术改变生活</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>xiaobinqt@163.com (xiaobinqt)</managingEditor>
            <webMaster>xiaobinqt@163.com (xiaobinqt)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 01 Aug 2023 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://www.xiaobinqt.cn/tags/mysql/" rel="self" type="application/rss+xml" /><item>
    <title>MySQL 常见问题总结</title>
    <link>https://www.xiaobinqt.cn/mysql-faq/</link>
    <pubDate>Tue, 01 Aug 2023 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/mysql-faq/</guid>
    <description><![CDATA[请简要解释什么是 MySQL 数据库？ MySQL数据库是一种开源的关系型数据库管理系统（RDBMS），它允许用户存储、管理和检索大量结构化数据。MySQL是最受欢迎的数据库管理系统之一，广泛应用于Web应用程序和]]></description>
</item><item>
    <title>MySQL 常见问题（三）</title>
    <link>https://www.xiaobinqt.cn/mysql-faq-3/</link>
    <pubDate>Mon, 11 Jul 2022 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/mysql-faq-3/</guid>
    <description><![CDATA[InnoDB、MyISAM的区别 磁盘文件不同： MyISAM 引擎的表会生成三个磁盘文件： table_name.frm 该文件中存储表的结构信息。table_name.MYD 该文件中存储表的行数据。table_name.MYI 该文件中存储表的]]></description>
</item><item>
    <title>MySQL 常见问题（二）</title>
    <link>https://www.xiaobinqt.cn/mysql-faq-2/</link>
    <pubDate>Sat, 21 May 2022 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/mysql-faq-2/</guid>
    <description><![CDATA[索引数据结构为什么不使用红黑树或B树在 InnoDB 引擎中，索引的底层数据结构是 B+ 树。MySQL 的数据是存储在硬盘的，在查询时一般是不能「一次性」把全部数据加载到内存中。红黑树是「二叉查找树」的变种，一个 Node 节点只]]></description>
</item><item>
    <title>MySQL 为什么使用 B&#43; 树索引</title>
    <link>https://www.xiaobinqt.cn/why-mysql-index-use-btree/</link>
    <pubDate>Fri, 20 May 2022 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/why-mysql-index-use-btree/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://cdn.xiaobinqt.cn/xiaobinqt.io/20221127/8018e68746b147a8bba7dac0c65ae308.png" referrerpolicy="no-referrer">
            </div>前言为什么 MySQL 采用 B+ 树作为索引？ 如果纯粹的猜测 MySQL 数据库索引为什么使用 B+ 树？那么围绕这个问题的回答通常一定是围绕 B+ 树本身是什么，有什么优势这两点去解释这个问题。 这不是我开始这么去想的，看了很多文章都是从这]]></description>
</item><item>
    <title>mysql workbench 查看触发器</title>
    <link>https://www.xiaobinqt.cn/mysql-workbench-show-triggers/</link>
    <pubDate>Wed, 20 Apr 2022 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/mysql-workbench-show-triggers/</guid>
    <description><![CDATA[mysql workbench 是官方推荐的数据库工具，用了很长时间却一直不知道触发器在哪儿😢。 触发器是对单个表的操作，而不是整个数据库的操作，所以 Alter Table 就可以看到触发器： 图1 图2 点这个扳手图标也可以看到触发器，跟 Alter Table 效果一样： 图]]></description>
</item><item>
    <title>Docker 安装 mysql8.0</title>
    <link>https://www.xiaobinqt.cn/docker-install-mysql8.0/</link>
    <pubDate>Wed, 08 Sep 2021 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/docker-install-mysql8.0/</guid>
    <description><![CDATA[设置镜像源国内的网络环境，使用官方的镜像源，下载速度很慢，所以我们需要使用国内的镜像源。 1 cat /etc/docker/daemon.json 如果没有daemon.json文件可以手动创建一个。可以设置中国区镜像或是网易镜像，也可以设置阿里云镜像（]]></description>
</item><item>
    <title>Mysql 服务端如何处理客户端请求</title>
    <link>https://www.xiaobinqt.cn/mysql-server-exec-client-raw-sql/</link>
    <pubDate>Sun, 20 Dec 2020 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/mysql-server-exec-client-raw-sql/</guid>
    <description><![CDATA[不论客户端进程和服务器进程是采用哪种方式进行通信，最后实现的效果都是：客户端进程向服务器进程发送一段文本（MySQL语句），服务器进程处理后再向客户端进程发送一段文本（处理结果）。 那服务器进程对客户端]]></description>
</item><item>
    <title>mysql 存储程序</title>
    <link>https://www.xiaobinqt.cn/mysql-stored-routine/</link>
    <pubDate>Thu, 08 Oct 2020 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/mysql-stored-routine/</guid>
    <description><![CDATA[总览 存储程序 存储程序可以封装一些语句，然后给用户提供一种简单的方式来调用这个存储程序，从而间接地执行某些语句。根据调用方式的不同，可以把存储程序分为存储例程、触发器和事件，存储例程又分为存储函数和存储]]></description>
</item><item>
    <title>MySQL 常见问题（一）</title>
    <link>https://www.xiaobinqt.cn/mysql-simple-faq/</link>
    <pubDate>Thu, 03 Oct 2019 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/mysql-simple-faq/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://cdn.xiaobinqt.cn/xiaobinqt.io/20221117/6d5a8e4d284a409ea3e415a46fcbb393.png" referrerpolicy="no-referrer">
            </div>主键和 UNIQUE 的区别主键和UNIQUE约束都能保证某个列或者列组合的唯一性，但是： 一张表中只能定义一个主键，却可以定义多个UNIQUE约束！ 主键列不允许存放NULL，而声明了UNIQUE属性的列可以存放NU]]></description>
</item><item>
    <title>mysql 常见数据类型</title>
    <link>https://www.xiaobinqt.cn/mysql-data-type/</link>
    <pubDate>Sat, 15 Jun 2019 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/mysql-data-type/</guid>
    <description><![CDATA[MySQL 是以字节为单位存储数据的，一个字节拥有8个比特位。如果存储的不足 1 个字节，MySQL 会自动填充成 1 个字节。 字符（Character）是各种文字和符号的总称，包括各国家文字、标点符号、图形符号、数字等]]></description>
</item></channel>
</rss>
