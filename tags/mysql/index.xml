<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Mysql - 标签 - xiaobinqt 博客 - 技术改变生活</title>
        <link>https://www.xiaobinqt.cn/tags/mysql/</link>
        <description>Mysql - 标签 - xiaobinqt 博客 - 技术改变生活</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>xiaobinqt@163.com (xiaobinqt)</managingEditor>
            <webMaster>xiaobinqt@163.com (xiaobinqt)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 12 Oct 2023 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://www.xiaobinqt.cn/tags/mysql/" rel="self" type="application/rss+xml" /><item>
    <title>记一次 MySQL 8.0 JSON 查询</title>
    <link>https://www.xiaobinqt.cn/mysql-json-like-search/</link>
    <pubDate>Thu, 12 Oct 2023 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/mysql-json-like-search/</guid>
    <description><![CDATA[<!-- author： xiaobinqt -->
<!-- email： xiaobinqt@163.com -->
<!-- https://xiaobinqt.github.io -->
<!-- https://www.xiaobinqt.cn -->
<p>有 2 张表，一张 tag 表，主要字段有 id，name。一张 channel 表，有个 tags 字段，存 tag 表中 id，如：<code>[1,5]</code>。</p>]]></description>
</item><item>
    <title>MySQL 常见问题（三）</title>
    <link>https://www.xiaobinqt.cn/mysql-faq-3/</link>
    <pubDate>Mon, 11 Jul 2022 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/mysql-faq-3/</guid>
    <description><![CDATA[<!-- author： xiaobinqt -->
<!-- email： xiaobinqt@163.com -->
<!-- https://xiaobinqt.github.io -->
<!-- https://www.xiaobinqt.cn -->
<h2 id="innodbmyisam的区别" class="headerLink">
    <a href="#innodbmyisam%e7%9a%84%e5%8c%ba%e5%88%ab" class="header-mark"></a>1 InnoDB、MyISAM的区别</h2><ul>
<li>磁盘文件不同：</li>
</ul>
<p>MyISAM 引擎的表会生成三个磁盘文件：</p>
<p><code>table_name.frm</code> 该文件中存储表的结构信息。<code>table_name.MYD</code> 该文件中存储表的行数据。<code>table_name.MYI</code> 该文件中存储表的索引数据。</p>]]></description>
</item><item>
    <title>MySQL 常见问题（二）</title>
    <link>https://www.xiaobinqt.cn/mysql-faq-2/</link>
    <pubDate>Sat, 21 May 2022 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/mysql-faq-2/</guid>
    <description><![CDATA[<!-- author： xiaobinqt -->
<!-- email： xiaobinqt@163.com -->
<!-- https://xiaobinqt.github.io -->
<!-- https://www.xiaobinqt.cn -->
<h2 id="索引数据结构为什么不使用红黑树或b树" class="headerLink">
    <a href="#%e7%b4%a2%e5%bc%95%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84%e4%b8%ba%e4%bb%80%e4%b9%88%e4%b8%8d%e4%bd%bf%e7%94%a8%e7%ba%a2%e9%bb%91%e6%a0%91%e6%88%96b%e6%a0%91" class="header-mark"></a>1 索引数据结构为什么不使用红黑树或B树</h2><p>在 InnoDB 引擎中，索引的底层数据结构是 B+ 树。MySQL 的数据是存储在硬盘的，在查询时一般是不能「一次性」把全部数据加载到内存中。红黑树是「二叉查找树」的变种，一个 Node 节点只能存储一个<code>Key</code>和一个<code>Value</code>。B 和 B+ 树跟红黑树不一样，它们算是「多路搜索树」，相较于「二叉搜索树」而言，一个 Node 节点可以存储的信息会更多，「多路搜索树」的高度会比「二叉搜索树」更低。</p>]]></description>
</item><item>
    <title>MySQL 为什么使用 B&#43; 树索引</title>
    <link>https://www.xiaobinqt.cn/why-mysql-index-use-btree/</link>
    <pubDate>Fri, 20 May 2022 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/why-mysql-index-use-btree/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://cdn.xiaobinqt.cn/xiaobinqt.io/20221127/8018e68746b147a8bba7dac0c65ae308.png" referrerpolicy="no-referrer">
            </div><!-- author： xiaobinqt -->
<!-- email： xiaobinqt@163.com -->
<!-- https://xiaobinqt.github.io -->
<!-- https://www.xiaobinqt.cn -->
<h2 id="前言" class="headerLink">
    <a href="#%e5%89%8d%e8%a8%80" class="header-mark"></a>1 前言</h2><p>为什么 MySQL 采用 B+ 树作为索引？</p>
<p>如果纯粹的猜测 MySQL 数据库索引为什么使用 B+ 树？那么围绕这个问题的回答通常一定是围绕 B+ 树本身是什么，有什么优势这两点去解释这个问题。</p>]]></description>
</item><item>
    <title>mysql workbench 查看触发器</title>
    <link>https://www.xiaobinqt.cn/mysql-workbench-show-triggers/</link>
    <pubDate>Wed, 20 Apr 2022 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/mysql-workbench-show-triggers/</guid>
    <description><![CDATA[<!-- author： xiaobinqt -->
<!-- email： xiaobinqt@163.com -->
<!-- https://xiaobinqt.github.io -->
<!-- https://www.xiaobinqt.cn -->
<p>mysql <a href="https://dev.mysql.com/downloads/workbench/" target="_blank" rel="noopener noreferrer">workbench</a> 是官方推荐的数据库工具，用了很长时间却一直不知道触发器在哪儿&#x1f622;。</p>
<p>触发器是对单个表的操作，而不是整个数据库的操作，所以 <code>Alter Table </code>就可以看到触发器：</p>]]></description>
</item><item>
    <title>Docker 安装 mysql8.0</title>
    <link>https://www.xiaobinqt.cn/docker-install-mysql8.0/</link>
    <pubDate>Wed, 08 Sep 2021 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/docker-install-mysql8.0/</guid>
    <description><![CDATA[<!-- author： xiaobinqt -->
<!-- email： xiaobinqt@163.com -->
<!-- https://xiaobinqt.github.io -->
<!-- https://www.xiaobinqt.cn -->
<h2 id="设置镜像源" class="headerLink">
    <a href="#%e8%ae%be%e7%bd%ae%e9%95%9c%e5%83%8f%e6%ba%90" class="header-mark"></a>1 设置镜像源</h2><p>国内的网络环境，使用官方的镜像源，下载速度很慢，所以我们需要使用国内的镜像源。</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">shell</p>]]></description>
</item><item>
    <title>Mysql 服务端如何处理客户端请求</title>
    <link>https://www.xiaobinqt.cn/mysql-server-exec-client-raw-sql/</link>
    <pubDate>Sun, 20 Dec 2020 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/mysql-server-exec-client-raw-sql/</guid>
    <description><![CDATA[<!-- author： xiaobinqt -->
<!-- email： xiaobinqt@163.com -->
<!-- https://xiaobinqt.github.io -->
<!-- https://www.xiaobinqt.cn -->
<p>不论客户端进程和服务器进程是采用哪种方式进行通信，最后实现的效果都是：客户端进程向服务器进程发送一段文本（MySQL语句），服务器进程处理后再向客户端进程发送一段文本（处理结果）。</p>]]></description>
</item><item>
    <title>mysql 存储程序</title>
    <link>https://www.xiaobinqt.cn/mysql-stored-routine/</link>
    <pubDate>Thu, 08 Oct 2020 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/mysql-stored-routine/</guid>
    <description><![CDATA[<!-- author： xiaobinqt -->
<!-- email： xiaobinqt@163.com -->
<!-- https://xiaobinqt.github.io -->
<!-- https://www.xiaobinqt.cn -->
<h2 id="总览" class="headerLink">
    <a href="#%e6%80%bb%e8%a7%88" class="header-mark"></a>1 总览</h2><p><figure><a class="lightgallery" href="/e92bc705bec14bcba089f2a8848359b2_6242415333057193940.png" title="存储程序" data-thumbnail="/e92bc705bec14bcba089f2a8848359b2_6242415333057193940.png" data-sub-html="<h2>存储程序</h2><p>存储程序</p>"><img  loading="lazy" src=https://www.xiaobinqt.cn/e92bc705bec14bcba089f2a8848359b2_6242415333057193940.png srcset="/e92bc705bec14bcba089f2a8848359b2_6242415333057193940_hu18260311723224334545.webp 800w, /e92bc705bec14bcba089f2a8848359b2_6242415333057193940_hu5049376674048617071.webp 1200w, /e92bc705bec14bcba089f2a8848359b2_6242415333057193940_hu1207759613101304025.webp 1600w"  alt="存储程序" height="349" width="451"></a><figcaption class="image-caption">存储程序</figcaption>
</figure></p>
<p>存储程序可以封装一些语句，然后给用户提供一种简单的方式来调用这个存储程序，从而间接地执行某些语句。根据调用方式的不同，可以把存储程序分为<code>存储例程</code>、<code>触发器</code>和<code>事件</code>，存储例程又分为<code>存储函数</code>和<code>存储过程</code>，如&#x261d;&#xfe0f;
上图。</p>]]></description>
</item><item>
    <title>MySQL 常见问题（一）</title>
    <link>https://www.xiaobinqt.cn/mysql-simple-faq/</link>
    <pubDate>Thu, 03 Oct 2019 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/mysql-simple-faq/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://cdn.xiaobinqt.cn/xiaobinqt.io/20221117/6d5a8e4d284a409ea3e415a46fcbb393.png" referrerpolicy="no-referrer">
            </div><!-- author： xiaobinqt -->
<!-- email： xiaobinqt@163.com -->
<!-- https://xiaobinqt.github.io -->
<!-- https://www.xiaobinqt.cn -->
<h2 id="主键和-unique-的区别" class="headerLink">
    <a href="#%e4%b8%bb%e9%94%ae%e5%92%8c-unique-%e7%9a%84%e5%8c%ba%e5%88%ab" class="header-mark"></a>1 主键和 UNIQUE 的区别</h2><p>主键和<code>UNIQUE</code>约束都能保证某个列或者列组合的唯一性，但是：</p>
<ul>
<li>一张表中只能定义一个主键，却可以定义多个<code>UNIQUE</code>约束！</li>
<li>主键列不允许存放<code>NULL</code>，而声明了<code>UNIQUE</code>属性的列可以存放<code>NULL</code>，而且<code>NULL</code>可以重复地出现在多条记录中。</li>
</ul>
<h2 id="结束符" class="headerLink">
    <a href="#%e7%bb%93%e6%9d%9f%e7%ac%a6" class="header-mark"></a>2 结束符</h2><div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">shell</p>]]></description>
</item><item>
    <title>mysql 常见数据类型</title>
    <link>https://www.xiaobinqt.cn/mysql-data-type/</link>
    <pubDate>Sat, 15 Jun 2019 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/mysql-data-type/</guid>
    <description><![CDATA[<!-- author： xiaobinqt -->
<!-- email： xiaobinqt@163.com -->
<!-- https://xiaobinqt.github.io -->
<!-- https://www.xiaobinqt.cn -->
<blockquote>
  <p>MySQL 是以字节为单位存储数据的，一个字节拥有8个比特位。如果存储的不足 1 个字节，MySQL 会自动填充成 1 个字节。</p>]]></description>
</item></channel>
</rss>
