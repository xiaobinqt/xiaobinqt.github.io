<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>第一部分 基础知识 on Linux 学习笔记</title>
    <link>https://example.com/linux/docs/part1-primary/</link>
    <description>Recent content in 第一部分 基础知识 on Linux 学习笔记</description>
    <generator>Hugo</generator>
    <language>zh</language>
    <atom:link href="https://example.com/linux/docs/part1-primary/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>1.1 操作系统</title>
      <link>https://example.com/linux/docs/part1-primary/1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part1-primary/1/</guid>
      <description>&lt;h1 id=&#34;11-操作系统&#34;&gt;&#xA;  1.1 操作系统&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#11-%e6%93%8d%e4%bd%9c%e7%b3%bb%e7%bb%9f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;111-基本特征&#34;&gt;&#xA;  1.1.1 基本特征&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#111-%e5%9f%ba%e6%9c%ac%e7%89%b9%e5%be%81&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-并发&#34;&gt;&#xA;  1. 并发&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1-%e5%b9%b6%e5%8f%91&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;并发是指宏观上在一段时间内能同时运行多个程序，而并行则指同一时刻能运行多个指令。&lt;/p&gt;&#xA;&lt;p&gt;并行需要硬件支持，如多流水线、多核处理器或者分布式计算系统。&lt;/p&gt;&#xA;&lt;p&gt;操作系统通过引入进程和线程，使得程序能够并发运行。&lt;/p&gt;&#xA;&lt;h3 id=&#34;2-共享&#34;&gt;&#xA;  2. 共享&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2-%e5%85%b1%e4%ba%ab&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;共享是指系统中的资源可以被多个并发进程共同使用。&lt;/p&gt;&#xA;&lt;p&gt;有两种共享方式：互斥共享和同时共享。&lt;/p&gt;&#xA;&lt;p&gt;互斥共享的资源称为临界资源，例如打印机等，在同一时刻只允许一个进程访问，需要用同步机制来实现互斥访问。&lt;/p&gt;&#xA;&lt;h3 id=&#34;3-虚拟&#34;&gt;&#xA;  3. 虚拟&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#3-%e8%99%9a%e6%8b%9f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;虚拟技术把一个物理实体转换为多个逻辑实体。&lt;/p&gt;&#xA;&lt;p&gt;主要有两种虚拟技术：时（时间）分复用技术和空（空间）分复用技术。&lt;/p&gt;&#xA;&lt;p&gt;多个进程能在同一个处理器上并发执行使用了时分复用技术，让每个进程轮流占用处理器，每次只执行一小个时间片并快速切换。&lt;/p&gt;&#xA;&lt;p&gt;虚拟内存使用了空分复用技术，它将物理内存抽象为地址空间，每个进程都有各自的地址空间。地址空间的页被映射到物理内存，地址空间的页并不需要全部在物理内存中，当使用到一个没有在物理内存的页时，执行页面置换算法，将该页置换到内存中。&lt;/p&gt;&#xA;&lt;h3 id=&#34;4-异步&#34;&gt;&#xA;  4. 异步&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#4-%e5%bc%82%e6%ad%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;异步指进程不是一次性执行完毕，而是走走停停，以不可知的速度向前推进。&lt;/p&gt;&#xA;&lt;h2 id=&#34;112-基本功能&#34;&gt;&#xA;  1.1.2 基本功能&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#112-%e5%9f%ba%e6%9c%ac%e5%8a%9f%e8%83%bd&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-进程管理&#34;&gt;&#xA;  1. 进程管理&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1-%e8%bf%9b%e7%a8%8b%e7%ae%a1%e7%90%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;进程控制、进程同步、进程通信、死锁处理、处理机调度等。&lt;/p&gt;&#xA;&lt;h3 id=&#34;2-内存管理&#34;&gt;&#xA;  2. 内存管理&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2-%e5%86%85%e5%ad%98%e7%ae%a1%e7%90%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;内存分配、地址映射、内存保护与共享、虚拟内存等。&lt;/p&gt;&#xA;&lt;h3 id=&#34;3-文件管理&#34;&gt;&#xA;  3. 文件管理&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#3-%e6%96%87%e4%bb%b6%e7%ae%a1%e7%90%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;文件存储空间的管理、目录管理、文件读写管理和保护等。&lt;/p&gt;&#xA;&lt;h3 id=&#34;4-设备管理&#34;&gt;&#xA;  4. 设备管理&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#4-%e8%ae%be%e5%a4%87%e7%ae%a1%e7%90%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;完成用户的 I/O 请求，方便用户使用各种设备，并提高设备的利用率。&lt;/p&gt;&#xA;&lt;p&gt;主要包括缓冲管理、设备分配、设备处理、虛拟设备等。&lt;/p&gt;&#xA;&lt;h2 id=&#34;123-系统调用&#34;&gt;&#xA;  1.2.3 系统调用&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#123-%e7%b3%bb%e7%bb%9f%e8%b0%83%e7%94%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;如果一个进程在用户态需要使用内核态的功能，就进行系统调用从而陷入内核，由操作系统代为完成。&lt;/p&gt;&#xA;&lt;p&gt;&#xA;  &lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20221223/a31b70c3a2a04481b3e3849408cc4393.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;Linux 的系统调用主要有以下这些：&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
