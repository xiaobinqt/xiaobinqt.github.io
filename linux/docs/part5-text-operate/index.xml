<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>第五部分 文本操作 on Linux 学习笔记</title>
    <link>https://example.com/linux/docs/part5-text-operate/</link>
    <description>Recent content in 第五部分 文本操作 on Linux 学习笔记</description>
    <generator>Hugo</generator>
    <language>zh</language>
    <atom:link href="https://example.com/linux/docs/part5-text-operate/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>5.1 正则表达式</title>
      <link>https://example.com/linux/docs/part5-text-operate/5.1-regular/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part5-text-operate/5.1-regular/</guid>
      <description>&lt;h1 id=&#34;51-正则表达式&#34;&gt;&#xA;  5.1 正则表达式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#51-%e6%ad%a3%e5%88%99%e8%a1%a8%e8%be%be%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;511-元字符&#34;&gt;&#xA;  5.1.1 元字符&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#511-%e5%85%83%e5%ad%97%e7%ac%a6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;元字符是正则表达式中具有特殊含义的字符。它们用于表示模式的不同部分或进行模式匹配的控制。常见的元字符包括：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;. 匹配除换行符外的任意单个字符&lt;/li&gt;&#xA;&lt;li&gt;* 匹配前面的元素零次或多次&lt;/li&gt;&#xA;&lt;li&gt;[] 匹配方括号中的字符类中的任意一个&lt;/li&gt;&#xA;&lt;li&gt;^ 匹配开头&lt;/li&gt;&#xA;&lt;li&gt;$ 匹配结尾&lt;/li&gt;&#xA;&lt;li&gt;\ 转义后面的特殊字符&lt;/li&gt;&#xA;&lt;li&gt;+ 匹配前面的元素一次或多次&lt;/li&gt;&#xA;&lt;li&gt;? 匹配前面的元素零次或一次&lt;/li&gt;&#xA;&lt;li&gt;| 匹配它前面或后面的正则表达式&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;512-通配符&#34;&gt;&#xA;  5.1.2 通配符&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#512-%e9%80%9a%e9%85%8d%e7%ac%a6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;通配符是在文件系统中使用的一种模式匹配机制。它用于匹配文件名或路径的模式。常见的通配符包括：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;* 匹配任意长度的任意字符。&lt;/li&gt;&#xA;&lt;li&gt;? 匹配单个字符。&lt;/li&gt;&#xA;&lt;li&gt;[&amp;hellip;]（方括号）：定义一个字符集，匹配括号内的任意一个字符。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;通配符主要用于文件名的模式匹配，例如在命令行中使用 ls 或 find 命令时，可以使用通配符来筛选文件名。&lt;/p&gt;&#xA;&lt;h2 id=&#34;513-find-命令&#34;&gt;&#xA;  5.1.3 find 命令&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#513-find-%e5%91%bd%e4%bb%a4&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;find 主要是在目录中查找指定文件，可以结合正则表达式实现复杂的查找功能。&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230705/b5d150c1dd99493a81f6955a9ea81083.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;p&gt;find 支持正则可以使用 -regex：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;find /etc/ -regex .*wd$&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;-type d 查找目录，-type f 查找文件：&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230705/896cc2fface144e19fa1823eb5d959b9.png&#34; width=  /&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>5.2 sed 命令</title>
      <link>https://example.com/linux/docs/part5-text-operate/5.2-sed/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part5-text-operate/5.2-sed/</guid>
      <description>&lt;h1 id=&#34;52-sed-命令&#34;&gt;&#xA;  5.2 sed 命令&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#52-sed-%e5%91%bd%e4%bb%a4&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;521-简介&#34;&gt;&#xA;  5.2.1 简介&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#521-%e7%ae%80%e4%bb%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;sed（stream EDitor）是一个强大而简单的文本解析转换工具，可以读取文本，并根据指定的条件对文本内容进行编辑（删除、替换，添加、移动等），最后输出所有行或仅输出处理的某些行。&lt;/p&gt;&#xA;&lt;p&gt;sed 也可以在无交互的情况下实现相当复杂的文本处理操作，将不规范的文本，处理为 “比较规范” 的文本，被广泛应用于 shell 脚本中，用以完成各种自动化处理任务。&lt;/p&gt;&#xA;&lt;p&gt;sed 的工作流程主要包括读取、执行和显示三个过程：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;读取： sed 从输入流（文件、管道、标准输入）中读取一行内容并存储到临时的缓冲区（又称模式空间）。&lt;/li&gt;&#xA;&lt;li&gt;执行： 默认情况下，所有的 sed 命令都在模式空间中顺序地执行，除非指定了行的地址，否则 sed 命令将会在所有行上一次执行。&lt;/li&gt;&#xA;&lt;li&gt;显示： 发送修改后的内容到输出流，在发送数据后，模式空间将会被清空。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;在所有的文件内容都被处理完成之前，上述过程将重复执行，直至所有内容被处理完。&lt;/p&gt;&#xA;&lt;p&gt;默认情况下所有的 sed 命令，都是在模式空间内执行的，因此输入的文件并不会发生变化。&lt;/p&gt;&#xA;&lt;h2 id=&#34;522-选项操作&#34;&gt;&#xA;  5.2.2 选项操作&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#522-%e9%80%89%e9%a1%b9%e6%93%8d%e4%bd%9c&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;通常情况下调用 sed 命令有两种格式。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;“参数” 是指操作的&lt;strong&gt;目标文件&lt;/strong&gt;，当存在多个操作对象时，文件之间用逗号分隔。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sed &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;选项&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;操作&amp;#39;&lt;/span&gt; 参数&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;scriptfile 表示脚本文件，需要用&lt;code&gt;-f&lt;/code&gt;选项指定，当脚本文件出现在目标文件之前时，表示通过指定的脚本文件来处理输入的目标文件。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sed &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;选项&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; -f scriptfile 参数&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;常见选项&#34;&gt;&#xA;  常见选项&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b8%b8%e8%a7%81%e9%80%89%e9%a1%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;选项&lt;/th&gt;&#xA;          &lt;th&gt;功能&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;-e&lt;/td&gt;&#xA;          &lt;td&gt;表示用指定命令或者脚本来处理输入的文本文件&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;-f&lt;/td&gt;&#xA;          &lt;td&gt;表示用指定的脚本文件来处理输入的文本文件&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;-h&lt;/td&gt;&#xA;          &lt;td&gt;显示帮助&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;-n&lt;/td&gt;&#xA;          &lt;td&gt;表示仅显示处理后的结果&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;-i&lt;/td&gt;&#xA;          &lt;td&gt;直接编辑文本文件&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;-r 或 -E&lt;/td&gt;&#xA;          &lt;td&gt;使用扩展正则表达式&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;-s&lt;/td&gt;&#xA;          &lt;td&gt;将多个文件视为独立文件，而不是单个连续的长文件流&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;操作指令&#34;&gt;&#xA;  操作指令&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%93%8d%e4%bd%9c%e6%8c%87%e4%bb%a4&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;「操作」用于指定文件对操作的动作行为，也就是 sed 的命令。&lt;/p&gt;</description>
    </item>
    <item>
      <title>5.3 awk 命令</title>
      <link>https://example.com/linux/docs/part5-text-operate/5.3-awk/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part5-text-operate/5.3-awk/</guid>
      <description>&lt;h1 id=&#34;53-awk-命令&#34;&gt;&#xA;  5.3 awk 命令&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#53-awk-%e5%91%bd%e4%bb%a4&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;awk 是一种处理文本文件的语言，是一个强大的文件分析工具。常用于处理 “比较规范” 的文本处理，统计数量并输出指定字段。&lt;/p&gt;&#xA;&lt;p&gt;awk 比较倾向于将一行分成多个 “字段” 进行处理。awk 信息的读入是逐行读取的，执行结果可以通过 print 将字段数据打印显示。在使用 awk 命令的过程中，可以使用逻辑操作符，&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;、&lt;code&gt;||&lt;/code&gt; 、&lt;code&gt;!&lt;/code&gt;，还可以进行简单的数学运算，如&lt;code&gt;+&lt;/code&gt;、&lt;code&gt;-&lt;/code&gt;、&lt;code&gt;*&lt;/code&gt;、&lt;code&gt;/&lt;/code&gt;、&lt;code&gt;%&lt;/code&gt;、&lt;code&gt;^&lt;/code&gt;分别表示加、减、乘、除、取余和乘方。&lt;/p&gt;&#xA;&lt;h2 id=&#34;531-使用格式&#34;&gt;&#xA;  5.3.1 使用格式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#531-%e4%bd%bf%e7%94%a8%e6%a0%bc%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;awk 「选项」 &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;模式或条件{操作}&amp;#39;&lt;/span&gt; 文件名 &lt;span style=&#34;color:#75715e&#34;&gt;# 格式1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;awk -f 脚本文件 文件名 &lt;span style=&#34;color:#75715e&#34;&gt;# 格式2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;532-内置变量&#34;&gt;&#xA;  5.3.2 内置变量&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#532-%e5%86%85%e7%bd%ae%e5%8f%98%e9%87%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;内置变量&lt;/th&gt;&#xA;          &lt;th&gt;功能&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;NF&lt;/td&gt;&#xA;          &lt;td&gt;当前处理的行的字段个数（就是：有多少列）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;NR&lt;/td&gt;&#xA;          &lt;td&gt;当前处理的行的行号（就是：有多少行）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;FNR&lt;/td&gt;&#xA;          &lt;td&gt;读取文件的记录数（行号），从1开始，新的文件重新从1开始计数&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;$0&lt;/td&gt;&#xA;          &lt;td&gt;当前处理的行的整行内容（就是：表示一行的内容）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;$n&lt;/td&gt;&#xA;          &lt;td&gt;当前处理行的第n个字段（就是：第n列）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;FILENAME&lt;/td&gt;&#xA;          &lt;td&gt;被处理的文件名&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;FS&lt;/td&gt;&#xA;          &lt;td&gt;指定每行的字段分隔符，默认为空格或制表位（相当于选项 -F ）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;OFS&lt;/td&gt;&#xA;          &lt;td&gt;输出字段的分隔符，默认也是空格&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;RS&lt;/td&gt;&#xA;          &lt;td&gt;行分割符。awk 从文件上读取资料时，将根据 RS 的定义把资料切割成许多条记录，而 awk 一次仅读取一条记录，预设值是&lt;code&gt;\n&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ORS&lt;/td&gt;&#xA;          &lt;td&gt;输出分割符，默认也是换行符&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;n-用法&#34;&gt;&#xA;  $n 用法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#n-%e7%94%a8%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;n 为数字，数字为几就表示第几列。&lt;/p&gt;</description>
    </item>
    <item>
      <title>5.4 cut、sort、uniq、tr 命令</title>
      <link>https://example.com/linux/docs/part5-text-operate/5.4-cut-sort-uniq-tr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part5-text-operate/5.4-cut-sort-uniq-tr/</guid>
      <description>&lt;h1 id=&#34;54-cutsortuniqtr-命令&#34;&gt;&#xA;  5.4 cut、sort、uniq、tr 命令&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#54-cutsortuniqtr-%e5%91%bd%e4%bb%a4&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;541-cut&#34;&gt;&#xA;  5.4.1 cut&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#541-cut&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;概述&#34;&gt;&#xA;  概述&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%a6%82%e8%bf%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;cut 是&lt;strong&gt;列截取&lt;/strong&gt;工具。cut 命令从文件的每一行剪切字节、字符和字段并将这些字节、字符和字段写至标准输出。&lt;/p&gt;&#xA;&lt;p&gt;如果不指定 file 参数，cut 命令将读取标准输入。必须指定 -b(字节) 、-c(字符) 或 -f(第几列) 标志之一。&lt;/p&gt;&#xA;&lt;p&gt;字符和字节的区别&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;字节（byte）是计量单位，表示数据量多少，是计算机信息技术用于计量存储容量的一种计量单位，通常情况下 1 字节等于 8 位。&lt;/li&gt;&#xA;&lt;li&gt;字符（character）计算机中使用的字母、数字、字和符号。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;一般在英文状态下，一个字母或字符占用一个字节， 一个汉字占用两个字节 。&lt;/p&gt;&#xA;&lt;h3 id=&#34;常用选线&#34;&gt;&#xA;  常用选线&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b8%b8%e7%94%a8%e9%80%89%e7%ba%bf&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;格式：cut &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;选项&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;文件路径&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;选项&lt;/th&gt;&#xA;          &lt;th&gt;功能&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;-b&lt;/td&gt;&#xA;          &lt;td&gt;按字节截取&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;-c&lt;/td&gt;&#xA;          &lt;td&gt;按字符截取，常用于中文&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;-d&lt;/td&gt;&#xA;          &lt;td&gt;指定以什么为分割符截取，默认为制表符&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;-f&lt;/td&gt;&#xA;          &lt;td&gt;通常和 -d 一起使用（表示截取第几列）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;案例演示&#34;&gt;&#xA;  案例演示&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%a1%88%e4%be%8b%e6%bc%94%e7%a4%ba&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;截取 /etc/passwd 文件的中 root 用户的第 7 列（-d -f）&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230209/1f8ca1bb3b4b4406bb576f898c421c3e.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;按字节截取（-b）&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230209/fada999aaed7440d874c42165c6979f8.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;按字符截取（-c）&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;截取第一位是 1，不是 0。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
