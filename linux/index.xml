<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>简介 on Linux 学习笔记</title>
    <link>https://example.com/linux/</link>
    <description>Recent content in 简介 on Linux 学习笔记</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://example.com/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>1.1 简介和常见发行版</title>
      <link>https://example.com/linux/docs/part1-primary/1.1-linux-release/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/linux/docs/part1-primary/1.1-linux-release/</guid>
      <description> 1.1 简介和常见发行版 # 1.1.1 快捷键 # Tab：命令和文件名补全； Ctrl+C：中断正在运行的程序； Ctrl+D：结束键盘输入（End Of File，EOF） </description>
    </item>
    
    <item>
      <title>2.1 帮助命令</title>
      <link>https://example.com/linux/docs/part2-sys-operate/2.1-help/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/linux/docs/part2-sys-operate/2.1-help/</guid>
      <description>2.1 帮助命令 # 2.1.1 man # man 命令有很多 section，可以通过man man 查看，如下：
man 1 可以省略 1 表示查看可执行程序或 shell 命令，如man ls。
如果想要通过 man 查看文件的说明，可以使用man 5，比如 passwd 可以是一个系统命令也可以是一个配置文件/etc/passwd，那么man passwd 就是查看这个系统命令的说明，man 5 passwd就是查看/etc/passwd这个配置文件的说明。
当不知道查看的是命令还是文件时可以使用man -a 关键字，比如man -a passwd，这样就会把所有的说明都列出来。
2.1.2 help # shell（命令解释器）自带的命令称为内部命令，其他的是外部命令。可以用type 命令知道这个命令是内部命令还是外部命令。
内部命令使用 help 帮助：help 命令
外部命令使用 help 帮助：命令 --help
2.1.3 info # info 帮助比 help 更详细，可以作为 help 的补充。</description>
    </item>
    
    <item>
      <title>2.2 ls 命令</title>
      <link>https://example.com/linux/docs/part2-sys-operate/2.2-ls/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/linux/docs/part2-sys-operate/2.2-ls/</guid>
      <description>2.2 ls 命令 # ls 可以查看多个目录，如
ls /root / 查看/root目录和/目录内容。
2.2.1 常用选项 # -l 选项 # 单列输出。
-a 选项 # 查看所有
-r 选项 # 逆序排序，默认按文件名逆序。
-t 选项 # 按时间信息排序。比如按时间逆序可以使用ls -lrt。
-R 选项 # 递归列出全部目录的内容。
-h 选项 # -h参数是更加人性化打印文件的尺寸大小，单位是G，M，K，否则显示文件的字节大小。
如果只用ls -h是看不见文件或者目录大小的，必须加上ls -lh。
-d 选项 # 将目录名像其它文件一样列出，而不是列出它们的内容。</description>
    </item>
    
    <item>
      <title>1.2 常见目录</title>
      <link>https://example.com/linux/docs/part1-primary/1.2-common-dir/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/linux/docs/part1-primary/1.2-common-dir/</guid>
      <description> 常见目录 # / # 根目录 ├── /root # root 用户家目录 ├── /home/username # 普通用户家目录 ├── /etc # 配置文件目录 ├── /bin # 命令目录 ├── /sbib # 管理命令目录 ├── /usr/bin # 系统预装的其他命令 └── /usr/sbin # 系统预装的其他命令 </description>
    </item>
    
    <item>
      <title>2.3 关机</title>
      <link>https://example.com/linux/docs/part2-sys-operate/2.3-shutdown/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/linux/docs/part2-sys-operate/2.3-shutdown/</guid>
      <description> 2.3 关机 # 1. who # 在关机前需要先使用 who 命令查看有没有其它用户在线。
2. sync # 为了加快对磁盘文件的读写速度，位于内存中的文件数据不会立即同步到磁盘，因此关机之前需要先进行 sync 同步操作。
3. shutdown # ## shutdown [-krhc] 时间 [信息] -k ： 不会关机，只是发送警告信息，通知所有在线的用户 -r ： 将系统的服务停掉后就重新启动 -h ： 将系统的服务停掉后就立即关机 -c ： 取消已经在进行的 shutdown 参考 # Linux命令之关机shutdown </description>
    </item>
    
    <item>
      <title>2.4 cp 命令</title>
      <link>https://example.com/linux/docs/part2-sys-operate/2.4-cp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/linux/docs/part2-sys-operate/2.4-cp/</guid>
      <description>2.4 cp 命令 # 将源文件或目录复制到目标文件或目录中。
2.4.1 常用选项 # -p 选项 # 在复制文件后，文件的时间会发生变化，属主也有可能会发生变化。-p可以保留源文件或目录的属性。
-a 选项 # 在复制文件后，权限，属主和时间都不发生变化。
-f 选项 # 强行复制文件或目录，不论目标文件或目录是否已存在。
-r 选项 # 递归处理，将指定目录下的所有文件与子目录一并处理。</description>
    </item>
    
    <item>
      <title>2.5 文件查看命令</title>
      <link>https://example.com/linux/docs/part2-sys-operate/2.5-file-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/linux/docs/part2-sys-operate/2.5-file-view/</guid>
      <description>2.5 文件查看命令 # 2.5.1 cat # 参看文件打印到标准输出。
2.5.1 head # 查看文件开头，比如前 5 行head -5 文件名。
2.5.1 tail # 查看文件结尾，查看最后 3 行tail -3 文件名。
可以使用-f跟踪文件变化。
2.5.1 wc # 统计文件的字节数、字数、行数。
-l 参数 # 统计行数。</description>
    </item>
    
    <item>
      <title>2.6 压缩和打包</title>
      <link>https://example.com/linux/docs/part2-sys-operate/2.6-backup-compression/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/linux/docs/part2-sys-operate/2.6-backup-compression/</guid>
      <description>2.6 压缩和打包 # 2.6.1 压缩文件名 # Linux 下有很多压缩文件名，常见的如下：
扩展名 压缩程序 *.Z compress *.zip zip *.gz gzip *.bz2 bzip2 *.xz xz *.tar tar 程序打包的数据，没有经过压缩 *.tar.gz tar 程序打包的文件，经过 gzip 的压缩 *.tar.bz2 tar 程序打包的文件，经过 bzip2 的压缩 *.tar.xz tar 程序打包的文件，经过 xz 的压缩 *.tbz2 *.tar.bz2 的缩写 *.tgz *.tar.gz 的缩写 2.6.2 压缩指令 # 1. gzip # gzip 是 Linux 使用最广的压缩指令，可以解开 compress、zip 与 gzip 所压缩的文件。
经过 gzip 压缩过，源文件就不存在了。gzip 命令只能用来压缩文件，不能压缩目录，即便指定了目录，也只能压缩目录内的所有文件。gzip 命令不需要指定压缩包名。
有 9 个不同的压缩等级可以使用。
可以使用 zcat、zmore、zless 来读取压缩文件的内容。</description>
    </item>
    
    <item>
      <title>2.7 vim</title>
      <link>https://example.com/linux/docs/part2-sys-operate/2.7-vim/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/linux/docs/part2-sys-operate/2.7-vim/</guid>
      <description>2.7 vim # 2.7.1 vim 三种模式 # 一般指令模式（Command mode）：vim 的默认模式，可以用于移动游标查看内容； 编辑模式（Insert mode）：按下i等按键之后进入，可以对文本进行编辑； 指令列模式（Bottom-line mode）：按下:按键之后进入，用于保存退出等操作。 在指令列模式下，有以下命令用于离开或者保存文件。
命令 作用 :w 写入磁盘，也可以加上保存路径，如 :w /tmp/test.txt :w! 当文件为只读时，强制写入磁盘。到底能不能写入，与用户对该文件的权限有关 :q 离开 :q! 强制离开不保存 :wq 写入磁盘后离开 :wq! 强制写入磁盘后离开 2.7.2 正常模式 # 按键 作用 I 进入插入模式，光标会移到当前行的开头位置 a 进入插入模式，光标会移动到下一个字符位置 A 进入插入模式，光标会移动到当前行末尾位置 o 进入插入模式，会向下新开一行，光标会移动到新行开头位置 O 进入插入模式，会向上新开一行，光标会移动到新行开头位置 h 前移 l 后移 j 下移 k 上移 u 撤销操作，可以多次撤销 x 单个字符删除 r 替换字符 ^ 回到当前行首 $ 回到当前行尾 ctrl+r 重做，恢复撤销 yy 和 p yy 复制一行，p 粘贴 复制多行 # 比如复制 3 行，光标移到要复制的开头位置，先按 3，再按 yy，就复制了 3 行。</description>
    </item>
    
    <item>
      <title>2.8 用户管理</title>
      <link>https://example.com/linux/docs/part2-sys-operate/2.8-user-manage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/linux/docs/part2-sys-operate/2.8-user-manage/</guid>
      <description>2.8 用户管理 # 命令 作用 useradd 新建用户 userdel 删除用户 passwd 修改用户密码 usermod 修改用户属性 chage 修改帐号和密码的有效期限 groupadd 新建用户组 groupdel 删除用户组 2.8.1 useradd # useradd 用户名 useradd -g 用户组 用户名 当不指定用户组时，会创建一个同名的用户组。
2.8.2 passwd # passwd wislon 当修改自己的密码时，直接输入 passwd 回车。
2.8.3 userdel # userdel 用户名 当加上-r选项时，会删除用户的家目录。
2.8.4 usermod # 用于修改用户的基本信息。
常用选项 # -d 选项 # 修改用户登入时的目录，只是修改/etc/passwd中用户的家目录配置信息，不会自动创建新的家目录，通常和-m一起使用。
-m 选项 # 移动用户家目录到新的位置，不能单独使用，一般与-d一起使用。
-g 选项 # 修改用户所属的用户组。
usermod -g 用户组 用户名 2.8.5 groupadd # 创建一个新的用户组。</description>
    </item>
    
    <item>
      <title>2.9 切换用户</title>
      <link>https://example.com/linux/docs/part2-sys-operate/2.9-switch-user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/linux/docs/part2-sys-operate/2.9-switch-user/</guid>
      <description> 2.9 切换用户 # su用于切换用户，如果普通用户切换成管理员需要输入密码，那么就需要把密码告诉普通用户，有暴露 root 密码的风险。
sudo可以避免暴露 root 密码，可以直接把某些命令授权给普通用户执行，普通用户在执行时不需要 root 用户密码。
2.9.1 su # 用于切换当前用户身份到其他用户身份。
- 参数在变更账号后并改变工作目录到该账号的家目录。
2.9.1 sudo # 以其他身份来执行命令。
visudo 设置需要使用 sudo 的用户（组）。
wilson ALL=/usr/sbin/shutdown # wilson 用户被授予 shutdown 执行权限，多个命令以 , 分隔。 wilson ALL=/usr/sbin/shutdown NOPASSWD # wilson 用户被授予 shutdown 执行权限，不需要输入密码 </description>
    </item>
    
    <item>
      <title>2.10 文件和文件夹</title>
      <link>https://example.com/linux/docs/part2-sys-operate/2.10-file-dir/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/linux/docs/part2-sys-operate/2.10-file-dir/</guid>
      <description>2.10 文件和文件夹 # 2.10.1 文件类型 # - 普通文件 d 目录文件 b 块特殊文件 c 字符特殊文件 l 符号链接 f 命名管道 s 套接字文件 创建新文件有默认权限，根据 umask 值计算，属主和属组根据当前进程的用户来设定。
在 linux 中创建文件默认是 (0)666 权限，需要减去 umask 的值。如：
2.10.2 权限表示 # 普通文件 # r=4 读 w=2 写 x=1 执行 目录 # x 进入目录 rx 显示目录内的文件名 wx 修改目录内的文件名 x 权限只能进入目录
rx 权限能进入并目录，显示目录内容，也可以读取文件，但是不能对文件进行操作
wx 权限能进入目录，但是不能显示目录内容，可以读取/修改/删除文件
2.10.3 修改权限 # chmod # chmod 可以修改文件和目录权限。
u 表示用户，g 表示用户组，o 表示其他用户，a 表示所有。
chmod u+x /tmp/testfile chmod u-wx /tmp/testfile chmod u=rwx /tmp/testfile chmod 755 /tmp/testfile chown # 更改文件或目录的所属用户和用户组。</description>
    </item>
    
    <item>
      <title>2.11 awk 命令</title>
      <link>https://example.com/linux/docs/part2-sys-operate/2.11-awk/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/linux/docs/part2-sys-operate/2.11-awk/</guid>
      <description>2.11 awk 命令 # awk 是一种处理文本文件的语言，是一个强大的文件分析工具。
awk 比较倾向于将一行分成多个 “字段” 进行处理。awk 信息的读入是逐行读取的，执行结果可以通过 print 将字段数据打印显示。在使用 awk 命令的过程中，可以使用逻辑操作符，&amp;amp;&amp;amp;、|| 、!，还可以进行简单的数学运算，如+、-、*、/、%、^分别表示加、减、乘、除、取余和乘方。
2.11.1 使用格式 # awk 「选项」 &amp;#39;模式或条件{操作}&amp;#39; 文件名 # 格式1 awk -f 脚本文件 文件名 # 格式2 2.11.2 内置变量 # 内置变量 功能 NF 当前处理的行的字段个数（就是：有多少列） NR 当前处理的行的行号（就是：有多少行） FNR 读取文件的记录数（行号），从1开始，新的文件重新从1开始计数 $0 当前处理的行的整行内容（就是：表示一行的内容） $n 当前处理行的第n个字段（就是：第n列） FILENAME 被处理的文件名 FS 指定每行的字段分隔符，默认为空格或制表位（相当于选项 -F ） OFS 输出字段的分隔符，默认也是空格 RS 行分割符。awk 从文件上读取资料时，将根据 RS 的定义把资料切割成许多条记录，而 awk 一次仅读取一条记录，预设值是\n ORS 输出分割符，默认也是换行符 $n 用法 # n 为数字，数字为几就表示第几列。
直接输入全部内容。 要求输出的是第 1 列。但是没有指定分隔符，awk 默认是以空格位分割。所有它认为这整个一行都是一列。 设定分割符号:，输出第 5 列。 设定分割符号x，输出第 1 列。 输出时，显示列的空格。 设置多个分割符。 $0 用法 # $0 表示整行。</description>
    </item>
    
    <item>
      <title>2.12 sed 命令</title>
      <link>https://example.com/linux/docs/part2-sys-operate/2.12-sed/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/linux/docs/part2-sys-operate/2.12-sed/</guid>
      <description>2.12 sed 命令 # 2.12.1 简介 # sed（stream EDitor）是一个强大而简单的文本解析转换工具，可以读取文本，并根据指定的条件对文本内容进行编辑（删除、替换，添加、移动等），最后输出所有行或仅输出处理的某些行。
sed 也可以在无交互的情况下实现相当复杂的文本处理操作，被广泛应用于 shell 脚本中，用以完成各种自动化处理任务。
sed 的工作流程主要包括读取、执行和显示三个过程：
读取： sed 从输入流（文件、管道、标准输入）中读取一行内容并存储到临时的缓冲区（又称模式空间）。 执行： 默认情况下，所有的 sed 命令都在模式空间中顺序地执行，除非指定了行的地址，否则 sed 命令将会在所有行上一次执行。 显示： 发送修改后的内容到输出流，在发送数据后，模式空间将会被清空。 在所有的文件内容都被处理完成之前，上述过程将重复执行，直至所有内容被处理完。
默认情况下所有的 sed 命令，都是在模式空间内执行的，因此输入的文件并不会发生变化。
2.12.2 选项操作 # 通常情况下调用 sed 命令有两种格式。
“参数” 是指操作的目标文件，当存在多个操作对象时，文件之间用逗号分隔。 sed [选项] &amp;#39;操作&amp;#39; 参数 scriptfile 表示脚本文件，需要用-f选项指定，当脚本文件出现在目标文件之前时，表示通过指定的脚本文件来处理输入的目标文件。 sed [选项] -f scriptfile 参数 常见选项 # 选项 功能 -e 表示用指定命令或者脚本来处理输入的文本文件 -f 表示用指定的脚本文件来处理输入的文本文件 -h 显示帮助 -n 表示仅显示处理后的结果 -i 直接编辑文本文件 -r或-E 使用扩展正则表达式 -s 将多个文件视为独立文件，而不是单个连续的长文件流 操作指令 # 「操作」用于指定文件对操作的动作行为，也就是 sed 的命令。</description>
    </item>
    
    <item>
      <title>2.13 cut、sort、uniq、tr 命令</title>
      <link>https://example.com/linux/docs/part2-sys-operate/2.13-cut-sort-uniq-tr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/linux/docs/part2-sys-operate/2.13-cut-sort-uniq-tr/</guid>
      <description>2.13 cut、sort、uniq、tr 命令 # 2.13.1 cut # 概述 # cut 是列截取工具。cut 命令从文件的每一行剪切字节、字符和字段并将这些字节、字符和字段写至标准输出。
如果不指定 file 参数，cut 命令将读取标准输入。必须指定 -b(字节) 、-c(字符) 或 -f(第几列) 标志之一。
字符和字节的区别
字节（byte）是计量单位，表示数据量多少，是计算机信息技术用于计量存储容量的一种计量单位，通常情况下 1 字节等于 8 位。 字符（character）计算机中使用的字母、数字、字和符号。 一般在英文状态下，一个字母或字符占用一个字节， 一个汉字占用两个字节 。
常用选线 # 格式：cut [选项] [文件路径] 选项 功能 -b 按字节截取 -c 按字符截取，常用于中文 -d 指定以什么为分割符截取，默认为制表符 -f 通常和 -d 一起使用（表示截取第几列） 案例演示 # 截取 /etc/passwd 文件的中 root 用户的第 7 列（-d -f） 按字节截取（-b） 按字符截取（-c） 截取第一位是 1，不是 0。
2.13.2 sort # 概述 # sort 是一个以行为单位对文件内容进行排序的工具，也可以根据不同的数据类型来排序。例如：数据和字符的排序就不一样。</description>
    </item>
    
  </channel>
</rss>
