<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>简介 on Linux 学习笔记</title>
    <link>https://example.com/linux/</link>
    <description>Recent content in 简介 on Linux 学习笔记</description>
    <generator>Hugo</generator>
    <language>zh</language>
    <atom:link href="https://example.com/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>1.1 操作系统</title>
      <link>https://example.com/linux/docs/part1-primary/1.1-operating-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part1-primary/1.1-operating-system/</guid>
      <description>&lt;h1 id=&#34;11-操作系统&#34;&gt;&#xA;  1.1 操作系统&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#11-%e6%93%8d%e4%bd%9c%e7%b3%bb%e7%bb%9f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;111-基本特征&#34;&gt;&#xA;  1.1.1 基本特征&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#111-%e5%9f%ba%e6%9c%ac%e7%89%b9%e5%be%81&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-并发&#34;&gt;&#xA;  1. 并发&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1-%e5%b9%b6%e5%8f%91&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;并发是指宏观上在一段时间内能同时运行多个程序，而并行则指同一时刻能运行多个指令。&lt;/p&gt;&#xA;&lt;p&gt;并行需要硬件支持，如多流水线、多核处理器或者分布式计算系统。&lt;/p&gt;&#xA;&lt;p&gt;操作系统通过引入进程和线程，使得程序能够并发运行。&lt;/p&gt;&#xA;&lt;h3 id=&#34;2-共享&#34;&gt;&#xA;  2. 共享&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2-%e5%85%b1%e4%ba%ab&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;共享是指系统中的资源可以被多个并发进程共同使用。&lt;/p&gt;&#xA;&lt;p&gt;有两种共享方式：互斥共享和同时共享。&lt;/p&gt;&#xA;&lt;p&gt;互斥共享的资源称为临界资源，例如打印机等，在同一时刻只允许一个进程访问，需要用同步机制来实现互斥访问。&lt;/p&gt;&#xA;&lt;h3 id=&#34;3-虚拟&#34;&gt;&#xA;  3. 虚拟&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#3-%e8%99%9a%e6%8b%9f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;虚拟技术把一个物理实体转换为多个逻辑实体。&lt;/p&gt;&#xA;&lt;p&gt;主要有两种虚拟技术：时（时间）分复用技术和空（空间）分复用技术。&lt;/p&gt;&#xA;&lt;p&gt;多个进程能在同一个处理器上并发执行使用了时分复用技术，让每个进程轮流占用处理器，每次只执行一小个时间片并快速切换。&lt;/p&gt;&#xA;&lt;p&gt;虚拟内存使用了空分复用技术，它将物理内存抽象为地址空间，每个进程都有各自的地址空间。地址空间的页被映射到物理内存，地址空间的页并不需要全部在物理内存中，当使用到一个没有在物理内存的页时，执行页面置换算法，将该页置换到内存中。&lt;/p&gt;&#xA;&lt;h3 id=&#34;4-异步&#34;&gt;&#xA;  4. 异步&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#4-%e5%bc%82%e6%ad%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;异步指进程不是一次性执行完毕，而是走走停停，以不可知的速度向前推进。&lt;/p&gt;&#xA;&lt;h2 id=&#34;112-基本功能&#34;&gt;&#xA;  1.1.2 基本功能&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#112-%e5%9f%ba%e6%9c%ac%e5%8a%9f%e8%83%bd&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-进程管理&#34;&gt;&#xA;  1. 进程管理&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1-%e8%bf%9b%e7%a8%8b%e7%ae%a1%e7%90%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;进程控制、进程同步、进程通信、死锁处理、处理机调度等。&lt;/p&gt;&#xA;&lt;h3 id=&#34;2-内存管理&#34;&gt;&#xA;  2. 内存管理&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2-%e5%86%85%e5%ad%98%e7%ae%a1%e7%90%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;内存分配、地址映射、内存保护与共享、虚拟内存等。&lt;/p&gt;&#xA;&lt;h3 id=&#34;3-文件管理&#34;&gt;&#xA;  3. 文件管理&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#3-%e6%96%87%e4%bb%b6%e7%ae%a1%e7%90%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;文件存储空间的管理、目录管理、文件读写管理和保护等。&lt;/p&gt;&#xA;&lt;h3 id=&#34;4-设备管理&#34;&gt;&#xA;  4. 设备管理&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#4-%e8%ae%be%e5%a4%87%e7%ae%a1%e7%90%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;完成用户的 I/O 请求，方便用户使用各种设备，并提高设备的利用率。&lt;/p&gt;&#xA;&lt;p&gt;主要包括缓冲管理、设备分配、设备处理、虛拟设备等。&lt;/p&gt;&#xA;&lt;h2 id=&#34;123-系统调用&#34;&gt;&#xA;  1.2.3 系统调用&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#123-%e7%b3%bb%e7%bb%9f%e8%b0%83%e7%94%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;如果一个进程在用户态需要使用内核态的功能，就进行系统调用从而陷入内核，由操作系统代为完成。&lt;/p&gt;&#xA;&lt;p&gt;&#xA;  &lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20221223/a31b70c3a2a04481b3e3849408cc4393.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;Linux 的系统调用主要有以下这些：&lt;/p&gt;</description>
    </item>
    <item>
      <title>3.1 网络</title>
      <link>https://example.com/linux/docs/part3-sys-manage/3.1-network/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part3-sys-manage/3.1-network/</guid>
      <description>&lt;h1 id=&#34;31-网络&#34;&gt;&#xA;  3.1 网络&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#31-%e7%bd%91%e7%bb%9c&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;311-网络状态&#34;&gt;&#xA;  3.1.1 网络状态&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#311-%e7%bd%91%e7%bb%9c%e7%8a%b6%e6%80%81&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;net-tools--iproute&#34;&gt;&#xA;  net-tools &amp;amp; iproute&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#net-tools--iproute&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;Centos 7 之前一般使用 net-tools，Centos 7 之后主推 iproute / iproute2。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ifconfig&#34;&gt;&#xA;  ifconfig&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ifconfig&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;eth0 第一块网卡（网络接口)。很多时候，第一个网络接口也可能叫做下面的名字：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;eno1 板载网卡&lt;/li&gt;&#xA;&lt;li&gt;ens33 PCI-E网卡&lt;/li&gt;&#xA;&lt;li&gt;enp0s3 无法获取物理信息的PCI-E网卡&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;CentOS 7 使用了一致性网络设备命名，以上都不匹配则使用 eth0。&lt;/p&gt;&#xA;&lt;h3 id=&#34;网关路由&#34;&gt;&#xA;  网关/路由&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%bd%91%e5%85%b3%e8%b7%af%e7%94%b1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;route -n&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用&lt;code&gt;-n&lt;/code&gt;参数不解析主机名，因为默认每个 ip 都会反解成域名，如果解析耗时会一直等待。&lt;/p&gt;&#xA;&lt;h3 id=&#34;网卡物理连接情况&#34;&gt;&#xA;  网卡物理连接情况&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%bd%91%e5%8d%a1%e7%89%a9%e7%90%86%e8%bf%9e%e6%8e%a5%e6%83%85%e5%86%b5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;在 Centos 6 上可以直接输入&lt;code&gt;mii-tool&lt;/code&gt;回车，但是 Centos 7 上必须要加上网络接口名。&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230203/e180058f83f5483c87e58339415feb6a.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;因为用的是虚拟机，所以会有 SIOCGMIIPHY on &amp;rsquo;eth0&amp;rsquo; failed: Operation not supported 错误&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;网络接口网卡名称修改&#34;&gt;&#xA;  网络接口/网卡名称修改&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%bd%91%e7%bb%9c%e6%8e%a5%e5%8f%a3%e7%bd%91%e5%8d%a1%e5%90%8d%e7%a7%b0%e4%bf%ae%e6%94%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;网卡命名规则受 biosdevname 和 net.ifnames 两个参数影响。&lt;/p&gt;</description>
    </item>
    <item>
      <title>4.1 Shell 简介</title>
      <link>https://example.com/linux/docs/part4-shell/4.1-introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part4-shell/4.1-introduction/</guid>
      <description>&lt;h1 id=&#34;41-shell-简介&#34;&gt;&#xA;  4.1 Shell 简介&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#41-shell-%e7%ae%80%e4%bb%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Shell 是命令解释器，用于解释用户对操作系统的操作。CentOS7 默认使用的 Shell 是 bash。&lt;/p&gt;&#xA;&lt;p&gt;Shell 有很多可以再 /etc/shells 文件中查看：&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230628/1ff1ac3c90164b56b212d53fea91ca85.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;h2 id=&#34;411-脚本格式&#34;&gt;&#xA;  4.1.1 脚本格式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#411-%e8%84%9a%e6%9c%ac%e6%a0%bc%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;UNIX 的哲学：一条命令只做一件事。为了组合命令和多次执行，使用脚本文件来保存需要执行的命令，并赋予该文件执行权限（chmod u+rx filename）。如果是二进制文件只需要一个可执性权限，如果是脚本文件需要可读和可执行权限。&lt;/p&gt;&#xA;&lt;h3 id=&#34;sha-bang&#34;&gt;&#xA;  Sha-Bang&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#sha-bang&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;在 shell 脚本中，Sha-Bang（也称为 Shebang 或 Hashbang）是指位于脚本文件的第一行的特殊注释。它的形式是以井号 &lt;code&gt;#&lt;/code&gt; 开头，紧随其后是一个叹号 &lt;code&gt;!&lt;/code&gt;，再加上一个可执行程序的路径。&lt;/p&gt;&#xA;&lt;p&gt;下面是一个典型的 Sha-Bang 行示例：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在上述示例中，&lt;code&gt;#!/bin/bash&lt;/code&gt; 是一个 Sha-Bang 行。其中 &lt;code&gt;#!/bin/&lt;/code&gt; 是固定的前缀，用于告诉系统该文件是一个可执行文件，接下来的 bash 是解释器的路径，表示使用 Bash 解释器来执行该脚本。&lt;/p&gt;&#xA;&lt;p&gt;Sha-Bang 行的作用是指定脚本所需的解释器。当在命令行中运行脚本文件时，操作系统会读取脚本文件的第一行，根据其中的 Sha-Bang 行来确定要使用的解释器，并将该解释器用于执行该脚本。&lt;/p&gt;&#xA;&lt;p&gt;除了 &lt;code&gt;#!/bin/bash&lt;/code&gt;，还可以使用其他解释器路径，如 &lt;code&gt;/bin/sh&lt;/code&gt;、&lt;code&gt;/usr/bin/env python&lt;/code&gt; 等，根据脚本的需求选择适当的解释器。&lt;/p&gt;&#xA;&lt;p&gt;需要注意的是，Sha-Bang 行必须位于脚本文件的第一行，否则它将不会被正确解析。同时，脚本文件需要具有执行权限才能被执行。&lt;/p&gt;&#xA;&lt;h2 id=&#34;412-不同执行方式&#34;&gt;&#xA;  4.1.2 不同执行方式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#412-%e4%b8%8d%e5%90%8c%e6%89%a7%e8%a1%8c%e6%96%b9%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;脚本的执行方式大致有以下几种：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# bash 执行不需要赋予执行权限&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bash ./filename.sh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 需要有执行权限&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./filename.sh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;source ./filename.sh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;. filename.sh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;bash 和 ./ 在执行时会产生一个新的子进程，对当前的环境不会产生影响。&lt;/p&gt;</description>
    </item>
    <item>
      <title>5.1 正则表达式</title>
      <link>https://example.com/linux/docs/part5-text-operate/5.1-regular/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part5-text-operate/5.1-regular/</guid>
      <description>&lt;h1 id=&#34;51-正则表达式&#34;&gt;&#xA;  5.1 正则表达式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#51-%e6%ad%a3%e5%88%99%e8%a1%a8%e8%be%be%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;511-元字符&#34;&gt;&#xA;  5.1.1 元字符&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#511-%e5%85%83%e5%ad%97%e7%ac%a6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;元字符是正则表达式中具有特殊含义的字符。它们用于表示模式的不同部分或进行模式匹配的控制。常见的元字符包括：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;. 匹配除换行符外的任意单个字符&lt;/li&gt;&#xA;&lt;li&gt;* 匹配前面的元素零次或多次&lt;/li&gt;&#xA;&lt;li&gt;[] 匹配方括号中的字符类中的任意一个&lt;/li&gt;&#xA;&lt;li&gt;^ 匹配开头&lt;/li&gt;&#xA;&lt;li&gt;$ 匹配结尾&lt;/li&gt;&#xA;&lt;li&gt;\ 转义后面的特殊字符&lt;/li&gt;&#xA;&lt;li&gt;+ 匹配前面的元素一次或多次&lt;/li&gt;&#xA;&lt;li&gt;? 匹配前面的元素零次或一次&lt;/li&gt;&#xA;&lt;li&gt;| 匹配它前面或后面的正则表达式&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;512-通配符&#34;&gt;&#xA;  5.1.2 通配符&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#512-%e9%80%9a%e9%85%8d%e7%ac%a6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;通配符是在文件系统中使用的一种模式匹配机制。它用于匹配文件名或路径的模式。常见的通配符包括：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;* 匹配任意长度的任意字符。&lt;/li&gt;&#xA;&lt;li&gt;? 匹配单个字符。&lt;/li&gt;&#xA;&lt;li&gt;[&amp;hellip;]（方括号）：定义一个字符集，匹配括号内的任意一个字符。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;通配符主要用于文件名的模式匹配，例如在命令行中使用 ls 或 find 命令时，可以使用通配符来筛选文件名。&lt;/p&gt;&#xA;&lt;h2 id=&#34;513-find-命令&#34;&gt;&#xA;  5.1.3 find 命令&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#513-find-%e5%91%bd%e4%bb%a4&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;find 主要是在目录中查找指定文件，可以结合正则表达式实现复杂的查找功能。&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230705/b5d150c1dd99493a81f6955a9ea81083.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;p&gt;find 支持正则可以使用 -regex：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;find /etc/ -regex .*wd$&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;-type d 查找目录，-type f 查找文件：&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230705/896cc2fface144e19fa1823eb5d959b9.png&#34; width=  /&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>6.1 防火墙</title>
      <link>https://example.com/linux/docs/part6-service-manage/6.1-firewall/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part6-service-manage/6.1-firewall/</guid>
      <description>&lt;h1 id=&#34;61-防火墙&#34;&gt;&#xA;  6.1 防火墙&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#61-%e9%98%b2%e7%81%ab%e5%a2%99&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;611-分类&#34;&gt;&#xA;  6.1.1 分类&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#611-%e5%88%86%e7%b1%bb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;软件防火墙和硬件防火墙是两种常见的网络安全设备或软件，用于保护计算机系统和网络免受未授权访问、恶意攻击和网络威胁等。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;软件防火墙（Software Firewall）：&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;软件防火墙是一种安装在计算机系统上的软件应用程序，用于监控和控制网络流量。它可以通过检查网络数据包的来源、目的地、协议和端口等信息，来判断是否允许或阻止数据包的传输。软件防火墙通常运行在操作系统的网络协议栈之上，能够保护单个计算机系统或网络中的特定主机。常见的软件防火墙包括Windows防火墙、IPTables、NetFilter等。&lt;/p&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;硬件防火墙（Hardware Firewall）：&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;硬件防火墙是一种独立的物理设备，专门用于网络安全防护。它通常部署在网络的边界位置，作为网络流量的第一道防线。硬件防火墙通过硬件和专用的嵌入式软件来执行数据包过滤和访问控制。它可以监控和检测网络流量，并根据预先定义的规则和策略来允许或阻止数据包的传输。硬件防火墙通常具有更高的性能和吞吐量，并且对于整个网络中的所有主机都提供保护。常见的硬件防火墙包括 Cisco ASA、Palo Alto Networks、Fortinet 等。&lt;/p&gt;&#xA;&lt;p&gt;包过滤防火墙（Packet Filtering Firewall）和应用层防火墙（Application Layer Firewall）是防火墙的两种不同类型：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;包过滤防火墙：&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;包过滤防火墙是一种基于网络数据包的源地址、目的地址、端口号和协议等信息进行过滤和控制的防火墙。它工作在网络协议栈的较低层，可以根据预定义的规则，对数据包进行简单的检查和处理。包过滤防火墙通常比较高效，并且适用于处理大量数据包的情况。但它的检查范围相对较窄，仅能检查和过滤网络层（IP层）和传输层（TCP/UDP层）的信息。&lt;/p&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;应用层防火墙：&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;应用层防火墙是一种工作在网络协议栈较高层的防火墙，它能够检查和过滤网络流量中的应用层数据，如 HTTP、FTP、SMTP 等协议的内容。应用层防火墙能够深入检查数据包的有效载荷，根据应用层协议的特征和规则来判断和阻止恶意行为。它提供了更高级的安全功能，如访问控制、应用程序识别、反病毒扫描、入侵检测等。然而，相对于包过滤防火墙，应用层防火墙的处理开销较大，对性能有一定的影响。&lt;/p&gt;&#xA;&lt;p&gt;综上，软件防火墙和硬件防火墙是不同类型的防火墙设备或软件，而包过滤防火墙和应用层防火墙是防火墙的两种不同功能和层次的分类。它们的选择和使用取决于网络环境、安全需求和性能要求。&lt;/p&gt;&#xA;&lt;h3 id=&#34;iptables&#34;&gt;&#xA;  iptables&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#iptables&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;iptables&lt;/code&gt; 是一个软件防火墙，而不是硬件防火墙，提供了对 Linux 内核网络层的访问控制和数据包过滤的功能。&lt;/p&gt;&#xA;&lt;p&gt;iptables 可以通过定义规则集来控制传入、传出和转发的网络流量。这些规则可以基于源 IP 地址、目标 IP 地址、协议、端口号等条件进行过滤和操作。使用 iptables 可以实现诸如网络地址转换（NAT）、端口转发、数据包屏蔽、阻止 DoS（拒绝服务）攻击等功能。&lt;/p&gt;&#xA;&lt;p&gt;iptables 的工作方式是通过配置 iptables 规则表来匹配和处理网络数据包。常见的 iptables 规则表包括 filter 表（用于过滤数据包）、nat 表（用于网络地址转换）和 mangle 表（用于特殊处理数据包）。管理员可以使用命令行界面（CLI）或脚本来配置和管理 iptables。&lt;/p&gt;&#xA;&lt;p&gt;尽管 iptables 是一个软件防火墙，但它在 Linux 系统中可以与硬件防火墙配合使用。在网络架构中，可以将 Linux 服务器作为边界设备放置在硬件防火墙之后，并使用 iptables 来增强安全性和网络流量控制。这种组合的优势是，硬件防火墙负责网络的第一道防线，而 iptables 在服务器本身提供了更细粒度的流量控制和策略定制能力。&lt;/p&gt;</description>
    </item>
    <item>
      <title>7.1 命令相关</title>
      <link>https://example.com/linux/docs/part7-faq/7.1-cmd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part7-faq/7.1-cmd/</guid>
      <description>&lt;h1 id=&#34;71-命令相关&#34;&gt;&#xA;  7.1 命令相关&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#71-%e5%91%bd%e4%bb%a4%e7%9b%b8%e5%85%b3&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;711-du-ls-对于查看文件大小的区别&#34;&gt;&#xA;  7.1.1 du ls 对于查看文件大小的区别&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#711-du-ls-%e5%af%b9%e4%ba%8e%e6%9f%a5%e7%9c%8b%e6%96%87%e4%bb%b6%e5%a4%a7%e5%b0%8f%e7%9a%84%e5%8c%ba%e5%88%ab&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;ls -lh&lt;/code&gt; 和 du 命令都可以查看文件，但是 du 查看的实际文件大小，ls 查看的文件大小可能包含空洞。&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230222/5f091dbeb41a47949348b2e38cbc1514.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;p&gt;afile 文件没有空洞，ls 和 du 显示的文件大小都是 40M。&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230222/6f57ad3fd33747d7a2870e33e7cfc52c.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;p&gt;bfile 在写入的时候由于跳过了 20*4=80M，所以这 80M 是空洞文件，那么 ls 和 du 最后显示的结果就会不一样。&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.2 总览</title>
      <link>https://example.com/linux/docs/part1-primary/1.2-overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part1-primary/1.2-overview/</guid>
      <description>&lt;h1 id=&#34;12-总览&#34;&gt;&#xA;  1.2 总览&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#12-%e6%80%bb%e8%a7%88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;121-常用操作以及概念&#34;&gt;&#xA;  1.2.1 常用操作以及概念&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#121-%e5%b8%b8%e7%94%a8%e6%93%8d%e4%bd%9c%e4%bb%a5%e5%8f%8a%e6%a6%82%e5%bf%b5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;快捷键&#34;&gt;&#xA;  快捷键&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%bf%ab%e6%8d%b7%e9%94%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Tab：命令和文件名补全；&lt;/li&gt;&#xA;&lt;li&gt;Ctrl+C：中断正在运行的程序；&lt;/li&gt;&#xA;&lt;li&gt;Ctrl+D：结束键盘输入（End Of File，EOF）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;求助&#34;&gt;&#xA;  求助&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%b1%82%e5%8a%a9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;1---help&#34;&gt;&#xA;  1. &amp;ndash;help&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1---help&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;p&gt;指令的基本用法与选项介绍。&lt;/p&gt;&#xA;&lt;h4 id=&#34;2-man&#34;&gt;&#xA;  2. man&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2-man&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;p&gt;man 是 manual 的缩写，将指令的具体信息显示出来。&lt;/p&gt;&#xA;&lt;p&gt;当执行&lt;code&gt;man date&lt;/code&gt;时，有 DATE(1) 出现，其中的数字代表指令的类型，常用的数字及其类型如下：&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;代号&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;类型&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;用户在 shell 环境中可以操作的指令或者可执行文件&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;5&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;配置文件&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;8&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;系统管理员可以使用的管理指令&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h4 id=&#34;3-info&#34;&gt;&#xA;  3. info&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#3-info&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;p&gt;info 与 man 类似，但是 info 将文档分成一个个页面，每个页面可以跳转。&lt;/p&gt;&#xA;&lt;h4 id=&#34;4-doc&#34;&gt;&#xA;  4. doc&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#4-doc&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;p&gt;/usr/share/doc 存放着软件的一整套说明文件。&lt;/p&gt;&#xA;&lt;h3 id=&#34;关机&#34;&gt;&#xA;  关机&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%b3%e6%9c%ba&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;1-who&#34;&gt;&#xA;  1. who&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1-who&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;p&gt;在关机前需要先使用 who 命令查看有没有其它用户在线。&lt;/p&gt;</description>
    </item>
    <item>
      <title>2.1 帮助命令</title>
      <link>https://example.com/linux/docs/part2-sys-operate/2.1-help/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part2-sys-operate/2.1-help/</guid>
      <description>&lt;h1 id=&#34;21-帮助命令&#34;&gt;&#xA;  2.1 帮助命令&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#21-%e5%b8%ae%e5%8a%a9%e5%91%bd%e4%bb%a4&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;211-man&#34;&gt;&#xA;  2.1.1 man&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#211-man&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;man 命令有很多 section，可以通过&lt;code&gt;man man&lt;/code&gt; 查看，如下：&lt;/p&gt;&#xA;&lt;p&gt;&#xA;  &lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230201/eeea2f8f03ea41229238016e3817ee11.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;man 1&lt;/code&gt; 可以省略 1 表示查看可执行程序或 shell 命令，如&lt;code&gt;man ls&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;p&gt;如果想要通过 man 查看文件的说明，可以使用&lt;code&gt;man 5&lt;/code&gt;，比如 passwd 可以是一个系统命令也可以是一个配置文件&lt;code&gt;/etc/passwd&lt;/code&gt;，那么&lt;code&gt;man passwd&lt;/code&gt; 就是查看这个系统命令的说明，&lt;code&gt;man 5 passwd&lt;/code&gt;就是查看&lt;code&gt;/etc/passwd&lt;/code&gt;这个配置文件的说明。&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230201/c0eae59975f44265bc1109930d63ba88.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;p&gt;当不知道查看的是命令还是文件时可以使用&lt;code&gt;man -a 关键字&lt;/code&gt;，比如&lt;code&gt;man -a passwd&lt;/code&gt;，这样就会把所有的说明都列出来。&lt;/p&gt;&#xA;&lt;h2 id=&#34;212-help&#34;&gt;&#xA;  2.1.2 help&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#212-help&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;shell（命令解释器）自带的命令称为内部命令，其他的是外部命令。可以用&lt;code&gt;type 命令&lt;/code&gt;知道这个命令是内部命令还是外部命令。&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230201/b1d70e51663a4fcea62828892481e16b.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;p&gt;内部命令使用 help 帮助：&lt;code&gt;help 命令&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;外部命令使用 help 帮助：&lt;code&gt;命令 --help&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;213-info&#34;&gt;&#xA;  2.1.3 info&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#213-info&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;info 帮助比 help 更详细，可以作为 help 的补充。&lt;/p&gt;</description>
    </item>
    <item>
      <title>2.2 ls 命令</title>
      <link>https://example.com/linux/docs/part2-sys-operate/2.2-ls/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part2-sys-operate/2.2-ls/</guid>
      <description>&lt;h1 id=&#34;22-ls-命令&#34;&gt;&#xA;  2.2 ls 命令&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#22-ls-%e5%91%bd%e4%bb%a4&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;ls 可以查看多个目录，如&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls /root / &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;查看&lt;code&gt;/root&lt;/code&gt;目录和&lt;code&gt;/&lt;/code&gt;目录内容。&lt;/p&gt;&#xA;&lt;h2 id=&#34;221-常用选项&#34;&gt;&#xA;  2.2.1 常用选项&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#221-%e5%b8%b8%e7%94%a8%e9%80%89%e9%a1%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;-l-选项&#34;&gt;&#xA;  -l 选项&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-l-%e9%80%89%e9%a1%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;单列输出。&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230201/65a1ae55ae684f2bb113c27db0ba6f72.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;h3 id=&#34;-a-选项&#34;&gt;&#xA;  -a 选项&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-a-%e9%80%89%e9%a1%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;查看所有&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230201/03d8a8816d624dbb8b5fa15bf57e226b.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;h3 id=&#34;-r-选项&#34;&gt;&#xA;  -r 选项&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-r-%e9%80%89%e9%a1%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;逆序排序，默认按文件名逆序。&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230201/1bb5e95add294af1ba688687fb3b7d47.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;h3 id=&#34;-t-选项&#34;&gt;&#xA;  -t 选项&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-t-%e9%80%89%e9%a1%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;按时间信息排序。比如按时间逆序可以使用&lt;code&gt;ls -lrt&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;h3 id=&#34;-r-选项-1&#34;&gt;&#xA;  -R 选项&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-r-%e9%80%89%e9%a1%b9-1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;递归列出全部目录的内容。&lt;/p&gt;&#xA;&lt;h3 id=&#34;-h-选项&#34;&gt;&#xA;  -h 选项&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-h-%e9%80%89%e9%a1%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;-h&lt;/code&gt;参数是更加人性化打印文件的尺寸大小，单位是G，M，K，否则显示文件的字节大小。&lt;/p&gt;&#xA;&lt;p&gt;如果只用&lt;code&gt;ls -h&lt;/code&gt;是看不见文件或者目录大小的，必须加上&lt;code&gt;ls -lh&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230201/597f5cac477e453c8dc2b1977cd88769.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;p&gt;du 命令同样可以显示文件大小，但是 du 命令显示的&lt;strong&gt;实际&lt;/strong&gt;文件大小，ls 显示的文件大小可能包含空洞。&lt;/p&gt;&#xA;&lt;h3 id=&#34;-d-选项&#34;&gt;&#xA;  -d 选项&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-d-%e9%80%89%e9%a1%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;将目录名像其它文件一样列出，而不是列出它们的内容。&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230202/5f99fdee524649d5967a0e82696c613c.png&#34; width=  /&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>3.2 网络故障排除</title>
      <link>https://example.com/linux/docs/part3-sys-manage/3.2-net-trouble-removal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part3-sys-manage/3.2-net-trouble-removal/</guid>
      <description>&lt;h1 id=&#34;32-网络故障排除&#34;&gt;&#xA;  3.2 网络故障排除&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#32-%e7%bd%91%e7%bb%9c%e6%95%85%e9%9a%9c%e6%8e%92%e9%99%a4&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;321-ping&#34;&gt;&#xA;  3.2.1 ping&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#321-ping&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;测试主机之间网络的连通性。&lt;/p&gt;&#xA;&lt;h3 id=&#34;-c-参数&#34;&gt;&#xA;  -c 参数&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-c-%e5%8f%82%e6%95%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;设置完成要求回应的次数。&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230203/ac31f905895f4337a250c4ba83d7d291.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;h2 id=&#34;322-traceroute&#34;&gt;&#xA;  3.2.2 traceroute&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#322-traceroute&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;323-mtr&#34;&gt;&#xA;  3.2.3 mtr&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#323-mtr&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;324-nslookup&#34;&gt;&#xA;  3.2.4 nslookup&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#324-nslookup&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;324-telnet&#34;&gt;&#xA;  3.2.4 telnet&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#324-telnet&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;端口是否畅通&#34;&gt;&#xA;  端口是否畅通&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%ab%af%e5%8f%a3%e6%98%af%e5%90%a6%e7%95%85%e9%80%9a&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;telnet www.baidu.com &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 我当前主机到对方主机的 80 端口是否畅通&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230204/5c863b7689e14607a75f9ace2e33ebb5.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;h2 id=&#34;325-tcpdump&#34;&gt;&#xA;  3.2.5 tcpdump&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#325-tcpdump&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcpdump -i any -n port &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;-i-选线&#34;&gt;&#xA;  -i 选线&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-i-%e9%80%89%e7%ba%bf&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;指定网卡，可以用 &lt;code&gt;-i any&lt;/code&gt; 表示所有网卡或是&lt;code&gt;-i eth0&lt;/code&gt;指定网络接口/网卡的数据包。如果不指定网卡，默认 tcpdump 只会监视第一个网络接口，一般是 eth0。&lt;/p&gt;&#xA;&lt;h3 id=&#34;-n-选项&#34;&gt;&#xA;  -n 选项&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-n-%e9%80%89%e9%a1%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;不要使用域名的形式进行显示。&lt;/p&gt;&#xA;&lt;h3 id=&#34;port&#34;&gt;&#xA;  port&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#port&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;指定端口。&lt;/p&gt;</description>
    </item>
    <item>
      <title>4.2 环境变量</title>
      <link>https://example.com/linux/docs/part4-shell/4.2-env-config-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part4-shell/4.2-env-config-file/</guid>
      <description>&lt;h1 id=&#34;42-环境变量&#34;&gt;&#xA;  4.2 环境变量&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#42-%e7%8e%af%e5%a2%83%e5%8f%98%e9%87%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;421-系统环境变量&#34;&gt;&#xA;  4.2.1 系统环境变量&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#421-%e7%b3%bb%e7%bb%9f%e7%8e%af%e5%a2%83%e5%8f%98%e9%87%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;环境变量是每个 Shel 打开都可以直接获得到的变量。&lt;/p&gt;&#xA;&lt;p&gt;env 命令可以查看所有已经存在的环境变量。&lt;/p&gt;&#xA;&lt;p&gt;set 可以查看到比 env 更多的环境变量，包括预定义变量。&lt;/p&gt;&#xA;&lt;p&gt;$PATH 是命令搜索路径，如果使用的命令不在 $PATH 下就需要使用完整路径。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;$?&lt;/code&gt; 可以查看上一条命令是否执行成功，成为返回 0&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;$$&lt;/code&gt; 查看当前进程的 PID&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;$0&lt;/code&gt; 查看当前执行的脚本或程序的名称。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h4 id=&#34;位置参数&#34;&gt;&#xA;  位置参数&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%bd%8d%e7%bd%ae%e5%8f%82%e6%95%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$1,$2 ,...., $9,&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;10&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230629/260cb6c6af9940098210d60530e0a433.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;p&gt;&lt;code&gt;${2-_}&lt;/code&gt; 表示变量替换，意思是，如果 $2 不为空就取 $2，如果为空就是 &lt;code&gt;_&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;h4 id=&#34;ps1&#34;&gt;&#xA;  $PS1&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ps1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;p&gt;$PS1 用于定义 Unix 或类 Unix 操作系统中的命令行提示符。它控制着命令行界面（shell）中显示的每个命令行的外观和格式。用于设置主提示符（primary prompt）。主提示符通常在每个命令行的开始处显示，并用于指示用户输入命令。&lt;/p&gt;&#xA;&lt;p&gt;$PS1 的值可以包含一些特殊的转义字符和变量，以便在提示符中插入特定的信息，例如当前用户名、主机名、当前工作目录等。&lt;/p&gt;&#xA;&lt;p&gt;下面是一个示例，展示如何设置 $PS1 变量来定义自定义的命令行提示符：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 设置自定义的命令行提示符&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export PS1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\u@\h:\w\$ &amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 示例输出：user@hostname:/current/path$&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在上述示例中，$PS1 的值为 &lt;code&gt;&amp;quot;\u@\h:\w\$ &amp;quot;&lt;/code&gt;，其中：&lt;/p&gt;</description>
    </item>
    <item>
      <title>5.2 sed 命令</title>
      <link>https://example.com/linux/docs/part5-text-operate/5.2-sed/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part5-text-operate/5.2-sed/</guid>
      <description>&lt;h1 id=&#34;52-sed-命令&#34;&gt;&#xA;  5.2 sed 命令&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#52-sed-%e5%91%bd%e4%bb%a4&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;521-简介&#34;&gt;&#xA;  5.2.1 简介&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#521-%e7%ae%80%e4%bb%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;sed（stream EDitor）是一个强大而简单的文本解析转换工具，可以读取文本，并根据指定的条件对文本内容进行编辑（删除、替换，添加、移动等），最后输出所有行或仅输出处理的某些行。&lt;/p&gt;&#xA;&lt;p&gt;sed 也可以在无交互的情况下实现相当复杂的文本处理操作，将不规范的文本，处理为 “比较规范” 的文本，被广泛应用于 shell 脚本中，用以完成各种自动化处理任务。&lt;/p&gt;&#xA;&lt;p&gt;sed 的工作流程主要包括读取、执行和显示三个过程：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;读取： sed 从输入流（文件、管道、标准输入）中读取一行内容并存储到临时的缓冲区（又称模式空间）。&lt;/li&gt;&#xA;&lt;li&gt;执行： 默认情况下，所有的 sed 命令都在模式空间中顺序地执行，除非指定了行的地址，否则 sed 命令将会在所有行上一次执行。&lt;/li&gt;&#xA;&lt;li&gt;显示： 发送修改后的内容到输出流，在发送数据后，模式空间将会被清空。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;在所有的文件内容都被处理完成之前，上述过程将重复执行，直至所有内容被处理完。&lt;/p&gt;&#xA;&lt;p&gt;默认情况下所有的 sed 命令，都是在模式空间内执行的，因此输入的文件并不会发生变化。&lt;/p&gt;&#xA;&lt;h2 id=&#34;522-选项操作&#34;&gt;&#xA;  5.2.2 选项操作&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#522-%e9%80%89%e9%a1%b9%e6%93%8d%e4%bd%9c&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;通常情况下调用 sed 命令有两种格式。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;“参数” 是指操作的&lt;strong&gt;目标文件&lt;/strong&gt;，当存在多个操作对象时，文件之间用逗号分隔。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sed &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;选项&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;操作&amp;#39;&lt;/span&gt; 参数&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;scriptfile 表示脚本文件，需要用&lt;code&gt;-f&lt;/code&gt;选项指定，当脚本文件出现在目标文件之前时，表示通过指定的脚本文件来处理输入的目标文件。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sed &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;选项&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; -f scriptfile 参数&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;常见选项&#34;&gt;&#xA;  常见选项&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b8%b8%e8%a7%81%e9%80%89%e9%a1%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;选项&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;功能&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;-e&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;表示用指定命令或者脚本来处理输入的文本文件&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;-f&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;表示用指定的脚本文件来处理输入的文本文件&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;-h&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;显示帮助&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;-n&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;表示仅显示处理后的结果&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;-i&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;直接编辑文本文件&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;-r 或 -E&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;使用扩展正则表达式&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;-s&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;将多个文件视为独立文件，而不是单个连续的长文件流&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;操作指令&#34;&gt;&#xA;  操作指令&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%93%8d%e4%bd%9c%e6%8c%87%e4%bb%a4&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;「操作」用于指定文件对操作的动作行为，也就是 sed 的命令。&lt;/p&gt;</description>
    </item>
    <item>
      <title>6.2 ssh</title>
      <link>https://example.com/linux/docs/part6-service-manage/6.2-ssh/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part6-service-manage/6.2-ssh/</guid>
      <description>&lt;h1 id=&#34;62-ssh&#34;&gt;&#xA;  6.2 ssh&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#62-ssh&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;621-ssh-和-telnet&#34;&gt;&#xA;  6.2.1 ssh 和 telnet&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#621-ssh-%e5%92%8c-telnet&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;SSH（Secure Shell）和 Telnet 是两种用于远程登录和管理计算机系统的网络协议，它们在功能和安全性方面存在一些重要的区别。&lt;/p&gt;&#xA;&lt;p&gt;Telnet 是一种最早的远程登录协议，它使用明文传输数据，包括用户名和密码等敏感信息。由于数据不加密，Telnet 协议在传输过程中容易受到网络嗅探和中间人攻击的风险。因此，Telnet 在现代网络环境中很少使用，主要用于一些特殊的应用场景或旧版系统的维护。&lt;/p&gt;&#xA;&lt;p&gt;SSH 是一种安全的远程登录协议，它通过加密传输数据，提供了更高的安全性。SSH 使用公钥加密和对称密钥加密的组合，可以保护登录过程中传输的用户名、密码和其他敏感数据。由于 SSH 使用加密技术，网络嗅探和中间人攻击对SSH连接的影响较小。&lt;/p&gt;&#xA;&lt;p&gt;相比之下，Telne t的主要优点是简单易用，而 SSH 则提供了更高的安全性和功能。SSH 不仅可以进行远程登录，还可以在远程计算机上执行命令、传输文件和建立安全的远程连接。SSH 广泛应用于服务器管理、远程维护和安全通信等领域。&lt;/p&gt;&#xA;&lt;p&gt;总结来说，Telnet 是一种不安全的远程登录协议，而 SSH 是一种安全的替代方案。在现代网络环境中，建议使用 SSH 来进行远程登录和管理计算机系统，以保护数据的安全性。&lt;/p&gt;&#xA;&lt;h2 id=&#34;622-telnet-使用&#34;&gt;&#xA;  6.2.2 telnet 使用&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#622-telnet-%e4%bd%bf%e7%94%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 安装客户端&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yum install telnet -y&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 安装服务端&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yum install telnet-server xinetd -y&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 启动 telnet 服务&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl start xinetd.service&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl start telnet.socket&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 登录 telnet&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# telnet ip&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;telnet 192.168.14.12&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在用 telnet 登录尽量使用非 root 用户，因为 telnet 传输是明文的，在有些情况下 root 用户登录是被限制的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.3 常见目录</title>
      <link>https://example.com/linux/docs/part1-primary/1.3-common-dir/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part1-primary/1.3-common-dir/</guid>
      <description>&lt;h1 id=&#34;13-常见目录&#34;&gt;&#xA;  1.3 常见目录&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#13-%e5%b8%b8%e8%a7%81%e7%9b%ae%e5%bd%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/ # 根目录&#xA;├── /root # root 用户家目录&#xA;├── /home/username # 普通用户家目录&#xA;├── /etc # 配置文件目录&#xA;├── /bin # 命令目录&#xA;├── /sbib # 管理命令目录&#xA;├── /usr/bin # 系统预装的其他命令&#xA;└── /usr/sbin # 系统预装的其他命令&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>2.3 关机</title>
      <link>https://example.com/linux/docs/part2-sys-operate/2.3-shutdown/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part2-sys-operate/2.3-shutdown/</guid>
      <description>&lt;h1 id=&#34;23-关机&#34;&gt;&#xA;  2.3 关机&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#23-%e5%85%b3%e6%9c%ba&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;1-who&#34;&gt;&#xA;  1. who&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1-who&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;在关机前需要先使用 who 命令查看有没有其它用户在线。&lt;/p&gt;&#xA;&lt;h2 id=&#34;2-sync&#34;&gt;&#xA;  2. sync&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2-sync&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;为了加快对磁盘文件的读写速度，位于内存中的文件数据不会立即同步到磁盘，因此关机之前需要先进行 sync 同步操作。&lt;/p&gt;&#xA;&lt;h2 id=&#34;3-shutdown&#34;&gt;&#xA;  3. shutdown&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#3-shutdown&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;## shutdown [-krhc] 时间 [信息]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-k ： 不会关机，只是发送警告信息，通知所有在线的用户&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-r ： 将系统的服务停掉后就重新启动&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-h ： 将系统的服务停掉后就立即关机&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-c ： 取消已经在进行的 shutdown&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;参考&#34;&gt;&#xA;  参考&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8f%82%e8%80%83&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;  &lt;a href=&#34;https://blog.csdn.net/cnds123321/article/details/124995067&#34;&gt;Linux命令之关机shutdown&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>3.3 网络服务管理</title>
      <link>https://example.com/linux/docs/part3-sys-manage/3.3-net-manage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part3-sys-manage/3.3-net-manage/</guid>
      <description>&lt;h1 id=&#34;33-网络服务管理&#34;&gt;&#xA;  3.3 网络服务管理&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#33-%e7%bd%91%e7%bb%9c%e6%9c%8d%e5%8a%a1%e7%ae%a1%e7%90%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;网络管理工具常用的有 2 套，一个是 network，另一个是 networkManger。在 Centos 6 中只有 network，在某些 Centos 7 机器中可能 2 套都存在，不要把 2 套工具都 enable，在工作中，一般只用一个禁用另外一个。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl disable NetworkManager&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl enable NetworkManager&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;service network status&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;service network restart&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230204/3b30918decfd4a5c9c04f13c560145c0.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;p&gt;一般在服务器上常用 network 工具。networkManager 常用在个人电脑上。&lt;/p&gt;&#xA;&lt;h2 id=&#34;331-设置主机名&#34;&gt;&#xA;  3.3.1 设置主机名&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#331-%e8%ae%be%e7%bd%ae%e4%b8%bb%e6%9c%ba%e5%90%8d&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;临时修改主机名：&lt;code&gt;hostname 临时主机名&lt;/code&gt; 系统重启后会被重置。&lt;/p&gt;&#xA;&lt;p&gt;永久修改主机名：&lt;code&gt;hostnamectl 永久主机名&lt;/code&gt; 是对 /etc/hostname 文件的内容进行修改。&lt;/p&gt;&#xA;&lt;h2 id=&#34;331-service&#34;&gt;&#xA;  3.3.1 service&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#331-service&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;参考&#34;&gt;&#xA;  参考&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8f%82%e8%80%83&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;  &lt;a href=&#34;https://www.cnblogs.com/litifeng/p/6887792.html&#34;&gt;linux下/etc/hosts 和hostname文件的区别&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>4.3 数组</title>
      <link>https://example.com/linux/docs/part4-shell/4.3-array/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part4-shell/4.3-array/</guid>
      <description>&lt;h1 id=&#34;43-数组&#34;&gt;&#xA;  4.3 数组&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#43-%e6%95%b0%e7%bb%84&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;定义数组&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;IPTS&lt;span style=&#34;color:#f92672&#34;&gt;=(&lt;/span&gt;10.0.0.1 10.0.0.2 10.0.0.3&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;显示数组的所有元素&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;IPTS[@]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;显示数组元素个数&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;${#&lt;/span&gt;PTS[@]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;显示数组的第一个元素&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo $IPTS&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;])&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230703/fbccd86370624c7b8e67e137557db63e.png&#34; width=  /&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>5.3 awk 命令</title>
      <link>https://example.com/linux/docs/part5-text-operate/5.3-awk/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part5-text-operate/5.3-awk/</guid>
      <description>&lt;h1 id=&#34;53-awk-命令&#34;&gt;&#xA;  5.3 awk 命令&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#53-awk-%e5%91%bd%e4%bb%a4&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;awk 是一种处理文本文件的语言，是一个强大的文件分析工具。常用于处理 “比较规范” 的文本处理，统计数量并输出指定字段。&lt;/p&gt;&#xA;&lt;p&gt;awk 比较倾向于将一行分成多个 “字段” 进行处理。awk 信息的读入是逐行读取的，执行结果可以通过 print 将字段数据打印显示。在使用 awk 命令的过程中，可以使用逻辑操作符，&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;、&lt;code&gt;||&lt;/code&gt; 、&lt;code&gt;!&lt;/code&gt;，还可以进行简单的数学运算，如&lt;code&gt;+&lt;/code&gt;、&lt;code&gt;-&lt;/code&gt;、&lt;code&gt;*&lt;/code&gt;、&lt;code&gt;/&lt;/code&gt;、&lt;code&gt;%&lt;/code&gt;、&lt;code&gt;^&lt;/code&gt;分别表示加、减、乘、除、取余和乘方。&lt;/p&gt;&#xA;&lt;h2 id=&#34;531-使用格式&#34;&gt;&#xA;  5.3.1 使用格式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#531-%e4%bd%bf%e7%94%a8%e6%a0%bc%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;awk 「选项」 &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;模式或条件{操作}&amp;#39;&lt;/span&gt; 文件名 &lt;span style=&#34;color:#75715e&#34;&gt;# 格式1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;awk -f 脚本文件 文件名 &lt;span style=&#34;color:#75715e&#34;&gt;# 格式2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;532-内置变量&#34;&gt;&#xA;  5.3.2 内置变量&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#532-%e5%86%85%e7%bd%ae%e5%8f%98%e9%87%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;内置变量&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;功能&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;NF&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;当前处理的行的字段个数（就是：有多少列）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;NR&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;当前处理的行的行号（就是：有多少行）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;FNR&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;读取文件的记录数（行号），从1开始，新的文件重新从1开始计数&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;$0&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;当前处理的行的整行内容（就是：表示一行的内容）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;$n&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;当前处理行的第n个字段（就是：第n列）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;FILENAME&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;被处理的文件名&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;FS&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;指定每行的字段分隔符，默认为空格或制表位（相当于选项 -F ）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;OFS&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;输出字段的分隔符，默认也是空格&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;RS&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;行分割符。awk 从文件上读取资料时，将根据 RS 的定义把资料切割成许多条记录，而 awk 一次仅读取一条记录，预设值是&lt;code&gt;\n&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;ORS&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;输出分割符，默认也是换行符&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;n-用法&#34;&gt;&#xA;  $n 用法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#n-%e7%94%a8%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;n 为数字，数字为几就表示第几列。&lt;/p&gt;</description>
    </item>
    <item>
      <title>6.3 ftp</title>
      <link>https://example.com/linux/docs/part6-service-manage/6.3-ftp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part6-service-manage/6.3-ftp/</guid>
      <description>&lt;h1 id=&#34;63-ftp&#34;&gt;&#xA;  6.3 ftp&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#63-ftp&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;631-协议介绍&#34;&gt;&#xA;  6.3.1 协议介绍&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#631-%e5%8d%8f%e8%ae%ae%e4%bb%8b%e7%bb%8d&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;FTP（File Transfer Protocol）是一种用于在计算机网络上进行文件传输的标准协议。它使用客户端-服务器模型，在客户端和服务器之间进行文件传输和交互。&lt;/p&gt;&#xA;&lt;p&gt;FTP 协议定义了一套命令和响应规范，用于控制和管理文件传输过程。它支持用户身份验证、目录浏览、文件上传和下载等操作。&lt;/p&gt;&#xA;&lt;p&gt;在 FTP 中，存在两种模式来建立数据连接：主动（Active）模式和被动（Passive）模式。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;主动模式（Active Mode）：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在主动模式下，FTP 客户端使用随机生成的端口（通常大于1024）向服务器的默认 FTP 数据端口（端口20）发起连接。&lt;/li&gt;&#xA;&lt;li&gt;FTP 客户端发送一个 PORT 命令，其中包含客户端的 IP 地址和数据端口号。&lt;/li&gt;&#xA;&lt;li&gt;FTP 服务器使用它的默认控制端口（端口21）向 FTP 客户端的指定数据端口发起连接，以建立数据连接，并进行文件传输。&lt;/li&gt;&#xA;&lt;li&gt;主动模式需要 FTP 服务器能够主动连接 FTP 客户端，因此 FTP 服务器通常需要允许外部访问，并配置防火墙和 NAT 设备以允许数据连接。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;被动模式（Passive Mode）：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在被动模式下，FTP 客户端发送 PASV 命令给 FTP 服务器，请求进入被动模式。&lt;/li&gt;&#xA;&lt;li&gt;FTP 服务器在一个固定的范围内选择一个可用的端口（通常大于1024），并将其作为数据端口。&lt;/li&gt;&#xA;&lt;li&gt;FTP 服务器将自己的 IP 地址和数据端口作为响应发送给FTP客户端。&lt;/li&gt;&#xA;&lt;li&gt;FTP 客户端使用这个 IP 地址和数据端口发起连接，以建立数据连接，并进行文件传输。&lt;/li&gt;&#xA;&lt;li&gt;被动模式适用于FTP客户端位于防火墙或 NAT 后面的情况，因为它不需要FTP服务器主动连接FTP客户端。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;总结来说，主动模式和被动模式是 FTP 用于建立数据连接的两种不同方式。主动模式要求 FTP 服务器主动连接 FTP 客户端，而被动模式则允许 FTP 客户端主动连接 FTP 服务器。在配置 FTP 服务器和网络环境时，需要根据具体情况选择适合的模式，并确保防火墙和 NAT 设备正确配置以允许数据连接的建立。&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.4 进程管理</title>
      <link>https://example.com/linux/docs/part1-primary/1.4-process-manage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part1-primary/1.4-process-manage/</guid>
      <description>&lt;h1 id=&#34;14-进程管理&#34;&gt;&#xA;  1.4 进程管理&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#14-%e8%bf%9b%e7%a8%8b%e7%ae%a1%e7%90%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;141-进程与线程&#34;&gt;&#xA;  1.4.1 进程与线程&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#141-%e8%bf%9b%e7%a8%8b%e4%b8%8e%e7%ba%bf%e7%a8%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-进程&#34;&gt;&#xA;  1. 进程&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1-%e8%bf%9b%e7%a8%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;进程是资源分配的基本单位。&lt;/p&gt;&#xA;&lt;p&gt;进程控制块 (Process Control Block, PCB) 描述进程的基本信息和运行状态，所谓的创建进程和撤销进程，都是指对 PCB 的操作。&lt;/p&gt;&#xA;&lt;p&gt;下图显示了 4 个程序创建了 4 个进程，这 4 个进程可以并发地执行。&lt;/p&gt;&#xA;&lt;p&gt;&#xA;  &lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20221223/b6dc70c4f823407cba40ae6ba489f2fb.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;2-线程&#34;&gt;&#xA;  2. 线程&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2-%e7%ba%bf%e7%a8%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;线程是独立调度的基本单位。&lt;/p&gt;&#xA;&lt;p&gt;一个进程中可以有多个线程，它们共享进程资源。&lt;/p&gt;&#xA;&lt;p&gt;QQ 和浏览器是两个进程，浏览器进程里面有很多线程，例如 HTTP 请求线程、事件响应线程、渲染线程等等，线程的并发执行使得在浏览器中点击一个新链接从而发起 HTTP 请求时，浏览器还可以响应用户的其它事件。&lt;/p&gt;&#xA;&lt;p&gt;&#xA;  &lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20221223/75fc51ba7687443d9df0cad87ff6e355.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;3-区别&#34;&gt;&#xA;  3. 区别&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#3-%e5%8c%ba%e5%88%ab&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;-拥有资源&#34;&gt;&#xA;  Ⅰ 拥有资源&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-%e6%8b%a5%e6%9c%89%e8%b5%84%e6%ba%90&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;p&gt;进程是资源分配的基本单位，但是线程不拥有资源，线程可以访问隶属进程的资源。&lt;/p&gt;&#xA;&lt;h4 id=&#34;-调度&#34;&gt;&#xA;  Ⅱ 调度&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-%e8%b0%83%e5%ba%a6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;p&gt;线程是独立调度的基本单位，在同一进程中，线程的切换不会引起进程切换，从一个进程中的线程切换到另一个进程中的线程时，会引起进程切换。&lt;/p&gt;&#xA;&lt;h4 id=&#34;-系统开销&#34;&gt;&#xA;  Ⅲ 系统开销&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-%e7%b3%bb%e7%bb%9f%e5%bc%80%e9%94%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;p&gt;由于创建或撤销进程时，系统都要为之分配或回收资源，如内存空间、I/O 设备等，所付出的开销远大于创建或撤销线程时的开销。类似地，在进行进程切换时，涉及当前执行进程 CPU 环境的保存及新调度进程 CPU 环境的设置，而线程切换时只需保存和设置少量寄存器内容，开销很小。&lt;/p&gt;&#xA;&lt;h4 id=&#34;-通信方面&#34;&gt;&#xA;  Ⅳ 通信方面&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-%e9%80%9a%e4%bf%a1%e6%96%b9%e9%9d%a2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;p&gt;线程间可以通过直接读写同一进程中的数据进行通信，但是进程通信需要借助 IPC（Inter-Process Communication，进程间通信）。&lt;/p&gt;</description>
    </item>
    <item>
      <title>2.4 cp 命令</title>
      <link>https://example.com/linux/docs/part2-sys-operate/2.4-cp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part2-sys-operate/2.4-cp/</guid>
      <description>&lt;h1 id=&#34;24-cp-命令&#34;&gt;&#xA;  2.4 cp 命令&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#24-cp-%e5%91%bd%e4%bb%a4&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;将源文件或目录复制到目标文件或目录中。&lt;/p&gt;&#xA;&lt;h2 id=&#34;241-常用选项&#34;&gt;&#xA;  2.4.1 常用选项&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#241-%e5%b8%b8%e7%94%a8%e9%80%89%e9%a1%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;-p-选项&#34;&gt;&#xA;  -p 选项&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-p-%e9%80%89%e9%a1%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;在复制文件后，文件的时间会&lt;strong&gt;发生变化&lt;/strong&gt;，属主也有可能会发生变化。&lt;code&gt;-p&lt;/code&gt;可以保留源文件或目录的属性。&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230201/7e2ad99623484d81a7d9efb42b7d3122.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;h3 id=&#34;-a-选项&#34;&gt;&#xA;  -a 选项&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-a-%e9%80%89%e9%a1%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;在复制文件后，权限，属主和时间都不发生变化。&lt;/p&gt;&#xA;&lt;h3 id=&#34;-f-选项&#34;&gt;&#xA;  -f 选项&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-f-%e9%80%89%e9%a1%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;强行复制文件或目录，不论目标文件或目录是否已存在。&lt;/p&gt;&#xA;&lt;h3 id=&#34;-r-选项&#34;&gt;&#xA;  -r 选项&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-r-%e9%80%89%e9%a1%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;递归处理，将指定目录下的所有文件与子目录一并处理。&lt;/p&gt;</description>
    </item>
    <item>
      <title>3.4 软件安装</title>
      <link>https://example.com/linux/docs/part3-sys-manage/3.4-soft-install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part3-sys-manage/3.4-soft-install/</guid>
      <description>&lt;h1 id=&#34;34-软件安装&#34;&gt;&#xA;  3.4 软件安装&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#34-%e8%bd%af%e4%bb%b6%e5%ae%89%e8%a3%85&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;341-软件包管理器&#34;&gt;&#xA;  3.4.1 软件包管理器&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#341-%e8%bd%af%e4%bb%b6%e5%8c%85%e7%ae%a1%e7%90%86%e5%99%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;包管理器是方便软件安装、卸载，解决软件依赖关系的重要工具。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;CentOS、RedHat 使用 yum 包管理器，软件安装包格式为 rpm。&lt;/li&gt;&#xA;&lt;li&gt;Debian、Ubuntu 使用 apt 包管理器，软件安装包格式为 deb。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;342-rpm-包和-rpm-命令&#34;&gt;&#xA;  3.4.2 rpm 包和 rpm 命令&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#342-rpm-%e5%8c%85%e5%92%8c-rpm-%e5%91%bd%e4%bb%a4&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;包格式&#34;&gt;&#xA;  包格式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8c%85%e6%a0%bc%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230211/04dbfea5d4a64e07861ee337712a0bea.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;h3 id=&#34;命令常用参数&#34;&gt;&#xA;  命令常用参数&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%91%bd%e4%bb%a4%e5%b8%b8%e7%94%a8%e5%8f%82%e6%95%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;-q 查询软件包，-qa 查看所有。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rpm -qa&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230211/e7b2fe4a010d484690790b60e08e5a9f.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;-i 安装软件包&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;-e 卸载软件包&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;问题&#34;&gt;&#xA;  问题&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%97%ae%e9%a2%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;使用 rpm 时需要手动解决依赖关系，在实际应用中用的不多，常用 yum 命令安装。软件包来源不可靠。&lt;/p&gt;&#xA;&lt;h2 id=&#34;343-yum-仓库&#34;&gt;&#xA;  3.4.3 yum 仓库&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#343-yum-%e4%bb%93%e5%ba%93&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;修改-yum-源&#34;&gt;&#xA;  修改 yum 源&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%bf%ae%e6%94%b9-yum-%e6%ba%90&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;&#xA;  &lt;a href=&#34;https://developer.aliyun.com/mirror/&#34;&gt;阿里巴巴官方镜像站 https://developer.aliyun.com/mirror/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230212/07f5b92546494d019ba93f2d8c506cf2.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;p&gt;经常需要安装 epel 来扩展 yum 仓库源，不常见的一些软件可以通过 epel 仓库来安装：&lt;/p&gt;</description>
    </item>
    <item>
      <title>4.4 转义和引用</title>
      <link>https://example.com/linux/docs/part4-shell/4.4-escape-quot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part4-shell/4.4-escape-quot/</guid>
      <description>&lt;h1 id=&#34;44-转义和引用&#34;&gt;&#xA;  4.4 转义和引用&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#44-%e8%bd%ac%e4%b9%89%e5%92%8c%e5%bc%95%e7%94%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;441-特殊字符&#34;&gt;&#xA;  4.4.1 特殊字符&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#441-%e7%89%b9%e6%ae%8a%e5%ad%97%e7%ac%a6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;一个字符不仅有字面意义，还有元意（meta-meaning）&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;# 注释&lt;/li&gt;&#xA;&lt;li&gt;; 分号&lt;/li&gt;&#xA;&lt;li&gt;\ 转义符号&lt;/li&gt;&#xA;&lt;li&gt;“ 和 &amp;rsquo; 引号&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;引号&#34;&gt;&#xA;  引号&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%bc%95%e5%8f%b7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&amp;rsquo; 单引号，完全引用。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&amp;quot; 双引号，不完全引用，变量会进行解释。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;` 反引号，执行命令&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;括号&#34;&gt;&#xA;  括号&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%8b%ac%e5%8f%b7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;()，(())，$() 圆括号&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;单独使用圆括号会产生一个子 shell (yz=123)&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230704/0ca9f4345aa04357a5f1518d8607d786.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;p&gt;数组初始化 &lt;code&gt;lPS=(ip1 ip2 ip3)&lt;/code&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;[]，[[]] 方括号&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;[]（方括号）是传统的条件测试语法，也被称为单方括号条件测试。它执行基本的条件测试，主要用于进行字符串比较和数值比较。例如，可以来检查两个字符串是否相等，或者一个数值是否大于另一个数值。&lt;/p&gt;&#xA;&lt;p&gt;[[]]（双方括号）是高级的条件测试语法，也被称为双方括号条件测试。它是 Bash shell 的扩展功能，提供了更多的条件测试选项和功能。它支持字符串比较、模式匹配、正则表达式匹配、文件匹配等更复杂的条件测试。此外，双方括号还提供了更灵活的逻辑运算符和字符串操作符。&lt;/p&gt;&#xA;&lt;p&gt;在使用条件测试时，以下是一些[]和[[]]的区别和注意事项：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;[] 需要在参数和操作符周围使用空格，而 [[]] 不需要使用空格。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;[] 是 POSIX 标准的一部分，因此在大多数 Shell 中都可以使用。而 [[]] 是 Bash shell 的扩展功能，只能在 Bash 或兼容 Bash 的 Shell 中使用。&lt;/p&gt;</description>
    </item>
    <item>
      <title>5.4 cut、sort、uniq、tr 命令</title>
      <link>https://example.com/linux/docs/part5-text-operate/5.4-cut-sort-uniq-tr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part5-text-operate/5.4-cut-sort-uniq-tr/</guid>
      <description>&lt;h1 id=&#34;54-cutsortuniqtr-命令&#34;&gt;&#xA;  5.4 cut、sort、uniq、tr 命令&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#54-cutsortuniqtr-%e5%91%bd%e4%bb%a4&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;541-cut&#34;&gt;&#xA;  5.4.1 cut&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#541-cut&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;概述&#34;&gt;&#xA;  概述&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%a6%82%e8%bf%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;cut 是&lt;strong&gt;列截取&lt;/strong&gt;工具。cut 命令从文件的每一行剪切字节、字符和字段并将这些字节、字符和字段写至标准输出。&lt;/p&gt;&#xA;&lt;p&gt;如果不指定 file 参数，cut 命令将读取标准输入。必须指定 -b(字节) 、-c(字符) 或 -f(第几列) 标志之一。&lt;/p&gt;&#xA;&lt;p&gt;字符和字节的区别&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;字节（byte）是计量单位，表示数据量多少，是计算机信息技术用于计量存储容量的一种计量单位，通常情况下 1 字节等于 8 位。&lt;/li&gt;&#xA;&lt;li&gt;字符（character）计算机中使用的字母、数字、字和符号。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;一般在英文状态下，一个字母或字符占用一个字节， 一个汉字占用两个字节 。&lt;/p&gt;&#xA;&lt;h3 id=&#34;常用选线&#34;&gt;&#xA;  常用选线&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b8%b8%e7%94%a8%e9%80%89%e7%ba%bf&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;格式：cut &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;选项&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;文件路径&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;选项&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;功能&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;-b&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;按字节截取&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;-c&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;按字符截取，常用于中文&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;-d&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;指定以什么为分割符截取，默认为制表符&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;-f&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;通常和 -d 一起使用（表示截取第几列）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;案例演示&#34;&gt;&#xA;  案例演示&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%a1%88%e4%be%8b%e6%bc%94%e7%a4%ba&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;截取 /etc/passwd 文件的中 root 用户的第 7 列（-d -f）&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230209/1f8ca1bb3b4b4406bb576f898c421c3e.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;按字节截取（-b）&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230209/fada999aaed7440d874c42165c6979f8.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;按字符截取（-c）&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;截取第一位是 1，不是 0。&lt;/p&gt;</description>
    </item>
    <item>
      <title>6.4 samba</title>
      <link>https://example.com/linux/docs/part6-service-manage/6.4-samba/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part6-service-manage/6.4-samba/</guid>
      <description>&lt;h1 id=&#34;64-samba&#34;&gt;&#xA;  6.4 samba&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#64-samba&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;641-简介&#34;&gt;&#xA;  6.4.1 简介&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#641-%e7%ae%80%e4%bb%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Samba 是一个开源软件套件，用于在 Linux 和 UNIX 系统上实现文件和打印机共享。它允许 Linux/UNIX 系统与 Windows 操作系统之间进行文件和资源共享，使得 Linux/UNIX 系统可以像 Windows 一样访问和使用网络共享资源。&lt;/p&gt;&#xA;&lt;p&gt;Samba 提供了 SMB/CIFS（Server Message Block/Common Internet File System）协议的实现，这是 Windows 操作系统中用于文件和打印机共享的标准协议。通过 Samba，Linux/UNIX 系统可以作为 SMB/CIFS 服务器或客户端，与 Windows 系统进行通信。&lt;/p&gt;&#xA;&lt;p&gt;以下是 Samba 的一些主要特点和用途：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;文件共享：Samba 允许在 Linux/UNIX 系统上共享文件和目录，并通过 SMB/CIFS 协议使其对 Windows 用户可见。这意味着 Windows 用户可以通过网络访问和操作 Linux/UNIX 系统上的共享文件。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;打印机共享：Samba 还支持共享打印机，使得 Windows 用户可以通过网络连接和使用 Linux/UNIX 系统上的打印机。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;用户认证和权限控制：Samba 提供了用户认证和权限控制功能，可以限制对共享资源的访问权限，确保只有经过授权的用户可以访问和修改共享文件。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;集成到 Windows 域：Samba 可以作为 Windows 域控制器的替代品，提供类似于 Windows Active Directory 的用户管理和身份验证功能。&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.5 死锁</title>
      <link>https://example.com/linux/docs/part1-primary/1.5-deadlock/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part1-primary/1.5-deadlock/</guid>
      <description>&lt;h1 id=&#34;15-死锁&#34;&gt;&#xA;  1.5 死锁&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#15-%e6%ad%bb%e9%94%81&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;151-必要条件&#34;&gt;&#xA;  1.5.1 必要条件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#151-%e5%bf%85%e8%a6%81%e6%9d%a1%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;  &lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20221223/fbddf71f41b9495fb852f1ec50026239.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;互斥：每个资源要么已经分配给了一个进程，要么就是可用的。&lt;/li&gt;&#xA;&lt;li&gt;占有和等待：已经得到了某个资源的进程可以再请求新的资源。&lt;/li&gt;&#xA;&lt;li&gt;不可抢占：已经分配给一个进程的资源不能强制性地被抢占，它只能被占有它的进程显式地释放。&lt;/li&gt;&#xA;&lt;li&gt;环路等待：有两个或者两个以上的进程组成一条环路，该环路中的每个进程都在等待下一个进程所占有的资源。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;152-处理方法&#34;&gt;&#xA;  1.5.2 处理方法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#152-%e5%a4%84%e7%90%86%e6%96%b9%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;主要有以下四种方法：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;鸵鸟策略&lt;/li&gt;&#xA;&lt;li&gt;死锁检测与死锁恢复&lt;/li&gt;&#xA;&lt;li&gt;死锁预防&lt;/li&gt;&#xA;&lt;li&gt;死锁避免&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;153-鸵鸟策略&#34;&gt;&#xA;  1.5.3 鸵鸟策略&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#153-%e9%b8%b5%e9%b8%9f%e7%ad%96%e7%95%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;把头埋在沙子里，假装根本没发生问题。&lt;/p&gt;&#xA;&lt;p&gt;因为解决死锁问题的代价很高，因此鸵鸟策略这种不采取任务措施的方案会获得更高的性能。&lt;/p&gt;&#xA;&lt;p&gt;当发生死锁时不会对用户造成多大影响，或发生死锁的概率很低，可以采用鸵鸟策略。&lt;/p&gt;&#xA;&lt;p&gt;大多数操作系统，包括 Unix，Linux 和 Windows，处理死锁问题的办法仅仅是忽略它。&lt;/p&gt;&#xA;&lt;h2 id=&#34;154-死锁检测与死锁恢复&#34;&gt;&#xA;  1.5.4 死锁检测与死锁恢复&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#154-%e6%ad%bb%e9%94%81%e6%a3%80%e6%b5%8b%e4%b8%8e%e6%ad%bb%e9%94%81%e6%81%a2%e5%a4%8d&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;不试图阻止死锁，而是当检测到死锁发生时，采取措施进行恢复。&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-每种类型一个资源的死锁检测&#34;&gt;&#xA;  1. 每种类型一个资源的死锁检测&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1-%e6%af%8f%e7%a7%8d%e7%b1%bb%e5%9e%8b%e4%b8%80%e4%b8%aa%e8%b5%84%e6%ba%90%e7%9a%84%e6%ad%bb%e9%94%81%e6%a3%80%e6%b5%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;&#xA;  &lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20221223/763fb2c5f8c44738945930bc4017741a.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;上图为资源分配图，其中方框表示资源，圆圈表示进程。资源指向进程表示该资源已经分配给该进程，进程指向资源表示进程请求获取该资源。&lt;/p&gt;&#xA;&lt;p&gt;图 a 可以抽取出环，如图 b，它满足了环路等待条件，因此会发生死锁。&lt;/p&gt;&#xA;&lt;p&gt;每种类型一个资源的死锁检测算法是通过检测有向图是否存在环来实现，从一个节点出发进行深度优先搜索，对访问过的节点进行标记，如果访问了已经标记的节点，就表示有向图存在环，也就是检测到死锁的发生。&lt;/p&gt;&#xA;&lt;h3 id=&#34;2-每种类型多个资源的死锁检测&#34;&gt;&#xA;  2. 每种类型多个资源的死锁检测&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2-%e6%af%8f%e7%a7%8d%e7%b1%bb%e5%9e%8b%e5%a4%9a%e4%b8%aa%e8%b5%84%e6%ba%90%e7%9a%84%e6%ad%bb%e9%94%81%e6%a3%80%e6%b5%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;&#xA;  &lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20221223/503c4a5ba8104e5fba114f65e33556ca.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;上图中，有三个进程四个资源，每个数据代表的含义如下：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;E 向量：资源总量&lt;/li&gt;&#xA;&lt;li&gt;A 向量：资源剩余量&lt;/li&gt;&#xA;&lt;li&gt;C 矩阵：每个进程所拥有的资源数量，每一行都代表一个进程拥有资源的数量&lt;/li&gt;&#xA;&lt;li&gt;R 矩阵：每个进程请求的资源数量&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;进程 P1 和 P2 所请求的资源都得不到满足，只有进程 P3 可以，让 P3 执行，之后释放 P3 拥有的资源，此时 A = (2 2 2 0)。P2 可以执行，执行后释放 P2 拥有的资源，A = (4 2 2 1) 。P1 也可以执行。所有进程都可以顺利执行，没有死锁。&lt;/p&gt;</description>
    </item>
    <item>
      <title>2.5 文件查看命令</title>
      <link>https://example.com/linux/docs/part2-sys-operate/2.5-file-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part2-sys-operate/2.5-file-view/</guid>
      <description>&lt;h1 id=&#34;25-文件查看命令&#34;&gt;&#xA;  2.5 文件查看命令&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#25-%e6%96%87%e4%bb%b6%e6%9f%a5%e7%9c%8b%e5%91%bd%e4%bb%a4&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;251-cat&#34;&gt;&#xA;  2.5.1 cat&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#251-cat&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;参看文件打印到标准输出。&lt;/p&gt;&#xA;&lt;p&gt;在实践中，往往需要将 shell 脚本中的多行内容，输出到一个文本文件中。例如输出一段内容，作为一个新的脚本。举例如下：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cat &amp;gt; test.sh &amp;lt;&amp;lt;EOF&#xA;this is a test&#xA;this is another test&#xA;this is final test&#xA;EOF&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在 cat 命令后面紧接着是一个重定向符 &lt;code&gt;&amp;gt;&lt;/code&gt; 和文件名。它的作用则是将 cat 打开的文件内容输出到文件中。cat 打开的是 EOF 标记的所有内容，也就是将这些内容输出到文件中去。&lt;/p&gt;&#xA;&lt;p&gt;输出的内容支持变量传递&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# 定义变量sample&#xA;&#xA;she=&amp;#34;beautiful girl&amp;#34;&#xA;&#xA;cat &amp;gt; test.txt &amp;lt;&amp;lt;EOF&#xA;this is a test&#xA;this is another test&#xA;this is final test&#xA;I love $she&#xA;EOF&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;251-head&#34;&gt;&#xA;  2.5.1 head&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#251-head&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;查看文件开头，比如前 5 行&lt;code&gt;head -5 文件名&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>3.5 进程管理</title>
      <link>https://example.com/linux/docs/part3-sys-manage/3.5-process/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part3-sys-manage/3.5-process/</guid>
      <description>&lt;h1 id=&#34;35-进程管理&#34;&gt;&#xA;  3.5 进程管理&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#35-%e8%bf%9b%e7%a8%8b%e7%ae%a1%e7%90%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;进程是运行中的程序，从程序开始运行到终止的整个生命周期是可管理的。&lt;/p&gt;&#xA;&lt;p&gt;以 C 程序为例，程序的启动是从 main 函数开始的：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; agrc,&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;argv[])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;程序终止的方式并不唯一，可以分为正常终止和异常终止。正常终止也分为从 main 返回、调用 exit 等方式。异常终止分为调用 abort、接收信号等。&lt;/p&gt;&#xA;&lt;h2 id=&#34;351-进程查看&#34;&gt;&#xA;  3.5.1 进程查看&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#351-%e8%bf%9b%e7%a8%8b%e6%9f%a5%e7%9c%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;ps&#34;&gt;&#xA;  ps&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ps&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;ps 可以查看当前系统的进程状态。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;-e 选项&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;显示所有程序。&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230217/0163dcdf05174a82a7147f2aa79d44fb.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;-f 选项&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;常搭配 -e 选项使用。显示 UID（有效用户ID），PPID（父进程）等信息，进程由哪个用户启动的，有时启动用户和运行用户可能不一样，比如 Nginx 由 root 启动，但是实际的运行身份是 nobody。&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230217/a2d1bd172bc8455ebe444bb28509c456.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;-L 选线&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;进程中的线程，LWP 轻量级进程也就是线程。&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230217/e0ab3cb92b424f0b89e4ecb1969dac66.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;h3 id=&#34;pstree&#34;&gt;&#xA;  pstree&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#pstree&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;如果没有 pstree 命令可以自行安装。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yum install psmisc -y &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230217/00ffd1f1be0c430382ba7c304a114b22.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;h3 id=&#34;top&#34;&gt;&#xA;  top&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#top&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;top 可以实时动态地查看系统的整体运行情况，是一个综合了多方信息监测系统性能和运行信息的实用工具。&lt;/p&gt;&#xA;&lt;p&gt;top 界面主要分为两个部分，前 5 行展示的是系统的整体性能，光标下面部分是系统中每个进程的具体信息。光标所在处是用来输入操作命令的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>4.5 运算符</title>
      <link>https://example.com/linux/docs/part4-shell/4.5-operator/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part4-shell/4.5-operator/</guid>
      <description>&lt;h1 id=&#34;45-运算符&#34;&gt;&#xA;  4.5 运算符&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#45-%e8%bf%90%e7%ae%97%e7%ac%a6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;451-赋值运算符&#34;&gt;&#xA;  4.5.1 赋值运算符&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#451-%e8%b5%8b%e5%80%bc%e8%bf%90%e7%ae%97%e7%ac%a6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;= 赋值运算符，用于算数赋值和字符串赋值。使用 unset 取消为变量的赋值。= 除了作为赋值运算符还可以作为测试操作符。&lt;/p&gt;&#xA;&lt;h2 id=&#34;452-基本运算符&#34;&gt;&#xA;  4.5.2 基本运算符&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#452-%e5%9f%ba%e6%9c%ac%e8%bf%90%e7%ae%97%e7%ac%a6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;+ - * / ** %&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;使用 expr 进行运算。&lt;strong&gt;只能&lt;/strong&gt;支持整数。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 主要符号和数字之间要有空格&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;expr &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; + &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230703/ac27163394604b4ea5a1a5ee7ee99b1a.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;h3 id=&#34;数字常量&#34;&gt;&#xA;  数字常量&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%95%b0%e5%ad%97%e5%b8%b8%e9%87%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;let 变量名=变量值&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;变量值使用 0 开头为八进制&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;变量值使用 0x 开头为十六进制&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;双圆括号是 let 命令的简化，所以在实际使用中较少会使用到 let。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;((&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;10&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;((&lt;/span&gt;a++&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230703/cc842f5d79be4f36abbec9ea75dba0ff.png&#34; width=  /&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>6.5 NFS</title>
      <link>https://example.com/linux/docs/part6-service-manage/6.5-nfs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part6-service-manage/6.5-nfs/</guid>
      <description>&lt;h1 id=&#34;65-nfs&#34;&gt;&#xA;  6.5 NFS&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#65-nfs&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;651-简介&#34;&gt;&#xA;  6.5.1 简介&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#651-%e7%ae%80%e4%bb%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;NFS（Network File System）是一种用于在网络上共享文件系统的协议。它允许一个计算机系统（称为NFS服务器）与其他计算机系统（称为NFS客户端）共享其本地文件系统，并允许客户端通过网络透明地访问和操作服务器上的文件。&lt;/p&gt;&#xA;&lt;p&gt;以下是NFS服务的一些主要特点和用途：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;文件共享：NFS允许将NFS服务器上的文件和目录共享给NFS客户端。这意味着客户端可以像访问本地文件一样访问和操作服务器上的共享文件。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;分布式访问：NFS允许多个NFS客户端同时访问和修改共享文件。这使得多个用户可以在不同的计算机上协同工作，并共享相同的文件和数据。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;透明访问：NFS为客户端提供了透明的访问体验，使得共享文件的访问方式类似于本地文件。客户端可以像访问本地文件一样使用标准的文件操作（如打开、读取、写入和关闭文件）来访问NFS服务器上的文件。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;安全性：NFS提供了一些安全机制来保护共享文件的访问。例如，可以使用访问控制列表（ACL）来限制对文件的访问权限，并使用身份验证和加密来保护数据的安全性。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;性能优化：NFS在设计时考虑了性能优化，并使用一些技术来提高文件访问的效率。例如，NFS使用缓存机制来减少网络传输，提高文件的访问速度。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;使用NFS时，通常会有一个或多个NFS服务器，它们共享其本地文件系统，并提供对这些共享文件的访问。然后，NFS客户端可以通过挂载（mount）NFS服务器上的共享目录，使其在本地文件系统中可用。&lt;/p&gt;&#xA;&lt;p&gt;NFS服务器和客户端之间的通信是基于RPC（Remote Procedure Call）机制的，通过NFS协议进行文件访问和操作。&lt;/p&gt;&#xA;&lt;p&gt;需要注意的是，NFS是一种开放标准的协议，并且有多个实现可用。常用的NFS实现包括NFSv3和NFSv4。不同的实现可能会有一些细微的差异和特性，因此在使用特定的NFS实现时，应该参考相应的文档和资源以获取更详细的信息和指导。&lt;/p&gt;&#xA;&lt;h2 id=&#34;652-配置和启动&#34;&gt;&#xA;  6.5.2 配置和启动&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#652-%e9%85%8d%e7%bd%ae%e5%92%8c%e5%90%af%e5%8a%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;启动 NFS服务&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 安装&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yum install -y nfs-utils&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl start stop nfs.service&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;NFS 的配置文件在 /etc/exports，文件不存在可以手动创建。文件格式如下：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 共享目录 访问控制&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 括号和主机不能有空格&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# /data/share 192.168.11.2(ro) 192.168.11.3(rw)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 所有人访问呢&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# /data/share *(rw,sync,all_squash)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/data/share *&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;rw,sync,all_squash&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230710/a7baa8bd45544d77937b829d8d17a432.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;p&gt;在另一台机器（客户端）上可以使用 showmount 查看 nfs 机器的共享了哪些目录：&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230710/25bc38765e194dcfbf293509c99ef837.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;p&gt;如果没有 showmount 命令，可以使用 &lt;code&gt;yum install showmount -y&lt;/code&gt; 安装。&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.6 内存管理</title>
      <link>https://example.com/linux/docs/part1-primary/1.6-memory-manage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part1-primary/1.6-memory-manage/</guid>
      <description>&lt;h1 id=&#34;16-内存管理&#34;&gt;&#xA;  1.6 内存管理&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#16-%e5%86%85%e5%ad%98%e7%ae%a1%e7%90%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;161-虚拟内存&#34;&gt;&#xA;  1.6.1 虚拟内存&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#161-%e8%99%9a%e6%8b%9f%e5%86%85%e5%ad%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;虚拟内存的目的是为了让物理内存扩充成更大的逻辑内存，从而让程序获得更多的可用内存。&lt;/p&gt;&#xA;&lt;p&gt;为了更好的管理内存，操作系统将内存抽象成地址空间。每个程序拥有自己的地址空间，这个地址空间被分割成多个块，每一块称为一页。这些页被映射到物理内存，但不需要映射到连续的物理内存，也不需要所有页都必须在物理内存中。当程序引用到不在物理内存中的页时，由硬件执行必要的映射，将缺失的部分装入物理内存并重新执行失败的指令。&lt;/p&gt;&#xA;&lt;p&gt;从上面的描述中可以看出，虚拟内存允许程序不用将地址空间中的每一页都映射到物理内存，也就是说一个程序不需要全部调入内存就可以运行，这使得有限的内存运行大程序成为可能。例如有一台计算机可以产生 16 位地址，那么一个程序的地址空间范围是 0~64K。该计算机只有 32KB 的物理内存，虚拟内存技术允许该计算机运行一个 64K 大小的程序。&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt; &lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20221225/6140255a11b94b96b49e64cafaeb0e59.png&#34;/&gt; &lt;/div&gt;&lt;br&gt;&#xA;&lt;h2 id=&#34;162-分页系统地址映射&#34;&gt;&#xA;  1.6.2 分页系统地址映射&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#162-%e5%88%86%e9%a1%b5%e7%b3%bb%e7%bb%9f%e5%9c%b0%e5%9d%80%e6%98%a0%e5%b0%84&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;内存管理单元（MMU）管理着地址空间和物理内存的转换，其中的页表（Page table）存储着页（程序地址空间）和页框（物理内存空间）的映射表。&lt;/p&gt;&#xA;&lt;p&gt;一个虚拟地址分成两个部分，一部分存储页面号，一部分存储偏移量。&lt;/p&gt;&#xA;&lt;p&gt;下图的页表存放着 16 个页，这 16 个页需要用 4 个比特位来进行索引定位。例如对于虚拟地址（0010 000000000100），前 4 位是存储页面号 2，读取表项内容为（110 1），页表项最后一位表示是否存在于内存中，1 表示存在。后 12 位存储偏移量。这个页对应的页框的地址为 （110 000000000100）。&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt; &lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20221225/07c254cee9bb4cfcaa6af41c8fc7d340.png&#34; width=&#34;500&#34;/&gt; &lt;/div&gt;&lt;br&gt;&#xA;&lt;h2 id=&#34;163-页面置换算法&#34;&gt;&#xA;  1.6.3 页面置换算法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#163-%e9%a1%b5%e9%9d%a2%e7%bd%ae%e6%8d%a2%e7%ae%97%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;在程序运行过程中，如果要访问的页面不在内存中，就发生缺页中断从而将该页调入内存中。此时如果内存已无空闲空间，系统必须从内存中调出一个页面到磁盘对换区中来腾出空间。&lt;/p&gt;&#xA;&lt;p&gt;页面置换算法和缓存淘汰策略类似，可以将内存看成磁盘的缓存。在缓存系统中，缓存的大小有限，当有新的缓存到达时，需要淘汰一部分已经存在的缓存，这样才有空间存放新的缓存数据。&lt;/p&gt;&#xA;&lt;p&gt;页面置换算法的主要目标是使页面置换频率最低（也可以说缺页率最低）。&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-最佳&#34;&gt;&#xA;  1. 最佳&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1-%e6%9c%80%e4%bd%b3&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;OPT, Optimal replacement algorithm&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;所选择的被换出的页面将是最长时间内不再被访问，通常可以保证获得最低的缺页率。&lt;/p&gt;&#xA;&lt;p&gt;是一种理论上的算法，因为无法知道一个页面多长时间不再被访问。&lt;/p&gt;&#xA;&lt;p&gt;举例：一个系统为某进程分配了三个物理块，并有如下页面引用序列：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;7，0，1，2，0，3，0，4，2，3，0，3，2，1，2，0，1，7，0，1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;开始运行时，先将 7, 0, 1 三个页面装入内存。当进程要访问页面 2 时，产生缺页中断，会将页面 7 换出，因为页面 7 再次被访问的时间最长。&lt;/p&gt;</description>
    </item>
    <item>
      <title>2.6 压缩和打包</title>
      <link>https://example.com/linux/docs/part2-sys-operate/2.6-backup-compression/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part2-sys-operate/2.6-backup-compression/</guid>
      <description>&lt;h1 id=&#34;26-压缩和打包&#34;&gt;&#xA;  2.6 压缩和打包&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#26-%e5%8e%8b%e7%bc%a9%e5%92%8c%e6%89%93%e5%8c%85&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;261-压缩文件名&#34;&gt;&#xA;  2.6.1 压缩文件名&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#261-%e5%8e%8b%e7%bc%a9%e6%96%87%e4%bb%b6%e5%90%8d&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Linux 下有很多压缩文件名，常见的如下：&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;扩展名&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;压缩程序&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;*.Z&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;compress&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;*.zip&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;zip&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;*.gz&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;gzip&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;*.bz2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;bzip2&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;*.xz&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;xz&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;*.tar&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;tar 程序打包的数据，没有经过压缩&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;*.tar.gz&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;tar 程序打包的文件，经过 gzip 的压缩&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;*.tar.bz2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;tar 程序打包的文件，经过 bzip2 的压缩&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;*.tar.xz&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;tar 程序打包的文件，经过 xz 的压缩&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;*.tbz2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;*.tar.bz2 的缩写&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;*.tgz&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;*.tar.gz 的缩写&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;262-压缩指令&#34;&gt;&#xA;  2.6.2 压缩指令&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#262-%e5%8e%8b%e7%bc%a9%e6%8c%87%e4%bb%a4&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-gzip&#34;&gt;&#xA;  1. gzip&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1-gzip&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;gzip 是 Linux 使用最广的压缩指令，可以解开 compress、zip 与 gzip 所压缩的文件。&lt;/p&gt;&#xA;&lt;p&gt;经过 gzip 压缩过，&lt;strong&gt;源文件就不存在了&lt;/strong&gt;。gzip 命令&lt;strong&gt;只能&lt;/strong&gt;用来压缩文件，不能压缩目录，即便指定了目录，也只能压缩目录内的所有文件。gzip 命令不需要指定压缩包名。&lt;/p&gt;&#xA;&lt;p&gt;有 9 个不同的压缩等级可以使用。&lt;/p&gt;</description>
    </item>
    <item>
      <title>3.6 内存和磁盘管理</title>
      <link>https://example.com/linux/docs/part3-sys-manage/3.6-memory-disk/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part3-sys-manage/3.6-memory-disk/</guid>
      <description>&lt;h1 id=&#34;36-内存和磁盘管理&#34;&gt;&#xA;  3.6 内存和磁盘管理&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#36-%e5%86%85%e5%ad%98%e5%92%8c%e7%a3%81%e7%9b%98%e7%ae%a1%e7%90%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;361-内存和磁盘使用率查看&#34;&gt;&#xA;  3.6.1 内存和磁盘使用率查看&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#361-%e5%86%85%e5%ad%98%e5%92%8c%e7%a3%81%e7%9b%98%e4%bd%bf%e7%94%a8%e7%8e%87%e6%9f%a5%e7%9c%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;内存使用率&#34;&gt;&#xA;  内存使用率&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%86%85%e5%ad%98%e4%bd%bf%e7%94%a8%e7%8e%87&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;free 和 top 命令效果基本无差，区别就是 free 是静态的，top 是动态的。&lt;/p&gt;&#xA;&lt;h4 id=&#34;free&#34;&gt;&#xA;  free&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#free&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;p&gt;一般多少 G 内存用 free -m 查看，多少 T 内存用 free -g 查看。&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230221/97443e997c62493e8629c28407d4fa53.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;h4 id=&#34;top&#34;&gt;&#xA;  top&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#top&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230221/323c7fc9e1d34e2f948cebab118be825.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;h3 id=&#34;磁盘使用率&#34;&gt;&#xA;  磁盘使用率&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%a3%81%e7%9b%98%e4%bd%bf%e7%94%a8%e7%8e%87&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;fdisk&#34;&gt;&#xA;  fdisk&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#fdisk&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;p&gt;&lt;strong&gt;慎用&lt;/strong&gt;。fdisk 不仅可以用来查看磁盘，还可以用来磁盘分区，在实际工作中慎用。&lt;/p&gt;&#xA;&lt;p&gt;查看磁盘信息可以用 fdisk -l。&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230221/b8b4d937b4a1485197b86bcd08a9491c.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;h4 id=&#34;df&#34;&gt;&#xA;  df&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#df&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;p&gt;用于显示磁盘分区上的可使用的磁盘空间。默认显示单位为 KB。可以利用该命令来获取硬盘被占用了多少空间，目前还剩下多少空间等信息。&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230222/99464225dfab496e9b44fd61cc8c9f68.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;h4 id=&#34;du&#34;&gt;&#xA;  du&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#du&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;p&gt;也是查看使用空间的，但是与 d f命令不同的是 du 命令是对文件和目录磁盘使用的空间的查看。&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230222/42d7c0ef7e1443d38f399905d37f3ef4.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;h4 id=&#34;du-和-ls-的区别&#34;&gt;&#xA;  du 和 ls 的区别&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#du-%e5%92%8c-ls-%e7%9a%84%e5%8c%ba%e5%88%ab&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;p&gt;&lt;code&gt;ls -lh&lt;/code&gt; 和 du 命令都可以查看文件，但是 du 查看的实际文件大小，ls 查看的文件大小可能包含空洞。&lt;/p&gt;</description>
    </item>
    <item>
      <title>4.6 测试和判断</title>
      <link>https://example.com/linux/docs/part4-shell/4.6-test-and-judge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part4-shell/4.6-test-and-judge/</guid>
      <description>&lt;h1 id=&#34;46-测试和判断&#34;&gt;&#xA;  4.6 测试和判断&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#46-%e6%b5%8b%e8%af%95%e5%92%8c%e5%88%a4%e6%96%ad&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;461-退出状态&#34;&gt;&#xA;  4.6.1 退出状态&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#461-%e9%80%80%e5%87%ba%e7%8a%b6%e6%80%81&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;退出程序命令&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;exit&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;exit 10&lt;/code&gt; 表示自定义返回 10 给 Shell，返回值非 0 位不正常退出。&lt;/p&gt;&#xA;&lt;p&gt;$? 判断当前 Shell 前一个进程是否正常退出。&lt;/p&gt;&#xA;&lt;h2 id=&#34;462-测试命令-test&#34;&gt;&#xA;  4.6.2 测试命令 test&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#462-%e6%b5%8b%e8%af%95%e5%91%bd%e4%bb%a4-test&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;test 命令用于检查文件或者比较值&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;test 可以做以下测试：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;文件测试&lt;/li&gt;&#xA;&lt;li&gt;整数比较测试&lt;/li&gt;&#xA;&lt;li&gt;字符串测试&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;test 测试语句可以简化为 [] 符号&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;[] 符号还有扩展写法 [[]] 支持 &amp;amp;&amp;amp;、‖、&amp;lt;、&amp;gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230704/e3c619bda2fc4eb4954f46f761054594.png&#34; width=  /&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>6.6 nginx</title>
      <link>https://example.com/linux/docs/part6-service-manage/6.6-nginx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part6-service-manage/6.6-nginx/</guid>
      <description>&lt;h1 id=&#34;66-nginx&#34;&gt;&#xA;  6.6 nginx&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#66-nginx&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;661-nginx-和-openresty&#34;&gt;&#xA;  6.6.1 nginx 和 OpenResty&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#661-nginx-%e5%92%8c-openresty&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Nginx和OpenResty是两个不同但有关联的项目。&lt;/p&gt;&#xA;&lt;p&gt;Nginx 是一个开源的高性能 Web 服务器和反向代理服务器。它具有轻量级、高并发处理能力和低内存消耗等特点，常被用于搭建静态网站、负载均衡和反向代理等场景。Nginx 通常使用 C 语言编写，并以模块化设计的方式提供丰富的功能扩展。&lt;/p&gt;&#xA;&lt;p&gt;OpenResty 是一个基于 Nginx 的 Web 应用服务器软件集成包，它将 Nginx 与一组扩展模块和第三方库进行了集成，以提供更强大的功能。 OpenResty 允许开发人员使用 Lua 编程语言来编写 Nginx 的配置文件和扩展模块，从而实现高度可定制的 Web 应用程序。通过 OpenResty，开发人员可以在 Nginx 中使用 Lua 编写的脚本，以实现动态内容生成、API 网关、缓存加速和高级负载均衡等功能。&lt;/p&gt;&#xA;&lt;p&gt;可以说 OpenResty 是一个基于 Nginx 的增强版本，它通过添加 Lua 编程语言的支持和一系列扩展模块，使得 Nginx 可以处理更复杂的任务和场景。OpenResty 在一些需要高度定制化和可扩展性的 Web 应用程序中非常有用，特别是对于需要动态脚本处理和扩展功能的情况。&lt;/p&gt;&#xA;&lt;p&gt;Nginx 是一个独立的高性能 Web 服务器和反向代理服务器，而 OpenResty 是基于 Nginx 的 Web 应用服务器软件集成包，通过添加 Lua 编程语言的支持和扩展模块，扩展了 Nginx 的功能。&lt;/p&gt;&#xA;&lt;h2 id=&#34;662-openresty-安装&#34;&gt;&#xA;  6.6.2 OpenResty 安装&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#662-openresty-%e5%ae%89%e8%a3%85&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;安装可以使用如下 2 条命令：&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.7 链接</title>
      <link>https://example.com/linux/docs/part1-primary/1.7-link/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part1-primary/1.7-link/</guid>
      <description>&lt;h1 id=&#34;17-链接&#34;&gt;&#xA;  1.7 链接&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#17-%e9%93%be%e6%8e%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;171-编译系统&#34;&gt;&#xA;  1.7.1 编译系统&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#171-%e7%bc%96%e8%af%91%e7%b3%bb%e7%bb%9f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;以下是一个 hello.c 程序：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello, world&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 Unix 系统上，由编译器把源文件转换为目标文件。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcc -o hello hello.c&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这个过程大致如下：&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt; &lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20221225/0c6bc5a167884e4dac7d45103829b825.png&#34; width=&#34;800&#34;/&gt; &lt;/div&gt;&lt;br&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;预处理阶段：处理以 # 开头的预处理命令；&lt;/li&gt;&#xA;&lt;li&gt;编译阶段：翻译成汇编文件；&lt;/li&gt;&#xA;&lt;li&gt;汇编阶段：将汇编文件翻译成可重定位目标文件；&lt;/li&gt;&#xA;&lt;li&gt;链接阶段：将可重定位目标文件和 printf.o 等单独预编译好的目标文件进行合并，得到最终的可执行目标文件。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;172-静态链接&#34;&gt;&#xA;  1.7.2 静态链接&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#172-%e9%9d%99%e6%80%81%e9%93%be%e6%8e%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;静态链接器以一组可重定位目标文件为输入，生成一个完全链接的可执行目标文件作为输出。链接器主要完成以下两个任务：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;符号解析：每个符号对应于一个函数、一个全局变量或一个静态变量，符号解析的目的是将每个符号引用与一个符号定义关联起来。&lt;/li&gt;&#xA;&lt;li&gt;重定位：链接器通过把每个符号定义与一个内存位置关联起来，然后修改所有对这些符号的引用，使得它们指向这个内存位置。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div align=&#34;center&#34;&gt; &lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20221225/7973d607297f438aa42f709167c80f1f.png&#34;/&gt; &lt;/div&gt;&lt;br&gt;&#xA;&lt;h2 id=&#34;172-目标文件&#34;&gt;&#xA;  1.7.2 目标文件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#172-%e7%9b%ae%e6%a0%87%e6%96%87%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;可执行目标文件：可以直接在内存中执行；&lt;/li&gt;&#xA;&lt;li&gt;可重定位目标文件：可与其它可重定位目标文件在链接阶段合并，创建一个可执行目标文件；&lt;/li&gt;&#xA;&lt;li&gt;共享目标文件：这是一种特殊的可重定位目标文件，可以在运行时被动态加载进内存并链接；&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;173-动态链接&#34;&gt;&#xA;  1.7.3 动态链接&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#173-%e5%8a%a8%e6%80%81%e9%93%be%e6%8e%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;静态库有以下两个问题：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;当静态库更新时那么整个程序都要重新进行链接；&lt;/li&gt;&#xA;&lt;li&gt;对于 printf 这种标准函数库，如果每个程序都要有代码，这会极大浪费资源。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;共享库是为了解决静态库的这两个问题而设计的，在 Linux 系统中通常用 .so 后缀来表示，Windows 系统上它们被称为 DLL。它具有以下特点：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在给定的文件系统中一个库只有一个文件，所有引用该库的可执行目标文件都共享这个文件，它不会被复制到引用它的可执行文件中；&lt;/li&gt;&#xA;&lt;li&gt;在内存中，一个共享库的 .text 节（已编译程序的机器代码）的一个副本可以被不同的正在运行的进程共享。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div align=&#34;center&#34;&gt; &lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20221225/dbb44187be594a5fb9f7a874a1881545.png&#34;/&gt; &lt;/div&gt;&lt;br&gt;</description>
    </item>
    <item>
      <title>1.7 设备管理</title>
      <link>https://example.com/linux/docs/part1-primary/1.7-device-manage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part1-primary/1.7-device-manage/</guid>
      <description>&lt;h1 id=&#34;17-设备管理&#34;&gt;&#xA;  1.7 设备管理&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#17-%e8%ae%be%e5%a4%87%e7%ae%a1%e7%90%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;171-磁盘结构&#34;&gt;&#xA;  1.7.1 磁盘结构&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#171-%e7%a3%81%e7%9b%98%e7%bb%93%e6%9e%84&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;盘面（Platter）：一个磁盘有多个盘面；&lt;/li&gt;&#xA;&lt;li&gt;磁道（Track）：盘面上的圆形带状区域，一个盘面可以有多个磁道；&lt;/li&gt;&#xA;&lt;li&gt;扇区（Track Sector）：磁道上的一个弧段，一个磁道可以有多个扇区，它是最小的物理储存单位，目前主要有 512 bytes 与 4 K 两种大小；&lt;/li&gt;&#xA;&lt;li&gt;磁头（Head）：与盘面非常接近，能够将盘面上的磁场转换为电信号（读），或者将电信号转换为盘面的磁场（写）；&lt;/li&gt;&#xA;&lt;li&gt;制动手臂（Actuator arm）：用于在磁道之间移动磁头；&lt;/li&gt;&#xA;&lt;li&gt;主轴（Spindle）：使整个盘面转动。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div align=&#34;center&#34;&gt; &lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20221225/e1f881074cd242c49717eada7d91e549.png&#34;/&gt; &lt;/div&gt;&lt;br&gt;&#xA;&lt;h2 id=&#34;172-磁盘调度算法&#34;&gt;&#xA;  1.7.2 磁盘调度算法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#172-%e7%a3%81%e7%9b%98%e8%b0%83%e5%ba%a6%e7%ae%97%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;读写一个磁盘块的时间的影响因素有：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;旋转时间（主轴转动盘面，使得磁头移动到适当的扇区上）&lt;/li&gt;&#xA;&lt;li&gt;寻道时间（制动手臂移动，使得磁头移动到适当的磁道上）&lt;/li&gt;&#xA;&lt;li&gt;实际的数据传输时间&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;其中，寻道时间最长，因此磁盘调度的主要目标是使磁盘的平均寻道时间最短。&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-先来先服务&#34;&gt;&#xA;  1. 先来先服务&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1-%e5%85%88%e6%9d%a5%e5%85%88%e6%9c%8d%e5%8a%a1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;FCFS, First Come First Served&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;按照磁盘请求的顺序进行调度。&lt;/p&gt;&#xA;&lt;p&gt;优点是公平和简单。缺点也很明显，因为未对寻道做任何优化，使平均寻道时间可能较长。&lt;/p&gt;&#xA;&lt;h3 id=&#34;2-最短寻道时间优先&#34;&gt;&#xA;  2. 最短寻道时间优先&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2-%e6%9c%80%e7%9f%ad%e5%af%bb%e9%81%93%e6%97%b6%e9%97%b4%e4%bc%98%e5%85%88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;SSTF, Shortest Seek Time First&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;优先调度与当前磁头所在磁道距离最近的磁道。&lt;/p&gt;&#xA;&lt;p&gt;虽然平均寻道时间比较低，但是不够公平。如果新到达的磁道请求总是比一个在等待的磁道请求近，那么在等待的磁道请求会一直等待下去，也就是出现饥饿现象。具体来说，两端的磁道请求更容易出现饥饿现象。&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt; &lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20221225/243843c6184346368aee7a6677908910.png&#34;/&gt; &lt;/div&gt;&lt;br&gt;&#xA;&lt;h3 id=&#34;3-电梯算法&#34;&gt;&#xA;  3. 电梯算法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#3-%e7%94%b5%e6%a2%af%e7%ae%97%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;SCAN&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;电梯总是保持一个方向运行，直到该方向没有请求为止，然后改变运行方向。&lt;/p&gt;&#xA;&lt;p&gt;电梯算法（扫描算法）和电梯的运行过程类似，总是按一个方向来进行磁盘调度，直到该方向上没有未完成的磁盘请求，然后改变方向。&lt;/p&gt;&#xA;&lt;p&gt;因为考虑了移动方向，因此所有的磁盘请求都会被满足，解决了 SSTF 的饥饿问题。&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt; &lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20221225/d6844e82beee46a488623f2f69cf1e3a.png&#34;/&gt; &lt;/div&gt;&lt;br&gt;</description>
    </item>
    <item>
      <title>2.7 vim</title>
      <link>https://example.com/linux/docs/part2-sys-operate/2.7-vim/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part2-sys-operate/2.7-vim/</guid>
      <description>&lt;h1 id=&#34;27-vim&#34;&gt;&#xA;  2.7 vim&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#27-vim&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;271-vim-三种模式&#34;&gt;&#xA;  2.7.1 vim 三种模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#271-vim-%e4%b8%89%e7%a7%8d%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;  &lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20221223/922f08bad9444c9b9933b218edb2ce3a.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;一般指令模式（Command mode）：vim 的默认模式，可以用于移动游标查看内容；&lt;/li&gt;&#xA;&lt;li&gt;编辑模式（Insert mode）：按下&lt;code&gt;i&lt;/code&gt;等按键之后进入，可以对文本进行编辑；&lt;/li&gt;&#xA;&lt;li&gt;指令列模式（Bottom-line mode）：按下&lt;code&gt;:&lt;/code&gt;按键之后进入，用于保存退出等操作。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;在指令列模式下，有以下命令用于离开或者保存文件。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;命令&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;作用&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;:w&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;写入磁盘，也可以加上保存路径，如 :w /tmp/test.txt&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;:w!&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;当文件为只读时，强制写入磁盘。到底能不能写入，与用户对该文件的权限有关&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;:q&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;离开&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;:q!&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;强制离开不保存&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;:wq&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;写入磁盘后离开&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;:wq!&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;强制写入磁盘后离开&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;272-正常模式&#34;&gt;&#xA;  2.7.2 正常模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#272-%e6%ad%a3%e5%b8%b8%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;按键&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;作用&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;I&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;进入插入模式，光标会移到当前行的开头位置&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;a&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;进入插入模式，光标会移动到下一个字符位置&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;A&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;进入插入模式，光标会移动到当前行末尾位置&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;o&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;进入插入模式，会&lt;strong&gt;向下&lt;/strong&gt;新开一行，光标会移动到新行开头位置&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;O&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;进入插入模式，会&lt;strong&gt;向上&lt;/strong&gt;新开一行，光标会移动到新行开头位置&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;h&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;前移&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;l&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;后移&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;j&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;下移&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;k&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;上移&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;u&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;撤销操作，可以多次撤销&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;x&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;单个字符删除&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;r&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;替换字符&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;^&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;回到当前行首&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;$&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;回到当前行尾&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;ctrl+r&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;重做，恢复撤销&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;yy 和 p&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;yy 复制一行，p 粘贴&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;复制多行&#34;&gt;&#xA;  复制多行&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%a4%8d%e5%88%b6%e5%a4%9a%e8%a1%8c&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;比如复制 3 行，光标移到要复制的开头位置，先按 3，再按 yy，就复制了 3 行。&lt;/p&gt;</description>
    </item>
    <item>
      <title>4.7 流程控制</title>
      <link>https://example.com/linux/docs/part4-shell/4.7-process-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part4-shell/4.7-process-control/</guid>
      <description>&lt;h1 id=&#34;47-流程控制&#34;&gt;&#xA;  4.7 流程控制&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#47-%e6%b5%81%e7%a8%8b%e6%8e%a7%e5%88%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;471-if&#34;&gt;&#xA;  4.7.1 if&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#471-if&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;if-then&#34;&gt;&#xA;  if-then&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#if-then&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; 测试条件成立 &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 或 命令返回值是否为0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; 执行相应命令&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt; 结束&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230704/3392a03c0b8d42789cc0a6ae8d07590b.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230704/ed4c0d12d2124ea5a00ac5e2d7e87b32.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;h3 id=&#34;if-then-else&#34;&gt;&#xA;  if-then-else&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#if-then-else&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; 测试条件成立 &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; 执行相应命令&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; 测试条件不成立，执行相应命令&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt; 结束&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230704/1732772c4f374956a7cba2f7014ad02c.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;h3 id=&#34;if-elif-else&#34;&gt;&#xA;  if-elif-else&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#if-elif-else&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; 测试条件成立 &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; 测试条件成立 &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; 执行相应命令&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; 测试条件不成立，执行相应命令&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt; 结束&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230704/7ac3461cf8d34643a8b11885ef75f058.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;h3 id=&#34;嵌套-if&#34;&gt;&#xA;  嵌套 if&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b5%8c%e5%a5%97-if&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; 测试条件成立 &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  执行相应命令&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; 测试条件成立 &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    执行相应命令&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230704/bca30b393fb744cda243ecc5110c00eb.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;h2 id=&#34;472-case-分支&#34;&gt;&#xA;  4.7.2 case 分支&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#472-case-%e5%88%86%e6%94%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$&lt;span style=&#34;color:#e6db74&#34;&gt;变量&amp;#34;&lt;/span&gt; in&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;情况1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    命令…;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;情况2&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    命令…;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  *&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    命令…;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;esac&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230704/c256d22bc5374cedaabcd7ff32b3dbde.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;h2 id=&#34;473-循环&#34;&gt;&#xA;  4.7.3 循环&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#473-%e5%be%aa%e7%8e%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;for-循环&#34;&gt;&#xA;  for 循环&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#for-%e5%be%aa%e7%8e%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; 参数 in 列表&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; 执行的命令&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt; 封闭一个循环&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;列表中包含多个变量，变量用空格分隔&lt;/li&gt;&#xA;&lt;li&gt;对文本处理，要使用文本查看命令取出文本内容。默认逐行处理，如果文本出现空格会当做多行处理&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230704/e1348a36432a42b981c49b4c11d9a3b3.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230704/cc6daeb18aac41d68e9cdb4a31db79bf.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;p&gt;使用反引号或 $() 方式执行命令，命令的结果当作列表进行处理。&lt;/p&gt;</description>
    </item>
    <item>
      <title>6.7 DNS</title>
      <link>https://example.com/linux/docs/part6-service-manage/6.7-dns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part6-service-manage/6.7-dns/</guid>
      <description>&lt;h1 id=&#34;67-dns&#34;&gt;&#xA;  6.7 DNS&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#67-dns&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;671-简介&#34;&gt;&#xA;  6.7.1 简介&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#671-%e7%ae%80%e4%bb%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;DNS（Domain Name System）是一个用于将域名转换为与之关联的IP地址的分布式命名系统。它充当了互联网上域名与IP地址之间的映射服务。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;正向查询（Forward Lookup）：正向查询是根据给定的域名获取相应的IP地址。当你在浏览器中输入一个网址（例如 &lt;code&gt;www.example.com&lt;/code&gt;），DNS 系统会执行正向查询以查找与该域名关联的 IP 地址，从而将你的请求转发到正确的服务器。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;反向查询（Reverse Lookup）：反向查询是根据给定的 IP 地址获取相应的域名。它是正向查询的逆过程。通过反向查询，你可以查找给定 IP 地址所对应的域名。这对于网络管理员来说是有用的，可以通过 IP 地址确定主机的域名。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;根域名（Root Domain）：根域名是 DNS 层次结构中的顶级域名，表示为一个点（.）。它是 DNS 命名空间的最高级别，所有其他域名都是从根域名派生出来的。根域名由一组 13 个根服务器（Root Servers）来管理，这些服务器分布在全球各个地点。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;www：www 是一个常见的域名前缀，表示 “World Wide Web”。通常，网站会使用类似 &lt;code&gt;www.example.com&lt;/code&gt; 的域名来表示其 Web 服务。这是出于历史原因，当互联网刚刚兴起时，许多网站选择以 www 作为其主要 Web 服务器的标识。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;FQDN（Fully Qualified Domain Name）：FQDN 是一个完全限定域名，包括所有级别的域名，从根域名一直到最低级别的域名。例如，&lt;code&gt;www.example.com&lt;/code&gt; 是一个 FQDN，它包含三个级别的域名：com（顶级域名）、example（二级域名）和www（三级域名）。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;672-bind&#34;&gt;&#xA;  6.7.2 BIND&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#672-bind&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;BIND（Berkeley Internet Name Domain）是一个开源的 DNS 软件实现，它是最常用和广泛部署的 DNS 服务器软件之一。BIND 软件提供了 DNS 协议的实现，允许将域名解析请求映射到相应的 IP 地址。&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.8 指令集</title>
      <link>https://example.com/linux/docs/part1-primary/1.8-instruction-arch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part1-primary/1.8-instruction-arch/</guid>
      <description>&lt;h1 id=&#34;18-指令集&#34;&gt;&#xA;  1.8 指令集&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#18-%e6%8c%87%e4%bb%a4%e9%9b%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;181-指令集架构&#34;&gt;&#xA;  1.8.1 指令集架构&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#181-%e6%8c%87%e4%bb%a4%e9%9b%86%e6%9e%b6%e6%9e%84&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;指令集架构是指一套软硬件的标准规范，CPU芯片和软件应用会围绕这套规范设计。从CPU发明到现在，有非常多种架构，从常见的x86、ARM，到不太常见的RISC-V，MIPS、IA64，它们之间的差距都非常大。&lt;/p&gt;&#xA;&lt;p&gt;有些时候我们会遇到在本地开发环境编译和运行正常的代码，在生产环境却无法正常工作，当然这个问题背后会有多种原因，而不同机器使用的不同指令集可能是原因之一。&lt;/p&gt;&#xA;&lt;p&gt;指令集架构是计算机的抽象模型，在很多时候也被称作架构或者计算机架构，它是计算机软件和硬件之间的接口和桥梁。一个为特定指令集架构编写的应用程序能够运行在所有支持这种指令集架构的机器上，也就是说如果当前应用程序支持 x86 的指令集，那么就可以运行在所有使用 x86 指令集的机器上，这其实就是抽象层的作用，每一个指令集架构都定义了支持的数据结构、寄存器、管理主内存的硬件支持（例如内存一致、地址模型和虚拟内存）、支持的指令集和 IO 模型，它的引入其实就在软件和硬件之间引入了一个抽象层，让同一个二进制文件能够在不同版本的硬件上运行。如果一个编程语言想要在所有的机器上运行，它就可以将中间代码转换成使用不同指令集架构的机器码，这可比为不同硬件单独移植要简单的太多了。&lt;/p&gt;&#xA;&lt;h2 id=&#34;182-复杂指令集cisc和精简指令集risc&#34;&gt;&#xA;  1.8.2 复杂指令集（CISC）和精简指令集（RISC）&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#182-%e5%a4%8d%e6%9d%82%e6%8c%87%e4%bb%a4%e9%9b%86cisc%e5%92%8c%e7%b2%be%e7%ae%80%e6%8c%87%e4%bb%a4%e9%9b%86risc&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;最常见的指令集架构分类方法是根据指令的复杂度将其分为复杂指令集（CISC）和精简指令集（RISC），复杂指令集架构包含了很多特定的指令，但是其中的一些指令很少会被程序使用，而精简指令集只实现了经常被使用的指令，不常用的操作都会通过组合简单指令来实现。&lt;/p&gt;&#xA;&lt;p&gt;复杂指令集的特点就是指令数目多并且复杂，每条指令的字节长度并不相等，x86 就是常见的复杂指令集处理器，它的指令长度大小范围非常广，从 1 到 15 字节不等，对于长度不固定的指令，计算机必须额外对指令进行判断，这需要付出额外的性能损失。&lt;/p&gt;&#xA;&lt;p&gt;而精简指令集对指令的数目和寻址方式做了精简，大大减少指令数量的同时更容易实现，指令集中的每一个指令都使用标准的字节长度、执行时间相比复杂指令集会少很多，处理器在处理指令时也可以流水执行，提高了对并行的支持。作为一种常见的精简指令集处理器，arm 使用 4 个字节作为指令的固定长度，省略了判断指令的性能损失3，精简指令集其实就是利用了我们耳熟能详的 20/80 原则，用 20% 的基础指令和它们的组合来解决问题。&lt;/p&gt;&#xA;&lt;p&gt;复杂指令集和精简指令集的使用是设计上的权衡，经过这么多年的发展，两种指令集也相互借鉴和学习，与最开始刚被设计出来时已经有了较大的差别。最开始的计算机使用复杂指令集是因为当时计算机的性能和内存比较有限，业界需要尽可能地减少机器需要执行的指令，所以更倾向于高度编码、长度不等以及多操作数的指令。不过随着计算机性能的提升，出现了精简指令集这种牺牲代码密度换取简单实现的设计；除此之外，硬件的飞速提升还带来了更多的寄存器和更高的时钟频率，软件开发人员也不再直接接触汇编代码，而是通过编译器和汇编器生成指令，复杂的机器指令对于编译器来说很难利用，所以精简指令在这种场景下更适合。&lt;/p&gt;&#xA;&lt;h2 id=&#34;参考&#34;&gt;&#xA;  参考&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8f%82%e8%80%83&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;  &lt;a href=&#34;https://draveness.me/golang/docs/part1-prerequisite/ch02-compile/golang-machinecode/&#34;&gt;机器码生成&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>2.8 用户管理</title>
      <link>https://example.com/linux/docs/part2-sys-operate/2.8-user-manage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part2-sys-operate/2.8-user-manage/</guid>
      <description>&lt;h1 id=&#34;28-用户管理&#34;&gt;&#xA;  2.8 用户管理&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#28-%e7%94%a8%e6%88%b7%e7%ae%a1%e7%90%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;命令&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;作用&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;useradd&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;新建用户&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;userdel&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;删除用户&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;passwd&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;修改用户密码&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;usermod&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;修改用户属性&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;chage&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;修改帐号和密码的有效期限&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;groupadd&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;新建用户组&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;groupdel&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;删除用户组&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;281-useradd&#34;&gt;&#xA;  2.8.1 useradd&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#281-useradd&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;useradd 用户名&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;useradd -g 用户组 用户名&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当不指定用户组时，会创建一个同名的用户组。&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230202/267939b0a9c34f8d995672c1f7f83073.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;h2 id=&#34;282-passwd&#34;&gt;&#xA;  2.8.2 passwd&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#282-passwd&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;passwd wislon &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230202/95effd9841ef42379fffff6fe297f1d6.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;p&gt;当修改自己的密码时，直接输入 passwd 回车。&lt;/p&gt;&#xA;&lt;h2 id=&#34;283-userdel&#34;&gt;&#xA;  2.8.3 userdel&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#283-userdel&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;userdel 用户名&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当加上&lt;code&gt;-r&lt;/code&gt;选项时，会删除用户的家目录。&lt;/p&gt;&#xA;&lt;h2 id=&#34;284-usermod&#34;&gt;&#xA;  2.8.4 usermod&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#284-usermod&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;用于修改用户的基本信息。&lt;/p&gt;&#xA;&lt;h3 id=&#34;常用选项&#34;&gt;&#xA;  常用选项&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b8%b8%e7%94%a8%e9%80%89%e9%a1%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;-d-选项&#34;&gt;&#xA;  -d 选项&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-d-%e9%80%89%e9%a1%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;p&gt;修改用户登入时的目录，只是修改&lt;code&gt;/etc/passwd&lt;/code&gt;中用户的家目录配置信息，不会自动创建新的家目录，通常和&lt;code&gt;-m&lt;/code&gt;一起使用。&lt;/p&gt;&#xA;&lt;h4 id=&#34;-m-选项&#34;&gt;&#xA;  -m 选项&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-m-%e9%80%89%e9%a1%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;p&gt;移动用户家目录到新的位置，不能单独使用，一般与&lt;code&gt;-d&lt;/code&gt;一起使用。&lt;/p&gt;</description>
    </item>
    <item>
      <title>4.8 函数</title>
      <link>https://example.com/linux/docs/part4-shell/4.8-function/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part4-shell/4.8-function/</guid>
      <description>&lt;h1 id=&#34;48-函数&#34;&gt;&#xA;  4.8 函数&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#48-%e5%87%bd%e6%95%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;函数用于 “包含” 重复使用的命令集合。&lt;/p&gt;&#xA;&lt;h2 id=&#34;481-自定义函数&#34;&gt;&#xA;  4.8.1 自定义函数&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#481-%e8%87%aa%e5%ae%9a%e4%b9%89%e5%87%bd%e6%95%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; fname&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# 命令&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 函数的执行 `fname`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;function&lt;/code&gt; 关键字可以省略。&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230705/a511981f8b144c149bb77f44fac1b3ab.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;h3 id=&#34;变量和参数&#34;&gt;&#xA;  变量和参数&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8f%98%e9%87%8f%e5%92%8c%e5%8f%82%e6%95%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;函数作用范围的变量可以使用 local 申明，只在函数内部生效：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;local 变量名&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230705/4935ca38672e4e2992e58491aae03bfc.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;p&gt;函数的参数：$1 $2 $3 ${10} .. $n&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230705/7e281a0af3d147f4ad4e8c0e2e7096d7.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;h2 id=&#34;482-系统脚本&#34;&gt;&#xA;  4.8.2 系统脚本&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#482-%e7%b3%bb%e7%bb%9f%e8%84%9a%e6%9c%ac&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;系统自建了函数库，可以在脚本中引用，目录是 &lt;code&gt;/etc/init.d/functions&lt;/code&gt;，如果想导入系统函数库，可以使用 source 函数脚本文件 “导入” 函数。&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230705/4c6ebdb34f694d169486e41eef9e80d5.png&#34; width=  /&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>6.8 NAS</title>
      <link>https://example.com/linux/docs/part6-service-manage/6.8-nas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part6-service-manage/6.8-nas/</guid>
      <description>&lt;h1 id=&#34;68-nas&#34;&gt;&#xA;  6.8 NAS&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#68-nas&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;681-简介&#34;&gt;&#xA;  6.8.1 简介&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#681-%e7%ae%80%e4%bb%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;NAS（Network Attached Storage）是一种网络附加存储设备，它提供了一种简单和方便的方法来集中存储和共享文件、数据和媒体内容。NAS 设备通常连接到局域网（LAN）上，可以通过网络协议（如 NFS、SMB/CIFS、AFP 等）提供文件共享服务，使多台计算机或其他设备可以同时访问和使用存储在 NAS 上的文件。&lt;/p&gt;&#xA;&lt;p&gt;NAS 设备通常是一个独立的硬件设备，它包含一个或多个硬盘驱动器组成的存储系统，并配备了一个嵌入式操作系统和网络接口。它可以通过以太网连接到局域网，并通过网络协议提供文件服务。一些高级的NAS设备还提供其他功能，如备份、远程访问、多用户访问控制、多媒体流媒体等。&lt;/p&gt;&#xA;&lt;p&gt;NAS 的优点包括：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;简单易用：NAS 设备通常具有友好的用户界面和配置工具，使其易于安装、设置和管理。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;文件共享和协作：通过 NAS 设备，多个用户可以方便地共享和访问存储在同一个位置的文件，促进文件的协作和共享。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;数据备份：NAS 设备通常提供内置的备份功能，可以自动备份计算机或其他设备上的数据，保护数据免受意外丢失或损坏。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;远程访问：一些 NAS 设备支持远程访问，使用户可以通过互联网从任何地方安全地访问和管理存储的文件。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;扩展性：NAS 设备通常具有可扩展的存储容量，可以根据需求添加更多的硬盘驱动器来扩展存储空间。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;NAS 设备适用于个人用户、家庭用户和小型办公环境，以满足数据存储、共享和备份的需求。它提供了一个中心化的存储解决方案，使用户能够轻松管理和访问存储的文件和数据。&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.9 国内镜像源</title>
      <link>https://example.com/linux/docs/part1-primary/1.9-mirrors-sources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part1-primary/1.9-mirrors-sources/</guid>
      <description>&lt;h1 id=&#34;19-国内镜像源&#34;&gt;&#xA;  1.9 国内镜像源&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#19-%e5%9b%bd%e5%86%85%e9%95%9c%e5%83%8f%e6%ba%90&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;alpine&#34;&gt;&#xA;  Alpine&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#alpine&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Alpine 的源文件为：&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;/etc/apk/repositories&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;默认的源地址为：http://dl-cdn.alpinelinux.org/， 修改地址可以编辑源文件 /etc/apk/repositories。&lt;/p&gt;&#xA;&lt;p&gt;国内镜像及修改方法，采用国内阿里云的源，文件内容为：&lt;/p&gt;&#xA;&lt;p&gt;&#xA;  &lt;a href=&#34;https://mirrors.aliyun.com/alpine/v3.6/main/&#34;&gt;https://mirrors.aliyun.com/alpine/v3.6/main/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;  &lt;a href=&#34;https://mirrors.aliyun.com/alpine/v3.6/community/&#34;&gt;https://mirrors.aliyun.com/alpine/v3.6/community/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;命令：&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;sed -i &amp;rsquo;s/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g&amp;rsquo; /etc/apk/repositories&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;如果采用中国科技大学的源，文件内容为：&lt;/p&gt;&#xA;&lt;p&gt;&#xA;  &lt;a href=&#34;https://mirrors.ustc.edu.cn/alpine/v3.6/main/&#34;&gt;https://mirrors.ustc.edu.cn/alpine/v3.6/main/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;  &lt;a href=&#34;https://mirrors.ustc.edu.cn/alpine/v3.6/community/&#34;&gt;https://mirrors.ustc.edu.cn/alpine/v3.6/community/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;命令：&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;sed -i &amp;rsquo;s/dl-cdn.alpinelinux.org/mirrors.ustc.edu.cn/g&amp;rsquo; /etc/apk/repositories&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;如果采用中国科技大学的源，文件内容为：&lt;/p&gt;&#xA;&lt;p&gt;&#xA;  &lt;a href=&#34;https://mirrors.tuna.tsinghua.edu.cn/alpine/v3.6/main/&#34;&gt;https://mirrors.tuna.tsinghua.edu.cn/alpine/v3.6/main/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;  &lt;a href=&#34;https://mirrors.tuna.tsinghua.edu.cn/alpine/v3.6/community/&#34;&gt;https://mirrors.tuna.tsinghua.edu.cn/alpine/v3.6/community/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;命令：&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;sed -i &amp;rsquo;s/dl-cdn.alpinelinux.org/mirrors.tuna.tsinghua.edu.cn/g&amp;rsquo; /etc/apk/repositories&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>2.9 切换用户</title>
      <link>https://example.com/linux/docs/part2-sys-operate/2.9-switch-user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part2-sys-operate/2.9-switch-user/</guid>
      <description>&lt;h1 id=&#34;29-切换用户&#34;&gt;&#xA;  2.9 切换用户&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#29-%e5%88%87%e6%8d%a2%e7%94%a8%e6%88%b7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;&lt;code&gt;su&lt;/code&gt;用于切换用户，如果普通用户切换成管理员需要输入密码，那么就需要把密码告诉普通用户，有暴露 root 密码的风险。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;sudo&lt;/code&gt;可以避免暴露 root 密码，可以直接把某些命令授权给普通用户执行，普通用户在执行时不需要 root 用户密码。&lt;/p&gt;&#xA;&lt;h2 id=&#34;291-su&#34;&gt;&#xA;  2.9.1 su&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#291-su&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;用于切换当前用户身份到其他用户身份。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;-&lt;/code&gt; 参数在变更账号后并改变工作目录到该账号的家目录。&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230202/3b092571ca3c4d109ab80fd07ab8939d.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;h2 id=&#34;291-sudo&#34;&gt;&#xA;  2.9.1 sudo&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#291-sudo&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;以其他身份来执行命令。&lt;/p&gt;&#xA;&lt;p&gt;visudo 设置需要使用 sudo 的用户（组）。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wilson ALL&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/usr/sbin/shutdown &lt;span style=&#34;color:#75715e&#34;&gt;# wilson 用户被授予 shutdown 执行权限，多个命令以 , 分隔。&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wilson ALL&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/usr/sbin/shutdown NOPASSWD &lt;span style=&#34;color:#75715e&#34;&gt;# wilson 用户被授予 shutdown 执行权限，不需要输入密码&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>4.9 脚本和计划任务</title>
      <link>https://example.com/linux/docs/part4-shell/4.9-script-cron/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part4-shell/4.9-script-cron/</guid>
      <description>&lt;h1 id=&#34;49-脚本和计划任务&#34;&gt;&#xA;  4.9 脚本和计划任务&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#49-%e8%84%9a%e6%9c%ac%e5%92%8c%e8%ae%a1%e5%88%92%e4%bb%bb%e5%8a%a1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;491-脚本优先级控制&#34;&gt;&#xA;  4.9.1 脚本优先级控制&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#491-%e8%84%9a%e6%9c%ac%e4%bc%98%e5%85%88%e7%ba%a7%e6%8e%a7%e5%88%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;可以使用 nice 和 renice 调整脚本优先级。&lt;/p&gt;&#xA;&lt;p&gt;nice 命令用于启动一个新进程，并设置其优先级。通过指定一个优先级值（范围从 -20（最高优先级）到 +19（最低优先级）），可以告诉操作系统如何在调度进程时优先考虑它们。较低的优先级值意味着更高的优先级。&lt;/p&gt;&#xA;&lt;p&gt;例如，要在启动一个进程时设置较低的优先级，可以使用以下命令：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nice -n &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; command&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上述命令将启动一个新的进程 command，并将其优先级设置为 +10。需要注意的是，使用 nice 启动的进程的优先级相对于默认值进行了调整。&lt;/p&gt;&#xA;&lt;p&gt;renice 命令用于修改已经运行的进程的优先级。可以使用 renice 命令将已经运行的进程的优先级增加或降低。&lt;/p&gt;&#xA;&lt;p&gt;例如，要将进程的优先级提高到较高值，可以使用以下命令：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;renice -n -5 &amp;lt;PID&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上述命令将进程 &lt;PID&gt; 的优先级降低了 5。&lt;/p&gt;&#xA;&lt;p&gt;更改进程的优先级需要适当的权限。通常，只有具有足够权限（如 root 用户或具有 CAP_SYS_NICE 权限的用户）才能增加或降低进程的优先级。&lt;/p&gt;&#xA;&lt;p&gt;脚本避免出现 “不可控的” 死循环，死循环导致 cpu 占用过高，死循环导致死机。&lt;/p&gt;&#xA;&lt;h2 id=&#34;492-捕获信号&#34;&gt;&#xA;  4.9.2 捕获信号&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#492-%e6%8d%95%e8%8e%b7%e4%bf%a1%e5%8f%b7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;kill 默认会发送 15 号信号给应用程序&lt;/li&gt;&#xA;&lt;li&gt;ctrl + C 发送 2 号信号给应用程序&lt;/li&gt;&#xA;&lt;li&gt;9 号信号不可阻塞，kill -9 不能进行捕获&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;trap 命令可以用来捕获信号。&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230705/5acea3faef0048efb6cd2ccd8c948d5a.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;h2 id=&#34;493-计划任务&#34;&gt;&#xA;  4.9.3 计划任务&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#493-%e8%ae%a1%e5%88%92%e4%bb%bb%e5%8a%a1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;一次性计划任务&#34;&gt;&#xA;  一次性计划任务&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%80%e6%ac%a1%e6%80%a7%e8%ae%a1%e5%88%92%e4%bb%bb%e5%8a%a1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;一次性计划任务使用的是 at 命令，如果没有 at 命令可以先通过 yum 或 apt 安装。&lt;/p&gt;</description>
    </item>
    <item>
      <title>2.10 文件和文件夹</title>
      <link>https://example.com/linux/docs/part2-sys-operate/2.10-file-dir/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/linux/docs/part2-sys-operate/2.10-file-dir/</guid>
      <description>&lt;h1 id=&#34;210-文件和文件夹&#34;&gt;&#xA;  2.10 文件和文件夹&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#210-%e6%96%87%e4%bb%b6%e5%92%8c%e6%96%87%e4%bb%b6%e5%a4%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;2101-文件类型&#34;&gt;&#xA;  2.10.1 文件类型&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2101-%e6%96%87%e4%bb%b6%e7%b1%bb%e5%9e%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;-&lt;/code&gt; 普通文件&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;d&lt;/code&gt; 目录文件&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;b&lt;/code&gt;  块特殊文件&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;c&lt;/code&gt; 字符特殊文件&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;l&lt;/code&gt; 符号链接&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;f&lt;/code&gt; 命名管道&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;s&lt;/code&gt; 套接字文件&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;创建新文件有默认权限，根据 umask 值计算，属主和属组根据当前进程的用户来设定。&lt;/p&gt;&#xA;&lt;p&gt;在 linux 中创建文件默认是 (0)666 权限，需要减去 umask 的值。如：&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230202/36a697b979624f48b5f05d4c153b2dd9.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;h2 id=&#34;2102-权限表示&#34;&gt;&#xA;  2.10.2 权限表示&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2102-%e6%9d%83%e9%99%90%e8%a1%a8%e7%a4%ba&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;普通文件&#34;&gt;&#xA;  普通文件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%99%ae%e9%80%9a%e6%96%87%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;r=4 读&lt;/li&gt;&#xA;&lt;li&gt;w=2 写&lt;/li&gt;&#xA;&lt;li&gt;x=1 执行&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;目录&#34;&gt;&#xA;  目录&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%9b%ae%e5%bd%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;x 进入目录&lt;/li&gt;&#xA;&lt;li&gt;rx 显示目录内的文件名&lt;/li&gt;&#xA;&lt;li&gt;wx 修改目录内的文件名&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230202/d77581f4f16f461ab09e4af6cba2cdf1.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;p&gt;x 权限只能进入目录&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230202/397ef94e8c9e493fa4db88a69879756f.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;p&gt;rx 权限能进入并目录，显示目录内容，也可以读取文件，但是不能对文件进行操作&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230202/9ea077b36ea4496195dc68dc7e0c568d.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;p&gt;wx 权限能进入目录，但是不能显示目录内容，可以读取/修改/删除文件&lt;/p&gt;&#xA;&lt;div align=&#34;center&#34;&gt;&lt;img src=&#34;https://cdn.xiaobinqt.cn/xiaobinqt.io/20230202/26ff60dee55a4e3d9aaeff0dcc2b8878.png&#34; width=  /&gt;&lt;/div&gt;&#xA;&lt;h2 id=&#34;2103-修改权限&#34;&gt;&#xA;  2.10.3 修改权限&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2103-%e4%bf%ae%e6%94%b9%e6%9d%83%e9%99%90&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;chmod&#34;&gt;&#xA;  chmod&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chmod&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;chmod 可以修改文件和目录权限。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
