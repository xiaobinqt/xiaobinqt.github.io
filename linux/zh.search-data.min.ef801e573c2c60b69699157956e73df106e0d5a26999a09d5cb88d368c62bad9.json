[{"id":0,"href":"/linux/docs/part1-primary/1.1-linux-release/","title":"1.1 简介和常见发行版","section":"第一部分 基础知识","content":" 1.1 简介和常见发行版 # 1.1.1 快捷键 # Tab：命令和文件名补全； Ctrl+C：中断正在运行的程序； Ctrl+D：结束键盘输入（End Of File，EOF） "},{"id":1,"href":"/linux/docs/part2-sys-management/2.1-help/","title":"2.1 帮助命令","section":"第二部分 系统操作","content":" 2.1 帮助命令 # 2.1.1 man # man 命令有很多 section，可以通过man man 查看，如下：\nman 1 可以省略 1 表示查看可执行程序或 shell 命令，如man ls。\n如果想要通过 man 查看文件的说明，可以使用man 5，比如 passwd 可以是一个系统命令也可以是一个配置文件/etc/passwd，那么man passwd 就是查看这个系统命令的说明，man 5 passwd就是查看/etc/passwd这个配置文件的说明。\n当不知道查看的是命令还是文件时可以使用man -a 关键字，比如man -a passwd，这样就会把所有的说明都列出来。\n2.1.2 help # shell（命令解释器）自带的命令称为内部命令，其他的是外部命令。可以用type 命令知道这个命令是内部命令还是外部命令。\n内部命令使用 help 帮助：help 命令\n外部命令使用 help 帮助：命令 --help\n2.1.3 info # info 帮助比 help 更详细，可以作为 help 的补充。\n"},{"id":2,"href":"/linux/docs/part2-sys-management/2.2-ls/","title":"2.2 ls 命令","section":"第二部分 系统操作","content":" 2.2 ls 命令 # ls 可以查看多个目录，如\nls /root / 查看/root目录和/目录内容。\n2.2.1 常用选项 # -l 选项 # 单列输出。\n-a 选项 # 查看所有\n-r 选项 # 逆序排序，默认按文件名逆序。\n-t 选项 # 按时间信息排序。比如按时间逆序可以使用ls -lrt。\n-R 选项 # 递归列出全部目录的内容。\n-h 选项 # -h参数是更加人性化打印文件的尺寸大小，单位是G，M，K，否则显示文件的字节大小。\n如果只用ls -h是看不见文件或者目录大小的，必须加上ls -lh。\n-d 选项 # 将目录名像其它文件一样列出，而不是列出它们的内容。\n"},{"id":3,"href":"/linux/docs/part1-primary/1.2-common-dir/","title":"1.2 常见目录","section":"第一部分 基础知识","content":" 常见目录 # / # 根目录 ├── /root # root 用户家目录 ├── /home/username # 普通用户家目录 ├── /etc # 配置文件目录 ├── /bin # 命令目录 ├── /sbib # 管理命令目录 ├── /usr/bin # 系统预装的其他命令 └── /usr/sbin # 系统预装的其他命令 "},{"id":4,"href":"/linux/docs/part2-sys-management/2.3-shutdown/","title":"2.3 关机","section":"第二部分 系统操作","content":" 2.3 关机 # 1. who # 在关机前需要先使用 who 命令查看有没有其它用户在线。\n2. sync # 为了加快对磁盘文件的读写速度，位于内存中的文件数据不会立即同步到磁盘，因此关机之前需要先进行 sync 同步操作。\n3. shutdown # ## shutdown [-krhc] 时间 [信息] -k ： 不会关机，只是发送警告信息，通知所有在线的用户 -r ： 将系统的服务停掉后就重新启动 -h ： 将系统的服务停掉后就立即关机 -c ： 取消已经在进行的 shutdown 参考 # Linux命令之关机shutdown "},{"id":5,"href":"/linux/docs/part2-sys-management/2.4-cp/","title":"2.4 cp 命令","section":"第二部分 系统操作","content":" 2.4 cp 命令 # 将源文件或目录复制到目标文件或目录中。\n2.4.1 常用选项 # -p 选项 # 在复制文件后，文件的时间会发生变化，属主也有可能会发生变化。-p可以保留源文件或目录的属性。\n-a 选项 # 在复制文件后，权限，属主和时间都不发生变化。\n-f 选项 # 强行复制文件或目录，不论目标文件或目录是否已存在。\n-r 选项 # 递归处理，将指定目录下的所有文件与子目录一并处理。\n"},{"id":6,"href":"/linux/docs/part2-sys-management/2.5-file-view/","title":"2.5 文件查看命令","section":"第二部分 系统操作","content":" 2.5 文件查看命令 # 2.5.1 cat # 参看文件打印到标准输出。\n2.5.1 head # 查看文件开头，比如前 5 行head -5 文件名。\n2.5.1 tail # 查看文件结尾，查看最后 3 行tail -3 文件名。\n可以使用-f跟踪文件变化。\n2.5.1 wc # 统计文件的字节数、字数、行数。\n-l 参数 # 统计行数。\n"},{"id":7,"href":"/linux/docs/part2-sys-management/2.6-backup-compression/","title":"2.6 压缩和打包","section":"第二部分 系统操作","content":" 2.6 压缩和打包 # 2.6.1 压缩文件名 # Linux 下有很多压缩文件名，常见的如下：\n扩展名 压缩程序 *.Z compress *.zip zip *.gz gzip *.bz2 bzip2 *.xz xz *.tar tar 程序打包的数据，没有经过压缩 *.tar.gz tar 程序打包的文件，经过 gzip 的压缩 *.tar.bz2 tar 程序打包的文件，经过 bzip2 的压缩 *.tar.xz tar 程序打包的文件，经过 xz 的压缩 *.tbz2 *.tar.bz2 的缩写 *.tgz *.tar.gz 的缩写 2.6.2 压缩指令 # 1. gzip # gzip 是 Linux 使用最广的压缩指令，可以解开 compress、zip 与 gzip 所压缩的文件。\n经过 gzip 压缩过，源文件就不存在了。gzip 命令只能用来压缩文件，不能压缩目录，即便指定了目录，也只能压缩目录内的所有文件。gzip 命令不需要指定压缩包名。\n有 9 个不同的压缩等级可以使用。\n可以使用 zcat、zmore、zless 来读取压缩文件的内容。\n$ gzip [-cdtv#] filename -c ：将压缩的数据输出到屏幕上 -d ：解压缩 -t ：检验压缩文件是否出错 -v ：显示压缩比等信息 -# ： # 为数字的意思，代表压缩等级，数字越大压缩比越高，默认为 6 2. bzip2 # 提供比 gzip 更高的压缩比。\n查看命令：bzcat、bzmore、bzless、bzgrep。\n$ bzip2 [-cdkzv#] filename -k ：保留源文件 -z ：-d 选项的补充，强制进行压缩操作，而不管执行的是哪个程序 3. xz # 提供比 bzip2 更佳的压缩比。\n可以看到，gzip、bzip2、xz 的压缩比不断优化。不过要注意的是，压缩比越高，压缩的时间也越长。\n查看命令：xzcat、xzmore、xzless、xzgrep。\n$ xz [-dtlkc#] filename -l ：列出有关.xz文件的信息 2.6.3 打包 # 压缩指令只能对一个文件进行压缩，而打包能够将多个文件打包成一个大文件。tar 不仅可以用于打包，也可以使用 gzip、bzip2、xz 将打包文件进行压缩。\n$ tar [-z|-j|-J] [cv] [-f 新建的 tar 文件] filename... ==打包压缩 $ tar [-z|-j|-J] [tv] [-f 已有的 tar 文件] ==查看 $ tar [-z|-j|-J] [xv] [-f 已有的 tar 文件] [-C 目录] ==解压缩 -z ：使用 zip； -j ：使用 bzip2； -J ：使用 xz； -c ：新建打包文件； -t ：查看打包文件里面有哪些文件； -x ：解打包或解压缩的功能； -v ：在压缩/解压缩的过程中，显示正在处理的文件名； -f : filename：要处理的文件； -C 目录 ： 在特定目录解压缩。 使用方式 命令 打包压缩 tar -jcv -f filename.tar.bz2 要被压缩的文件或目录名称 查 看 tar -jtv -f filename.tar.bz2 解压缩 tar -jxv -f filename.tar.bz2 -C 要解压缩的目录 参考 # Linux命令之压缩gzip "},{"id":8,"href":"/linux/docs/part2-sys-management/2.7-vim/","title":"2.7 vim","section":"第二部分 系统操作","content":" 2.7 vim # 2.7.1 vim 三种模式 # 一般指令模式（Command mode）：vim 的默认模式，可以用于移动游标查看内容； 编辑模式（Insert mode）：按下i等按键之后进入，可以对文本进行编辑； 指令列模式（Bottom-line mode）：按下:按键之后进入，用于保存退出等操作。 在指令列模式下，有以下命令用于离开或者保存文件。\n命令 作用 :w 写入磁盘，也可以加上保存路径，如 :w /tmp/test.txt :w! 当文件为只读时，强制写入磁盘。到底能不能写入，与用户对该文件的权限有关 :q 离开 :q! 强制离开不保存 :wq 写入磁盘后离开 :wq! 强制写入磁盘后离开 2.7.2 正常模式 # 按键 作用 I 进入插入模式，光标会移到当前行的开头位置 a 进入插入模式，光标会移动到下一个字符位置 A 进入插入模式，光标会移动到当前行末尾位置 o 进入插入模式，会向下新开一行，光标会移动到新行开头位置 O 进入插入模式，会向上新开一行，光标会移动到新行开头位置 h 前移 l 后移 j 下移 k 上移 u 撤销操作，可以多次撤销 x 单个字符删除 r 替换字符 ^ 回到当前行首 $ 回到当前行尾 ctrl+r 重做，恢复撤销 yy 和 p yy 复制一行，p 粘贴 复制多行 # 比如复制 3 行，光标移到要复制的开头位置，先按 3，再按 yy，就复制了 3 行。\n复制光标到行结尾 # 在光标位置，先按 y 再按 $。\n跳到指定行 # 先输入行号，比如 11，再按 ctrl+g 或是 G。\n按 2 下 g（小写的 g），gg 会直接跳到第一行。GG 会跳到文本最后一行。\n2.7.3 命令模式 # 临时执行命令 # :! 命令可以在命令模式临时执行命令。比如临时执行ifconfig命令。\n查找替换 # :/要查找的字符串，按 n 往下继续查找。shift+n 定位到上一个查找到的结果。\n:s/old/new 只在光标所在行进行替换。\n:3,5s/old/new 对 3-5 行指定行进行替换。\n:%s/old/new 全文替换。可以加上 g，:%s/old/new/g进行全局替换。\n2.7.4 可视模式 # 按键 作用 v 字符可视模式 V（shift+v） 行可视模式 ctrl+v 块可视模式，配合 d 和I命令可以进行块的便利操作 2.7.5 常见问题 # 1. E388: Couldn\u0026rsquo;t find definition # 这个问题会导致 vim 的上下左右方向键不能使用。解决方法如下：\nvim ~/.vimrc 如果家目录没有 .vimrc 文件可以 touch 新建一个。在 .vimrc 文件中添加\n:set term=builtin_ansi 2. WARNING: terminal is not fully functional # 修改环境变量 TERM\nexport TERM=xterm "},{"id":9,"href":"/linux/docs/part2-sys-management/2.8-user-manage/","title":"2.8 用户管理","section":"第二部分 系统操作","content":" 2.8 用户管理 # 命令 作用 useradd 新建用户 userdel 删除用户 passwd 修改用户密码 usermod 修改用户属性 chage 修改帐号和密码的有效期限 groupadd 新建用户组 groupdel 删除用户组 2.8.1 useradd # useradd 用户名 useradd -g 用户组 用户名 当不指定用户组时，会创建一个同名的用户组。\n2.8.2 passwd # passwd wislon 当修改自己的密码时，直接输入 passwd 回车。\n2.8.3 userdel # userdel 用户名 当加上-r选项时，会删除用户的家目录。\n2.8.4 usermod # 用于修改用户的基本信息。\n常用选项 # -d 选项 # 修改用户登入时的目录，只是修改/etc/passwd中用户的家目录配置信息，不会自动创建新的家目录，通常和-m一起使用。\n-m 选项 # 移动用户家目录到新的位置，不能单独使用，一般与-d一起使用。\n-g 选项 # 修改用户所属的用户组。\nusermod -g 用户组 用户名 2.8.5 groupadd # 创建一个新的用户组。\n2.8.6 passwd 配置文件 # /etc/passwd 文件中，各个字段以:分隔，如下\nntp:x:38:38::/etc/ntp:/sbin/nologin user1:x:1004:1004::/home/user1:/bin/bash 值1：表示用户名 值2：是否需要密码验证，x需要，空为不需要。 值3：用户 ID 值4：用户组 ID 值5：注释 值6：家目录 值7：用户登录后的命令解释器，当值为/sbin/nologin时不能登录终端。 2.8.6 shadow 配置文件 # /etc/shadow 文件跟用户密码相关。各个字段以:分隔，如下\nwilson:$6$OlPoziO9$SvSfAjR4yHWkUpAYIEHL6jUxF7FypoiOWRhVTftR3CZJUIwpWZcSguhVHfc1xVj9A9tr8ArZxvH.G//tyR0Qm/:19390:0:99999:7::: w:!!:19390:0:99999:7::: user1:!!:19390:0:99999:7::: 值1：用户名 值2：加密后的密码 2.8.7 group 配置文件 # /etc/group 文件跟用户组相关。各个字段以:分隔，如下\nstapsys:x:157: mail:x:12:postfix wilson:x:1002: w:x:1003: group1:x:1004: user1:x:1005: 值1：用户组名 值2：是否需要密码验证 值3：用户组 GID 值4：其他组设置 "},{"id":10,"href":"/linux/docs/part2-sys-management/2.9-switch-user/","title":"2.9 切换用户","section":"第二部分 系统操作","content":" 2.9 切换用户 # su用于切换用户，如果普通用户切换成管理员需要输入密码，那么就需要把密码告诉普通用户，有暴露 root 密码的风险。\nsudo可以避免暴露 root 密码，可以直接把某些命令授权给普通用户执行，普通用户在执行时不需要 root 用户密码。\n2.9.1 su # 用于切换当前用户身份到其他用户身份。\n- 参数在变更账号后并改变工作目录到该账号的家目录。\n2.9.1 sudo # 以其他身份来执行命令。\nvisudo 设置需要使用 sudo 的用户（组）。\nwilson ALL=/usr/sbin/shutdown # wilson 用户被授予 shutdown 执行权限，多个命令以 , 分隔。 wilson ALL=/usr/sbin/shutdown NOPASSWD # wilson 用户被授予 shutdown 执行权限，不需要输入密码 "},{"id":11,"href":"/linux/docs/part2-sys-management/2.10-file-dir/","title":"2.10 文件和文件夹","section":"第二部分 系统操作","content":" 2.10 文件和文件夹 # 2.10.1 文件类型 # - 普通文件 d 目录文件 b 块特殊文件 c 字符特殊文件 l 符号链接 f 命名管道 s 套接字文件 创建新文件有默认权限，根据 umask 值计算，属主和属组根据当前进程的用户来设定。\n在 linux 中创建文件默认是 (0)666 权限，需要减去 umask 的值。如：\n2.10.2 权限表示 # 普通文件 # r=4 读 w=2 写 x=1 执行 目录 # x 进入目录 rx 显示目录内的文件名 wx 修改目录内的文件名 x 权限只能进入目录\nrx 权限能进入并目录，显示目录内容，也可以读取文件，但是不能对文件进行操作\nwx 权限能进入目录，但是不能显示目录内容，可以读取/修改/删除文件\n2.10.3 修改权限 # chmod # chmod 可以修改文件和目录权限。\nu 表示用户，g 表示用户组，o 表示其他用户，a 表示所有。\nchmod u+x /tmp/testfile chmod u-wx /tmp/testfile chmod u=rwx /tmp/testfile chmod 755 /tmp/testfile chown # 更改文件或目录的所属用户和用户组。\nchown 用户 文件 chown :用户组 文件 chown 用户:用户组 文件 chgrp # 可以单独更新用户组，不常用。\nchgrp 用户组 文件 2.10.4 特殊权限 # SUID 用于二进制可执行文件，执行命令时取得文件属主权限，如/usr/bin/passwd SGID 用于目录，在该目录下创建新的文件和目录，权限自动更改为该目录的属组 SBIT 用于目录，该目录下新建的文件和目录，仅 root 和自己可以删除，如/tmp SUID # 说明 # 可以看到/etc/passwd除了 root 用户其实没有其他可以修改的，但是其他人也可以修改自己的密码，所以/usr/bin/passwd的权限就是 SUID，也就是任何人在执行 passwd 命令时自动获取到属主权限也就是 root 权限。\n添加方式 # 以 chmod 在原始权限加 4，比如原始权限是 744，那么就修改后的就是 4744，示例如下\nSBIT # 以 chmod 在原始权限加 1，比如原始权限是 744，那么就修改后的就是 1744，示例如下\n"}]