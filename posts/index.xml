<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - xiaobinqt 博客 - 技术改变生活</title>
        <link>https://www.xiaobinqt.cn/posts/</link>
        <description>所有文章 | xiaobinqt 博客 - 技术改变生活</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>xiaobinqt@163.com (xiaobinqt)</managingEditor>
            <webMaster>xiaobinqt@163.com (xiaobinqt)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 25 Aug 2024 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://www.xiaobinqt.cn/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Docker 容器网络分析</title>
    <link>https://www.xiaobinqt.cn/docker-network/</link>
    <pubDate>Mon, 21 Aug 2023 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/docker-network/</guid>
    <description><![CDATA[1 概述一个 Linux 容器能看见的“网络栈”，实际上是被隔离在它自己的 Network Namespace 当中的。 而所谓“网络栈”其实包括了：网卡（Network Interface）]]></description>
</item><item>
    <title>雅思 6.5 备考打卡</title>
    <link>https://www.xiaobinqt.cn/ielts-study/</link>
    <pubDate>Sun, 25 Aug 2024 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/ielts-study/</guid>
    <description><![CDATA[缘起刚无聊翻起了 QQ 空间，除了看到了各种傻X 的说说，还看到自己的一些颇有“抱负”的话，比如下面这条说说。 不堪回首的说说 我其实在很长一段里都把李]]></description>
</item><item>
    <title>纪念一位老友</title>
    <link>https://www.xiaobinqt.cn/old-pal/</link>
    <pubDate>Wed, 16 Mar 2022 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/old-pal/</guid>
    <description><![CDATA[几年前，一位好朋友去世了，九零后，跟我年纪一样。我跟他从小就认识，我们一起上的小学，一起上的初中，高中之后便联系的少了，后来我去外地读书，联]]></description>
</item><item>
    <title>网络基础知识</title>
    <link>https://www.xiaobinqt.cn/network-base-knowledge/</link>
    <pubDate>Sun, 18 Aug 2024 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/network-base-knowledge/</guid>
    <description><![CDATA[TODO 1 http 各个版本的区别HTTP/1.0 版本主要增加以下几点： 增加了 HEAD、POST 等新方法。 增加了响应状态码。 引入了头部，即请求头和响应头。]]></description>
</item><item>
    <title>Mongodb 学习笔记</title>
    <link>https://www.xiaobinqt.cn/mongodb-glance/</link>
    <pubDate>Wed, 14 Apr 2021 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/mongodb-glance/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220416/73b2a45bdf9440789438ea68af47fb95.png" referrerpolicy="no-referrer">
            </div>1 安装 1.1 win10 安装在 windows 下安装可以参考这篇文章mongodb-window-install。 1.1.1 小坑我使用的是 windows 10 企业版，在安装时出现了个问题，如下]]></description>
</item><item>
    <title>sqlite 常用命令</title>
    <link>https://www.xiaobinqt.cn/sqlite-common-cli/</link>
    <pubDate>Sun, 18 Aug 2024 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/sqlite-common-cli/</guid>
    <description><![CDATA[1 安装/连接关于 sqlite 的安装可以参考 SQLite 安装。 查看版本 2 常用命令 shell sqlite3 # 进入 sqlite sqlite3 mytest # 连接数据库，不存在新建 &gt; .databases # 显示数据库名称及对应文件 main: /Users/weibin/mytest r/w sqlite3 /path/to/your/database.db #]]></description>
</item><item>
    <title>Go 方法值接收者和指针接收者的区别</title>
    <link>https://www.xiaobinqt.cn/func-receive-value-pointer/</link>
    <pubDate>Sat, 15 Aug 2020 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/func-receive-value-pointer/</guid>
    <description><![CDATA[如果方法的接收者是指针类型，无论调用者是对象还是对象指针，修改的都是对象本身，会影响调用者； 如果方法的接收者是值类型，无论调用者是对象还是对]]></description>
</item><item>
    <title>http入门笔记</title>
    <link>https://www.xiaobinqt.cn/http-glance/</link>
    <pubDate>Thu, 17 Mar 2022 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/http-glance/</guid>
    <description><![CDATA[<p>该笔记是在学习《透视 HTTP 协议》时整理，还参考了网上的其他资料。鄙人只是网络世界的搬运整理工&#x1f602;。</p>]]></description>
</item><item>
    <title>session cookie token 的区别</title>
    <link>https://www.xiaobinqt.cn/session-cookie-token-difference/</link>
    <pubDate>Sat, 11 Jun 2022 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/session-cookie-token-difference/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220824/ee39a9cb19524d918d984db89b1661a5.png" referrerpolicy="no-referrer">
            </div>1 Cookie 和 SessionHTTP 协议是一种无状态协议，即每次服务端接收到客户端的请求时，都是一个全新的请求，服务器并不知道客户端的历史请求记录；Session 和 Cookie 的]]></description>
</item><item>
    <title>Golang 内存逃逸</title>
    <link>https://www.xiaobinqt.cn/escape-heap/</link>
    <pubDate>Tue, 10 Oct 2023 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/escape-heap/</guid>
    <description><![CDATA[在 C/C++ 开发中，动态分配内存（new/malloc）需要开发者手动释放资源。这样做的好处是，需要申请多少内存空间可以很好的掌握怎么分配。但是这有]]></description>
</item><item>
    <title>Go Slice 实现原理</title>
    <link>https://www.xiaobinqt.cn/go-slice-principle/</link>
    <pubDate>Tue, 10 Oct 2023 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/go-slice-principle/</guid>
    <description><![CDATA[1 什么是 slice切片是基于数组实现的，它的底层是数组，可以理解为对底层数组的抽象。 源码包中 src/runtime/slice.go 定义了 slice 的数据结构： text type slice struct { array unsafe.Pointer // ArbitraryType int len int cap]]></description>
</item><item>
    <title>Go channel 使用分析</title>
    <link>https://www.xiaobinqt.cn/go-channel-principle/</link>
    <pubDate>Wed, 11 Oct 2023 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/go-channel-principle/</guid>
    <description><![CDATA[1 概念Go 中的 channel 是一个队列，遵循先进先出的原则，负责协程之间的通信。Go 语言提倡不要通过共享内存来通信，而要通过通信来实现内存共享，CSP（]]></description>
</item></channel>
</rss>
