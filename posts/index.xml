<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - xiaobinqt 博客 - 技术改变生活</title>
        <link>https://www.xiaobinqt.cn/posts/</link>
        <description>所有文章 | xiaobinqt 博客 - 技术改变生活</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>xiaobinqt@163.com (xiaobinqt)</managingEditor>
            <webMaster>xiaobinqt@163.com (xiaobinqt)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 12 Sep 2023 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://www.xiaobinqt.cn/posts/" rel="self" type="application/rss+xml" /><item>
    <title>纪念一位老友</title>
    <link>https://www.xiaobinqt.cn/old-pal/</link>
    <pubDate>Wed, 16 Mar 2022 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/old-pal/</guid>
    <description><![CDATA[<p>几年前，一位好朋友去世了，九零后，跟我年纪一样。我跟他从小就认识，我们一起上的小学，一起上的初中，高中之后便联系的少了，后来我去外地读书，联系的就更少了。</p>
<p>那还是二零一九，那时我刚从西安来北京。一天夜里，都很晚了，我妈打电话跟我说，他去世了，好像是心梗，让我在外面多注意身体。天啊，当我听到这个消息的时候，我简直不敢相信，我反复确认了几次，无疑的确是他。</p>
<p>那晚我很难过，因为我不久之前还见过他。二零一九的春节，那天应该是初二的早晨，我骑着电瓶车去外公家拜年，外公家跟他老家离的不远，就几步路，那天早晨我在路边看到了他，我没有停下来，心想就几步路，我回来的时候再去找他，但是等我再往回走的时候他就不在家了。如今听到噩耗，再想起这件事，我真的特别后悔当时应该停下来见他一面。后来，我把这件事说给我女朋友听，她也特别感慨的说，想做什么事一定要赶紧去做。是啊，一定要赶紧去做，毕竟世事无常。</p>
<p>我跟他太久没有联系了，没有他的电话，也没有他的微信，后来在QQ 里找到他的联系方式。我尝试着发了一条消息过去，QQ 的那边，他媳妇回了一条消息，说他人已经不在了。后来有个初中同学联系到了我，是他班上的，建了一个微信群，想尽点绵薄之力，我们一人凑了点钱，由一个在老家的同学给他家里送了去，但他妈妈只是领了我们的心意。他实在是太年轻了，而且新婚不久，孩子才一岁。</p>
<blockquote>
<p>这张照片是上初中时我们一起去皖南事变烈士陵园拍的，也是我跟他唯一的一张合影。
<br>2020 年时家里发大水，家里的东西都泡水了，这张照片后来也不知所踪。</p>
</blockquote>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220319/e2f71ad4eb9f47b5a2d753c8686271a6.jpg?imageView2/0/interlace/1/q/50%7cimageslim" title="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220319/e2f71ad4eb9f47b5a2d753c8686271a6.jpg?imageView2/0/interlace/1/q/50|imageslim" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20220319/e2f71ad4eb9f47b5a2d753c8686271a6.jpg?imageView2/0/interlace/1/q/50|imageslim" data-sub-html="<h2>左三是他</h2>">
        
    </a><figcaption class="image-caption">左三是他</figcaption>
    </figure></p>
<p>有一次我回家，我爸还跟我说在一次婚宴上见过他。他过世后，一次在我大舅家吃饭的时候，他家的一个亲戚也在，在聊起他的时候，直夸他在外面干活能吃苦，人不错。</p>
<p>我跟他从小相识，一起在村小学读书，一起在田埂上疯跑，他教我掏鸟窝，网知了，在我眼里，他好像什么都会，他教了我很多技能，带给我很多快乐。上初中的时候，我跟他一起骑车上学，放学也一起回家。他每天早上都是骑着车来我外婆家等我，等我吃完早饭一起走，一路上我们有好几个同学都一起。下午放学他有时也在我外婆家跟我一起做完作业才回家，这些事如今历历在目，但是他却永远不在了。</p>
<p>也许是年纪大了，不知不觉对有些事越来越伤感。几次提笔想写点什么，但是每次都写不出来，心里总记挂这件事，可能是那次我没有停下来见他吧。</p>
<br>
<div id="id-1">2021年10月15日完</div>
]]></description>
</item><item>
    <title>Docker 单机安装使用 Elasticsearch</title>
    <link>https://www.xiaobinqt.cn/docker-elastic-install/</link>
    <pubDate>Tue, 12 Sep 2023 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/docker-elastic-install/</guid>
    <description><![CDATA[<!-- author： xiaobinqt -->
<!-- email： xiaobinqt@163.com -->
<!-- https://xiaobinqt.github.io -->
<!-- https://www.xiaobinqt.cn -->
<h2 id="安装-es" class="headerLink">
    <a href="#%e5%ae%89%e8%a3%85-es" class="header-mark"></a>安装 ES</h2><p>当前 <code>ElasticSearch</code> 已经到了 <code>8.0+</code>，新版本都有很多新特性，性能和功能都有大幅提升，建议使用较高版本，这里采用 <code>7.12.1</code> 版本 👼</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/f7745775638b42829fd11821d4406420.png" title="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/f7745775638b42829fd11821d4406420.png" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/f7745775638b42829fd11821d4406420.png" data-sub-html="<h2>es 版本</h2>">
        
    </a><figcaption class="image-caption">es 版本</figcaption>
    </figure></p>
<p>安装 <code>ElasticSearch</code> 脚本如下:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">docker run -d \
</span></span><span class="line"><span class="cl">--name elasticsearch \
</span></span><span class="line"><span class="cl">    -e &#34;discovery.type=single-node&#34; \
</span></span><span class="line"><span class="cl">    --privileged \
</span></span><span class="line"><span class="cl">    -p 9200:9200 \
</span></span><span class="line"><span class="cl">    -p 9300:9300 \
</span></span><span class="line"><span class="cl">elasticsearch:7.12.1
</span></span></code></pre></td></tr></table>
</div>
</div><p>常用命令说明：</p>
<ul>
<li><code>-e &quot;cluster.name=es-docker-cluster&quot;</code>：设置集群名称</li>
<li><code>-e &quot;http.host=0.0.0.0&quot;</code>：监听的地址，可以外网访问</li>
<li><code>-e &quot;ES_JAVA_OPTS=-Xms512m -Xmx512m&quot;</code>：内存大小</li>
<li><code>-e &quot;discovery.type=single-node&quot;</code>：非集群模式</li>
<li><code>-v es-data:/usr/share/elasticsearch/data</code>：挂载逻辑卷，绑定<code>elasticsearch</code>的数据目录</li>
<li><code>-v es-logs:/usr/share/elasticsearch/logs</code>：挂载逻辑卷，绑定<code>elasticsearch</code>的日志目录</li>
<li><code>-v es-plugins:/usr/share/elasticsearch/plugins</code>：挂载逻辑卷，绑定<code>elasticsearch</code>的插件目录</li>
<li><code>--privileged</code>：授予逻辑卷访问权</li>
<li><code>-p 9200:9200</code>：端口映射配置</li>
</ul>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/ca407aeb5d044916b27673149b45ec26.png" title="安装 es" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/ca407aeb5d044916b27673149b45ec26.png" data-sub-html="<h2>docker 安装 es</h2><p>安装 es</p>">
        
    </a><figcaption class="image-caption">docker 安装 es</figcaption>
    </figure></p>
<p>安装完成后，在浏览器中输入：<code>http://172.27.46.132/:9200/</code> 即可看到 <code>elasticsearch</code> 的响应结果：</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/a8b3f2fe7d164cb7a02bf8491bbc05cf.png" title="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/a8b3f2fe7d164cb7a02bf8491bbc05cf.png" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/a8b3f2fe7d164cb7a02bf8491bbc05cf.png" data-sub-html="<h2>es 响应结果</h2>">
        
    </a><figcaption class="image-caption">es 响应结果</figcaption>
    </figure></p>
<h2 id="kibana" class="headerLink">
    <a href="#kibana" class="header-mark"></a>Kibana</h2><p>我们可以基于 <code>http</code> 请求操作 <code>ElasticSearch</code>，但基于 <code>http</code> 操作比较麻烦，可以采用 <code>Kibana</code> 实现可视化操作。</p>
<p><code>Kibana</code> 是一个免费且开放的用户界面，能够对 <code>Elasticsearch</code> 数据进行可视化，并在 <code>Elastic Stack</code> 中进行导航，可以进行各种操作，从跟踪查询负载，到理解请求如何流经的整个应用，都能轻松完成。<code>Kibana</code> 让能够自由地选择如何呈现自己的数据。</p>
<h3 id="kibana-安装" class="headerLink">
    <a href="#kibana-%e5%ae%89%e8%a3%85" class="header-mark"></a>Kibana 安装</h3><p>使用 <code>Docker</code> 安装 <code>Kibana</code> 非常简单，但是执行命令需要注意 <code>Kibana</code> 操作的 <code>ElasticSearch</code> 地址，因为 <code>Kibana</code> 是需要连接 <code>ElasticSearch</code> 进行操作的，所以需要 es 和 <code>Kibana</code> 在同一网段，安装 <code>Kibana</code> 命令如下:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">docker run -d \
</span></span><span class="line"><span class="cl">--name kibana \
</span></span><span class="line"><span class="cl">-e ELASTICSEARCH_HOSTS=http://172.27.46.132:9200 \
</span></span><span class="line"><span class="cl">-p 5601:5601  \
</span></span><span class="line"><span class="cl">kibana:7.12.1
</span></span></code></pre></td></tr></table>
</div>
</div><p>命令说明：</p>
<ul>
<li><code>-e ELASTICSEARCH_HOSTS=http://172.27.46.132:9200&quot;</code>：设置 <code>elasticsearch</code> 的地址，因为 <code>kibana</code> 已经与<code>elasticsearch</code>在一个网络，因此可以用容器名直接访问 <code>elasticsearch</code>，也可以写 IP 地址实现访问。</li>
<li><code>-p 5601:5601</code>：端口映射配置</li>
</ul>
<p>安装的时候如果没有镜像，会下载镜像，效果如下：</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/8348436b33284bba88bb2efa43b298f1.png" title="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/8348436b33284bba88bb2efa43b298f1.png" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/8348436b33284bba88bb2efa43b298f1.png" data-sub-html="<h2>安装 Kibana</h2>">
        
    </a><figcaption class="image-caption">安装 Kibana</figcaption>
    </figure></p>
<p>安装成功后，可以访问 <code>http://172.27.46.132:5601/</code> 效果如下：</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/53c75f9beec0482ba216e08af2e4d035.png" title="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/53c75f9beec0482ba216e08af2e4d035.png" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/53c75f9beec0482ba216e08af2e4d035.png" data-sub-html="<h2>Kibana 效果</h2>">
        
    </a><figcaption class="image-caption">Kibana 效果</figcaption>
    </figure></p>
<p>可以点击 <code>Add data</code>，添加示例数据，如下图，随意选一个即可，不选其实也是可以的。</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/f74d72b57b544c6485d15de34417f89f.png" title="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/f74d72b57b544c6485d15de34417f89f.png" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/f74d72b57b544c6485d15de34417f89f.png" data-sub-html="<h2>添加数据</h2>">
        
    </a><figcaption class="image-caption">添加数据</figcaption>
    </figure></p>
<h3 id="kibana-中文配置" class="headerLink">
    <a href="#kibana-%e4%b8%ad%e6%96%87%e9%85%8d%e7%bd%ae" class="header-mark"></a>Kibana 中文配置</h3><p><code>Kibana</code> 支持中文配置，可以把 <code>Kibana</code> 配置成中文版，切换中文操作如下:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">#进入容器
</span></span><span class="line"><span class="cl">docker exec -it kibana /bin/bash
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#进入配置文件目录
</span></span><span class="line"><span class="cl">cd /usr/share/kibana/config
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#编辑文件kibana.yml
</span></span><span class="line"><span class="cl">vi kibana.yml
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#在最后一行添加如下配置
</span></span><span class="line"><span class="cl">i18n.locale: zh-CN
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#保存退出
</span></span><span class="line"><span class="cl">exit
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#并重启容器
</span></span><span class="line"><span class="cl">docker restart kibana
</span></span></code></pre></td></tr></table>
</div>
</div><p>等待 <code>Kibana</code> 容器启动，再次访问 <code>http://172.27.46.132:5601/</code> 效果如下：</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/43ffacffaff84394a12e7e741bcc8f65.png" title="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/43ffacffaff84394a12e7e741bcc8f65.png" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/43ffacffaff84394a12e7e741bcc8f65.png" data-sub-html="<h2>中文效果</h2>">
        
    </a><figcaption class="image-caption">中文效果</figcaption>
    </figure></p>
<h2 id="ik-分词器安装" class="headerLink">
    <a href="#ik-%e5%88%86%e8%af%8d%e5%99%a8%e5%ae%89%e8%a3%85" class="header-mark"></a>IK 分词器安装</h2><p>打开 <code>Kibana</code>，点击开发工具，操作如下：</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/ef521d29bf764703adabe06108c6ef9f.png" title="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/ef521d29bf764703adabe06108c6ef9f.png" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/ef521d29bf764703adabe06108c6ef9f.png" data-sub-html="<h2>开发工具</h2>">
        
    </a><figcaption class="image-caption">开发工具</figcaption>
    </figure></p>
<p>在左边输入如下内容，用于查询分词：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">GET _analyze
</span></span><span class="line"><span class="cl">{
</span></span><span class="line"><span class="cl">  &#34;analyzer&#34;: &#34;standard&#34;,
</span></span><span class="line"><span class="cl">  &#34;text&#34;: &#34;php 是世界上最好的语言&#34;
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></td></tr></table>
</div>
</div><p>效果如下：</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/a8c86a3f5c8640108a32551ace6b8cad.png" title="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/a8c86a3f5c8640108a32551ace6b8cad.png" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/a8c86a3f5c8640108a32551ace6b8cad.png" data-sub-html="<h2>分词效果</h2>">
        
    </a><figcaption class="image-caption">分词效果</figcaption>
    </figure></p>
<p>使用 <code>standard</code> 对 <code>php 是世界上最好的语言</code> 进行分词。</p>
<p><code>分词</code>：提取一句话或者一篇文章中的词语。</p>
<p>我们在使用 <code>ElasticSearch</code> 的时候，默认用 <code>standard</code> 分词器，但 <code>standard</code> 分词器使用的是按空格分词，这种分词操作方法不符合中文分词标准，我们需要额外安装中文分词器。</p>
<h3 id="ik-分词器" class="headerLink">
    <a href="#ik-%e5%88%86%e8%af%8d%e5%99%a8" class="header-mark"></a>IK 分词器</h3><p><code>IK Analyzer</code> 是一个开源的，基于 java 语言开发的轻量级的中文分词工具包。可以直接在 <code>ElasticSearch</code> 中集成 IK 分词器，<code>IK</code> 分词器集成<code>ElasticSearch</code>下载地址：<a href="https://github.com/medcl/elasticsearch-analysis-ik/releases" target="_blank" rel="noopener noreferrer">elasticsearch-analysis-ik/releases</a>。IK 可以跟 es 的版本一致，我们 es 的版本是 7.12.1，IK 的版本也是用 7.12.1。</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/89e1dba4c7fd481ba7183f764a9cb18f.png" title="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/89e1dba4c7fd481ba7183f764a9cb18f.png" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/89e1dba4c7fd481ba7183f764a9cb18f.png" data-sub-html="<h2>IK 分词器</h2>">
        
    </a><figcaption class="image-caption">IK 分词器</figcaption>
    </figure></p>
<h3 id="ik-分词器配置" class="headerLink">
    <a href="#ik-%e5%88%86%e8%af%8d%e5%99%a8%e9%85%8d%e7%bd%ae" class="header-mark"></a>IK 分词器配置</h3><p>下载安装包 <a href="https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v7.12.1/elasticsearch-analysis-ik-7.12.1.zip" target="_blank" rel="noopener noreferrer">elasticsearch-analysis-ik/releases/tag/v7.12.1</a> 后，，需要将 <code>elasticsearch-analysis-ik-7.12.1.zip</code> 拷贝到 <code>elasticSearch</code> 容器里的的 <code>/usr/share/elasticsearch/plugins</code> 目录中解压即可。</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/ee221bb0e9424881b5ea8a687fa5d7bf.png" title="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/ee221bb0e9424881b5ea8a687fa5d7bf.png" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/ee221bb0e9424881b5ea8a687fa5d7bf.png" data-sub-html="<h2>cp elasticsearch-analysis-ik-7.12.1.zip</h2>">
        
    </a><figcaption class="image-caption">cp elasticsearch-analysis-ik-7.12.1.zip</figcaption>
    </figure></p>
<p>解压文件成功后，然后<strong>重启</strong> es 容器。</p>
<h3 id="分词测试" class="headerLink">
    <a href="#%e5%88%86%e8%af%8d%e6%b5%8b%e8%af%95" class="header-mark"></a>分词测试</h3><p><code>IK</code>分词器包含两种模式：</p>
<ul>
<li>
<p><code>ik_smart</code>：最少切分</p>
</li>
<li>
<p><code>ik_max_word</code>：最细切分</p>
</li>
</ul>
<p>前面使用默认的<code>standard</code>分词器，对中文分词非常难用，安装IK分词器后，我们可以使用IK分词器测试，测试代码如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">GET _analyze
</span></span><span class="line"><span class="cl">{
</span></span><span class="line"><span class="cl">  &#34;analyzer&#34;: &#34;ik_max_word&#34;,
</span></span><span class="line"><span class="cl">  &#34;text&#34;: &#34;php 是世界上最好的语言&#34;
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></td></tr></table>
</div>
</div><p>测试效果如下：</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/689f9549af6440e999bf83865dedbe54.png" title="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/689f9549af6440e999bf83865dedbe54.png" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/689f9549af6440e999bf83865dedbe54.png" data-sub-html="<h2>效果</h2>">
        
    </a><figcaption class="image-caption">效果</figcaption>
    </figure></p>
<p>可以发现对中文的分词效果是比较不错的，但也存在一些不足，比如 <code>最好的</code> 我们希望它是一个词，而 <code>上</code>我们希望它不被识别一个词，这种需求可以同过自定义词典解决。</p>
<h2 id="ik-自定义词典" class="headerLink">
    <a href="#ik-%e8%87%aa%e5%ae%9a%e4%b9%89%e8%af%8d%e5%85%b8" class="header-mark"></a>IK 自定义词典</h2><p>IK 分词器支持自定义词典，包括自定义分词，也包含自定义停用分词，操作起来非常简单。接下来实现一下自定义词典和停用词典。</p>
<h3 id="自定义词典" class="headerLink">
    <a href="#%e8%87%aa%e5%ae%9a%e4%b9%89%e8%af%8d%e5%85%b8" class="header-mark"></a>自定义词典</h3><p>自定义词典，需要先创建自己的词典，再引用自己的词典即可。</p>
<ol>
<li>创建词典</li>
</ol>
<p>在 es 容器目录 <code>/usr/share/elasticsearch/plugins/ik/config</code> 中创建自己的词典，例如叫 <code>custome.dic</code>，在文件中添加自定义的词语，操作如下：</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/432e98e286cb4c3587caa0c35f2d6446.png" title="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/432e98e286cb4c3587caa0c35f2d6446.png" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/432e98e286cb4c3587caa0c35f2d6446.png" data-sub-html="<h2>创建词典</h2>">
        
    </a><figcaption class="image-caption">创建词典</figcaption>
    </figure></p>
<p>我们把自定义的词典 <code>最好的</code> 添加到了 <code>custome.dic</code> 中了，这就是创建词典，如果有多个自定义词，需要换行加入，这里一定要注意中文分词设置编码格式为 <code>UTF-8</code>。</p>
<ol start="2">
<li>引用词典</li>
</ol>
<p>修改 <code>config/IKAnalyzer.cfg.xml</code> 引用自己创建的 <code>custome.dic</code> 词典，配置如下:</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/ef379f05c79646f4b61bc964dfe17b07.png" title="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/ef379f05c79646f4b61bc964dfe17b07.png" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/ef379f05c79646f4b61bc964dfe17b07.png" data-sub-html="<h2>引用自定义字典</h2>">
        
    </a><figcaption class="image-caption">引用自定义字典</figcaption>
    </figure></p>
<p>再使用 <code>Kibana</code> 效果如下：</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/71f95f67e34c4723b8923d3113b4951c.png" title="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/71f95f67e34c4723b8923d3113b4951c.png" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/71f95f67e34c4723b8923d3113b4951c.png" data-sub-html="<h2>效果</h2>">
        
    </a><figcaption class="image-caption">效果</figcaption>
    </figure></p>
<h3 id="自定义停用词汇" class="headerLink">
    <a href="#%e8%87%aa%e5%ae%9a%e4%b9%89%e5%81%9c%e7%94%a8%e8%af%8d%e6%b1%87" class="header-mark"></a>自定义停用词汇</h3><p>自定义停用词典和自定义词典一样，需要先创建自己的词典，再引用自己的词典即可。</p>
<ol>
<li>创建词典</li>
</ol>
<p>在 <code>config</code> 中创建自己的停用词典，例如叫 <code>stop.dic</code>，在文件中添加自定义的停用词语，操作如下：</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/a389717b1b254a4199b0a08b334afd16.png" title="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/a389717b1b254a4199b0a08b334afd16.png" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/a389717b1b254a4199b0a08b334afd16.png" data-sub-html="<h2>停用词汇</h2>">
        
    </a><figcaption class="image-caption">停用词汇</figcaption>
    </figure></p>
<ol start="2">
<li>引用词典</li>
</ol>
<p>修改 <code>config/IKAnalyzer.cfg.xml</code> 引用自己创建的 <code>stop.dic</code> 停用词典，配置如下:</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/cc6cc42963ec4eed8da6f875c9220807.png" title="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/cc6cc42963ec4eed8da6f875c9220807.png" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/cc6cc42963ec4eed8da6f875c9220807.png" data-sub-html="<h2>停用词典配置</h2>">
        
    </a><figcaption class="image-caption">停用词典配置</figcaption>
    </figure></p>
<p>修改完成后，重启 <code>elasticsearch</code> 容器。</p>
<p>再使用 <code>Kibana</code> 测试效果如下：</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/9bdadba012d049e4a9c34f2d3163b190.png" title="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/9bdadba012d049e4a9c34f2d3163b190.png" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230912/9bdadba012d049e4a9c34f2d3163b190.png" data-sub-html="<h2>停用分词效果</h2>">
        
    </a><figcaption class="image-caption">停用分词效果</figcaption>
    </figure></p>
<p>可以发现，不再有 <code>世界</code>，<code>的</code>，<code>是</code>，<code>上</code>，<code>语言</code> 的分词了，说明停用分词也生效了。</p>
<h2 id="一个例子" class="headerLink">
    <a href="#%e4%b8%80%e4%b8%aa%e4%be%8b%e5%ad%90" class="header-mark"></a>一个例子</h2><p>现在有个需求是向 mysql 中插入文章，但是同时需要向 es 中写入文章，通过 es 来分词，优化搜索，通过 es 搜索时，可以返回 mysql 中对应的 id。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">CREATE</span><span class="w"> </span><span class="k">TABLE</span><span class="w"> </span><span class="o">`</span><span class="n">article</span><span class="o">`</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="o">`</span><span class="n">id</span><span class="o">`</span><span class="w">          </span><span class="nb">int</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span><span class="w"> </span><span class="n">unsigned</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">NULL</span><span class="w"> </span><span class="n">AUTO_INCREMENT</span><span class="w"> </span><span class="k">primary</span><span class="w"> </span><span class="k">key</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="o">`</span><span class="n">title</span><span class="o">`</span><span class="w">       </span><span class="nb">varchar</span><span class="p">(</span><span class="mi">200</span><span class="p">)</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">NULL</span><span class="w"> </span><span class="k">comment</span><span class="w"> </span><span class="s1">&#39;文章标题&#39;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="o">`</span><span class="n">content</span><span class="o">`</span><span class="w">     </span><span class="nb">text</span><span class="w"> </span><span class="k">COMMENT</span><span class="w"> </span><span class="s1">&#39;文章内容&#39;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="o">`</span><span class="n">create_time</span><span class="o">`</span><span class="w"> </span><span class="k">timestamp</span><span class="w">    </span><span class="k">NOT</span><span class="w"> </span><span class="k">NULL</span><span class="w"> </span><span class="k">DEFAULT</span><span class="w"> </span><span class="k">CURRENT_TIMESTAMP</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="o">`</span><span class="n">update_time</span><span class="o">`</span><span class="w"> </span><span class="k">timestamp</span><span class="w">    </span><span class="k">NOT</span><span class="w"> </span><span class="k">NULL</span><span class="w"> </span><span class="k">DEFAULT</span><span class="w"> </span><span class="k">CURRENT_TIMESTAMP</span><span class="w"> </span><span class="k">ON</span><span class="w"> </span><span class="k">UPDATE</span><span class="w"> </span><span class="k">CURRENT_TIMESTAMP</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">)</span><span class="w"> </span><span class="n">ENGINE</span><span class="o">=</span><span class="n">InnoDB</span><span class="w"> </span><span class="k">DEFAULT</span><span class="w"> </span><span class="n">CHARSET</span><span class="o">=</span><span class="n">utf8mb4</span><span class="w"> </span><span class="k">COMMENT</span><span class="o">=</span><span class="s1">&#39;文章表&#39;</span><span class="p">;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>golang 代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nx">main</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="p">(</span>
</span></span><span class="line"><span class="cl">	<span class="s">&#34;context&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="s">&#34;database/sql&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="s">&#34;encoding/json&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="s">&#34;fmt&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="s">&#34;github.com/elastic/go-elasticsearch/v7/esapi&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="nx">_</span> <span class="s">&#34;github.com/go-sql-driver/mysql&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="s">&#34;log&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="s">&#34;strings&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">func</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="c1">// 初始化 MySQL 连接
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">db</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">sql</span><span class="p">.</span><span class="nf">Open</span><span class="p">(</span><span class="s">&#34;mysql&#34;</span><span class="p">,</span> <span class="s">&#34;root:123456@tcp(localhost:3306)/wb-test&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">log</span><span class="p">.</span><span class="nf">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="k">defer</span> <span class="nx">db</span><span class="p">.</span><span class="nf">Close</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="c1">// 初始化 Elasticsearch 连接
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">esConfig</span> <span class="o">:=</span> <span class="nx">elasticsearch</span><span class="p">.</span><span class="nx">Config</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">Addresses</span><span class="p">:</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">&#34;http://localhost:9200&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="nx">esClient</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">elasticsearch</span><span class="p">.</span><span class="nf">NewClient</span><span class="p">(</span><span class="nx">esConfig</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">log</span><span class="p">.</span><span class="nf">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="c1">// 插入文章到 MySQL
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">articleTitle</span> <span class="o">:=</span> <span class="s">&#34;蝶恋花&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="nx">articleContent</span> <span class="o">:=</span> <span class="s">&#34;花褪残红注青杏小。燕子飞时，绿水人家绕。枝上柳绵注吹又少。天涯何处无芳草。墙里秋千墙外道。墙外行人，墙里佳人笑。笑渐不闻声渐悄。多情却被无情恼。&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="nx">_</span><span class="p">,</span> <span class="nx">err</span> <span class="p">=</span> <span class="nx">db</span><span class="p">.</span><span class="nf">Exec</span><span class="p">(</span><span class="s">&#34;INSERT INTO article (title, content) VALUES (?, ?)&#34;</span><span class="p">,</span> <span class="nx">articleTitle</span><span class="p">,</span> <span class="nx">articleContent</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">log</span><span class="p">.</span><span class="nf">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="c1">// 获取插入文章的 MySQL ID
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="kd">var</span> <span class="nx">articleID</span> <span class="kt">int</span>
</span></span><span class="line"><span class="cl">	<span class="nx">err</span> <span class="p">=</span> <span class="nx">db</span><span class="p">.</span><span class="nf">QueryRow</span><span class="p">(</span><span class="s">&#34;SELECT LAST_INSERT_ID()&#34;</span><span class="p">).</span><span class="nf">Scan</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">articleID</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">log</span><span class="p">.</span><span class="nf">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="c1">// 在 Elasticsearch 中写入文章
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">esIndexName</span> <span class="o">:=</span> <span class="s">&#34;articles&#34;</span> <span class="c1">// Elasticsearch 索引名
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">docID</span> <span class="o">:=</span> <span class="nx">fmt</span><span class="p">.</span><span class="nf">Sprintf</span><span class="p">(</span><span class="s">&#34;%d&#34;</span><span class="p">,</span> <span class="nx">articleID</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="c1">//esDoc := map[string]interface{}{
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">//	&#34;title&#34;:   articleTitle,
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">//	&#34;content&#34;: articleContent,
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">//	&#34;mysql_id&#34;: articleID, // 将 MySQL ID 存储在 Elasticsearch 中
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">//}
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">	<span class="c1">// 创建 Elasticsearch 文档
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">esRequest</span> <span class="o">:=</span> <span class="nx">esapi</span><span class="p">.</span><span class="nx">IndexRequest</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">Index</span><span class="p">:</span>      <span class="nx">esIndexName</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="nx">DocumentID</span><span class="p">:</span> <span class="nx">docID</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">		<span class="nx">Body</span><span class="p">:</span> <span class="nx">strings</span><span class="p">.</span><span class="nf">NewReader</span><span class="p">(</span><span class="nx">fmt</span><span class="p">.</span><span class="nf">Sprintf</span><span class="p">(</span><span class="s">`{
</span></span></span><span class="line"><span class="cl"><span class="s">            &#34;title&#34;: &#34;%s&#34;,
</span></span></span><span class="line"><span class="cl"><span class="s">            &#34;content&#34;: &#34;%s&#34;,
</span></span></span><span class="line"><span class="cl"><span class="s">            &#34;mysql_id&#34;: %d
</span></span></span><span class="line"><span class="cl"><span class="s">        }`</span><span class="p">,</span> <span class="nx">articleTitle</span><span class="p">,</span> <span class="nx">articleContent</span><span class="p">,</span> <span class="nx">articleID</span><span class="p">)),</span>
</span></span><span class="line"><span class="cl">		<span class="nx">Refresh</span><span class="p">:</span> <span class="s">&#34;true&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="nx">res</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">esRequest</span><span class="p">.</span><span class="nf">Do</span><span class="p">(</span><span class="nx">context</span><span class="p">.</span><span class="nf">Background</span><span class="p">(),</span> <span class="nx">esClient</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">log</span><span class="p">.</span><span class="nf">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="k">defer</span> <span class="nx">res</span><span class="p">.</span><span class="nx">Body</span><span class="p">.</span><span class="nf">Close</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="c1">// 从 Elasticsearch 中查询文章，包括 MySQL ID
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">//esQuery := map[string]interface{}{
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">//	&#34;query&#34;: map[string]interface{}{
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">//		&#34;match&#34;: map[string]interface{}{
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">//			&#34;title&#34;: &#34;示例文章标题&#34;,
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">//		},
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">//	},
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">//}
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">	<span class="nx">esSearchRequest</span> <span class="o">:=</span> <span class="nx">esapi</span><span class="p">.</span><span class="nx">SearchRequest</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">Index</span><span class="p">:</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="nx">esIndexName</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">		<span class="nx">Body</span><span class="p">:</span> <span class="nx">strings</span><span class="p">.</span><span class="nf">NewReader</span><span class="p">(</span><span class="nx">fmt</span><span class="p">.</span><span class="nf">Sprintf</span><span class="p">(</span><span class="s">`{
</span></span></span><span class="line"><span class="cl"><span class="s">            &#34;query&#34;: {
</span></span></span><span class="line"><span class="cl"><span class="s">                &#34;match&#34;: {
</span></span></span><span class="line"><span class="cl"><span class="s">                    &#34;title&#34;: &#34;示例文章标题&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">                }
</span></span></span><span class="line"><span class="cl"><span class="s">            }
</span></span></span><span class="line"><span class="cl"><span class="s">        }`</span><span class="p">)),</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="nx">res</span><span class="p">,</span> <span class="nx">err</span> <span class="p">=</span> <span class="nx">esSearchRequest</span><span class="p">.</span><span class="nf">Do</span><span class="p">(</span><span class="nx">context</span><span class="p">.</span><span class="nf">Background</span><span class="p">(),</span> <span class="nx">esClient</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">log</span><span class="p">.</span><span class="nf">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="k">defer</span> <span class="nx">res</span><span class="p">.</span><span class="nx">Body</span><span class="p">.</span><span class="nf">Close</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="c1">// 处理 Elasticsearch 查询结果
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="k">if</span> <span class="nx">res</span><span class="p">.</span><span class="nf">IsError</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">log</span><span class="p">.</span><span class="nf">Fatalf</span><span class="p">(</span><span class="s">&#34;Error: %s&#34;</span><span class="p">,</span> <span class="nx">res</span><span class="p">.</span><span class="nf">Status</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="c1">// 解析查询结果
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="kd">var</span> <span class="nx">response</span> <span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="kd">interface</span><span class="p">{}</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">json</span><span class="p">.</span><span class="nf">NewDecoder</span><span class="p">(</span><span class="nx">res</span><span class="p">.</span><span class="nx">Body</span><span class="p">).</span><span class="nf">Decode</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">response</span><span class="p">);</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">log</span><span class="p">.</span><span class="nf">Fatalf</span><span class="p">(</span><span class="s">&#34;Error parsing the response body: %s&#34;</span><span class="p">,</span> <span class="nx">err</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="nx">hits</span> <span class="o">:=</span> <span class="nx">response</span><span class="p">[</span><span class="s">&#34;hits&#34;</span><span class="p">].(</span><span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="kd">interface</span><span class="p">{})[</span><span class="s">&#34;hits&#34;</span><span class="p">].([]</span><span class="kd">interface</span><span class="p">{})</span>
</span></span><span class="line"><span class="cl">	<span class="k">for</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">hit</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">hits</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">source</span> <span class="o">:=</span> <span class="nx">hit</span><span class="p">.(</span><span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="kd">interface</span><span class="p">{})[</span><span class="s">&#34;_source&#34;</span><span class="p">].(</span><span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="kd">interface</span><span class="p">{})</span>
</span></span><span class="line"><span class="cl">		<span class="nx">title</span> <span class="o">:=</span> <span class="nx">source</span><span class="p">[</span><span class="s">&#34;title&#34;</span><span class="p">].(</span><span class="kt">string</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="nx">content</span> <span class="o">:=</span> <span class="nx">source</span><span class="p">[</span><span class="s">&#34;content&#34;</span><span class="p">].(</span><span class="kt">string</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="nx">mysqlID</span> <span class="o">:=</span> <span class="nx">source</span><span class="p">[</span><span class="s">&#34;mysql_id&#34;</span><span class="p">].(</span><span class="kt">float64</span><span class="p">)</span> <span class="c1">// 从 Elasticsearch 中获取 MySQL ID
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="nx">fmt</span><span class="p">.</span><span class="nf">Printf</span><span class="p">(</span><span class="s">&#34;标题: %s内容: %sMySQL ID: %d&#34;</span><span class="p">,</span> <span class="nx">title</span><span class="p">,</span> <span class="nx">content</span><span class="p">,</span> <span class="nb">int</span><span class="p">(</span><span class="nx">mysqlID</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>通过 kibana 查看到 es 现在有 2 条数据：</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230913/3212ca90f6c04a96884c59ca17524f8b.png" title="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230913/3212ca90f6c04a96884c59ca17524f8b.png" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230913/3212ca90f6c04a96884c59ca17524f8b.png" data-sub-html="<h2>结果数据</h2>">
        
    </a><figcaption class="image-caption">结果数据</figcaption>
    </figure></p>
<p>在 kibana 中通过查询接口搜索 content 内容包含 “绕” 的，展示效果如下：</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230913/cd4487b3e4fd4c2f8e6e5bd830561b3e.png" title="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230913/cd4487b3e4fd4c2f8e6e5bd830561b3e.png" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230913/cd4487b3e4fd4c2f8e6e5bd830561b3e.png" data-sub-html="<h2>搜索结构</h2>">
        
    </a><figcaption class="image-caption">搜索结构</figcaption>
    </figure></p>
<p>查询 content 含有 “11111” <strong>或</strong> title 中含有 “悯” 的数据结果如下：</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230913/2ef161f48f494c5aa4d4b50d46860ad7.png" title="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230913/2ef161f48f494c5aa4d4b50d46860ad7.png" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230913/2ef161f48f494c5aa4d4b50d46860ad7.png" data-sub-html="<h2>查询结果</h2>">
        
    </a><figcaption class="image-caption">查询结果</figcaption>
    </figure></p>
<h2 id="参考" class="headerLink">
    <a href="#%e5%8f%82%e8%80%83" class="header-mark"></a>参考</h2><ul>
<li><a href="https://zhuanlan.zhihu.com/p/458011982" target="_blank" rel="noopener noreferrer">Elastic Search 入门</a></li>
<li><a href="https://juejin.cn/post/6936487066272432142" target="_blank" rel="noopener noreferrer">Elasticsearch 中 must, filter, should, must_not, constant_score 的区别</a></li>
</ul>
]]></description>
</item><item>
    <title>布雷顿森林体系</title>
    <link>https://www.xiaobinqt.cn/bretton-woods-system/</link>
    <pubDate>Fri, 07 Jul 2023 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/bretton-woods-system/</guid>
    <description><![CDATA[<!-- author： xiaobinqt -->
<!-- email： xiaobinqt@163.com -->
<!-- https://xiaobinqt.github.io -->
<!-- https://www.xiaobinqt.cn -->
<h2 id="来源" class="headerLink">
    <a href="#%e6%9d%a5%e6%ba%90" class="header-mark"></a>来源</h2><p>布雷顿森林体系（Bretton Woods system）是二战后建立的一套全球金融和货币体系，于 1944 年在美国新罕布什尔州的布雷顿森林酒店（Bretton Woods Hotel）会议上确立。该体系的目标是为世界各国提供稳定的货币和贸易体系，以促进国际合作和重建战后经济。</p>
<p>布雷顿森林体系的核心是建立固定汇率制度，其中美元被确定为主要储备货币，与黄金的兑换比率固定为 35 美元/盎司。其他国家的货币则与美元进行固定汇率的兑换，保持汇率的稳定。此外，成立了国际货币基金组织（IMF）和国际复兴开发银行（World Bank），以提供贷款和援助给战后重建的国家。</p>
<h2 id="加息和减息" class="headerLink">
    <a href="#%e5%8a%a0%e6%81%af%e5%92%8c%e5%87%8f%e6%81%af" class="header-mark"></a>加息和减息</h2><p>加息和减息是央行调整利率政策时采取的两种主要行动。</p>
<h3 id="加息" class="headerLink">
    <a href="#%e5%8a%a0%e6%81%af" class="header-mark"></a>加息</h3><p>加息指央行提高基准利率或政策利率的行为。央行通过加息来控制经济的热度和通胀压力。当央行认为经济过热或通胀压力上升时，它可能会加息以抑制消费和投资需求，减缓经济增长速度并控制通胀。</p>
<p>加息的影响包括：</p>
<ul>
<li>
<p>贷款成本上升：加息会导致商业银行借款成本上升，进而传导到借款人，使得贷款更加昂贵。这可以降低消费和投资支出，抑制经济增长。</p>
</li>
<li>
<p>投资收益下降：高利率使得储蓄和固定收益类投资更具吸引力，可能导致股票市场回报下降。</p>
</li>
<li>
<p>货币升值：高利率往往会吸引外国资本流入，推动货币升值，对出口企业造成压力，可能导致贸易顺差减少。</p>
</li>
</ul>
<p>当一个国家的央行提高利率时，这可能会使该国的货币更有吸引力，从而吸引更多的外国投资者将资金流入该国。这种外国资本流入会增加该国的需求，导致该国的货币升值。</p>
<p>货币升值对出口企业造成压力的原因在于，当国家的货币升值时，该国的出口商品价格在国际市场上变得更昂贵。这可能导致出口企业在竞争中失去价格竞争力，减少对外贸易的需求，进而可能减少该国的出口额度。因此，这可能导致该国的贸易顺差减少或贸易逆差增加。</p>
<p>举个例子，假设国家A的央行决定提高利率，这会使得国家A的货币更有吸引力。外国投资者可能会将资金流入国家A，因为他们可以获得更高的回报率。这种资本流入会导致国家A的货币升值。</p>
<p>由于货币升值，国家 A 的出口商品的价格在国际市场上变得更昂贵。假设国家A是一个出口导向型经济体，主要依赖出口来实现经济增长。然而，由于货币升值，国家 A 的出口商品相对于其他国家变得更昂贵，这可能导致其他国家购买国家 A 的商品减少。这可能减少了国家 A 的出口额度，可能导致贸易顺差减少或贸易逆差增加。</p>
<h3 id="减息" class="headerLink">
    <a href="#%e5%87%8f%e6%81%af" class="header-mark"></a>减息</h3><p>减息指央行降低基准利率或政策利率的行为。央行通过降息来刺激经济增长和提振通胀水平。当央行认为经济增长缓慢或通缩风险增加时，它可能会降息以刺激消费和投资需求，促进经济活动。</p>
<p>减息的影响包括：</p>
<ul>
<li>
<p>贷款成本下降：降息使得商业银行借款成本下降，推动贷款利率的下降。这可以促进消费和投资支出，刺激经济增长。</p>
</li>
<li>
<p>投资回报增加：低利率使得股票市场和风险资产更具吸引力，可能推动股市回报率上升。</p>
</li>
<li>
<p>货币贬值：降息可能导致资本外流，使货币贬值，对出口企业有利，可能提高贸易顺差。</p>
</li>
</ul>
<p>当央行降低利率时，银行的借贷成本下降，这意味着企业和个人可以以更低的成本借款。较低的借贷成本通常会刺激投资者寻求更高的回报率，因为他们可以以更低的成本进行借贷和投资。</p>
<p>在这种情况下，股票市场和其他风险资产，如股票基金或房地产投资信托（REITs）等，往往更具吸引力。投资者可能倾向于将资金投入到这些风险资产中，以追求更高的回报。这种投资需求可能推动股票市场的回报率上升。</p>
<p>例如，假设某国央行决定降低利率，这导致银行向企业和个人提供更便宜的贷款。企业和个人可以以更低的利率借款来扩大业务或进行投资。这可能促使一些投资者将资金投入到股票市场，购买股票。当投资者需求增加时，股票市场的股票价格可能上涨，并且投资者可能通过股息或股价上涨获得更高的回报率。</p>
<h2 id="瓦解" class="headerLink">
    <a href="#%e7%93%a6%e8%a7%a3" class="header-mark"></a>瓦解</h2><p>布雷顿森林体系在 20 世纪 70 年代面临了一系列挑战，最终导致了其瓦解。以下是一些导致布雷顿森林体系瓦解的主要原因：</p>
<ol>
<li>
<p>美元超发：由于美国在二战后是全球最大的经济体，并拥有最多的黄金储备，美元成为其他国家的主要储备货币。然而，美国的大规模贸易赤字和金融政策的宽松导致了美元的超发，进而削弱了美元的价值和国际信誉。</p>
</li>
<li>
<p>黄金供应问题：随着国际贸易的增长和美元超发，其他国家开始将美元兑换成黄金，使美国黄金储备减少。这引发了对黄金供应的担忧，使得美元与黄金的固定兑换比率难以维持。</p>
</li>
<li>
<p>汇率固定的不可持续性：由于全球经济发展不均衡和国家之间的经济差异，保持汇率固定变得越来越困难。一些国家面临经济困难时，无法通过调整汇率来恢复竞争力，而只能实施紧缩政策，导致经济衰退和高失业率。</p>
</li>
<li>
<p>外汇市场的自由化：1971 年，美国总统尼克松宣布取消美元与黄金的直接兑换，使美元脱离了黄金标准。这导致了外汇市场的自由化和浮动汇率制度的崛起，使得固定汇率制度失去了基础。</p>
</li>
</ol>
<h2 id="名词解释" class="headerLink">
    <a href="#%e5%90%8d%e8%af%8d%e8%a7%a3%e9%87%8a" class="header-mark"></a>名词解释</h2><h3 id="赤字" class="headerLink">
    <a href="#%e8%b5%a4%e5%ad%97" class="header-mark"></a>赤字</h3><p>赤字（Deficit）是指在财政上支出超过收入的情况。在政府财政领域，赤字通常是指政府的财政赤字，即政府支出超过政府收入的情况。</p>
<p>政府的收入主要来自税收、关税、国有企业利润等，而支出包括公共服务、基础设施建设、社会福利、国防开支等。当政府的支出超过其收入时，就会出现财政赤字。</p>
<p>财政赤字通常需要通过借款来弥补，政府发行债券以吸引借款者购买，从而筹集额外的资金来填补财政赤字。这些债券通常由政府承诺在未来偿还，并支付一定的利息。</p>
<p>赤字并不一定是负面的，政府可能出于某种经济或政策考虑有意选择实施财政赤字。例如，在经济衰退时，政府可能增加支出来刺激经济增长，即采取财政刺激政策。然而，长期持续的赤字可能会导致债务累积和财政可持续性问题，需要政府采取适当的措施来平衡收支，以确保财政稳定和可持续发展。</p>
<h3 id="紧缩政策" class="headerLink">
    <a href="#%e7%b4%a7%e7%bc%a9%e6%94%bf%e7%ad%96" class="header-mark"></a>紧缩政策</h3><p>紧缩政策（Austerity Policy）是指政府采取的一系列经济政策和财政措施，旨在削减政府支出、减少财政赤字、控制通胀和降低债务水平。紧缩政策通常包括以下方面：</p>
<ol>
<li>
<p>财政支出削减：政府削减各个领域的开支，包括公共服务、基础设施、教育、医疗保健等，以降低财政赤字和债务水平。</p>
</li>
<li>
<p>税收增加：政府可能增加税收，包括提高税率、扩大税基或引入新的税种，以增加财政收入。</p>
</li>
<li>
<p>社会福利削减：政府可能减少社会福利开支，包括减少失业救济金、养老金、医疗保险等福利项目，以减少财政负担。</p>
</li>
<li>
<p>公共部门裁员：政府可能削减公共部门的人员编制，以降低人力成本和财政支出。</p>
</li>
<li>
<p>货币紧缩：央行可能采取紧缩的货币政策，通过加息、收紧信贷等手段来控制通胀和抑制消费支出。</p>
</li>
</ol>
<p>紧缩政策通常在经济衰退、高通胀、债务危机等情况下实施。它的目标是通过削减支出、增加收入和提高财政纪律，使政府的财政状况得到改善，并恢复经济的可持续增长。然而，紧缩政策也可能导致经济活动减缓、失业率上升、社会福利下降等问题。</p>
<h3 id="高通胀" class="headerLink">
    <a href="#%e9%ab%98%e9%80%9a%e8%83%80" class="header-mark"></a>高通胀</h3><p>高通胀（High inflation）是指物价持续上涨的速度较高的情况。在高通胀环境下，货币购买力逐渐下降，人们需要支付更多的货币来购买相同数量的商品和服务。高通胀通常被认为是一种经济不稳定的现象，可能对经济和社会造成一系列影响。</p>
<p>高通胀通常由供求失衡、货币供应过剩、成本推动或需求推动等因素引起。以下是一些常见的原因：</p>
<ol>
<li>
<p>货币供应过剩：当货币供应增长速度超过经济增长速度时，会导致货币供应过剩，从而推动物价上涨。</p>
</li>
<li>
<p>成本推动：成本上涨，如劳动力成本、原材料成本等的增加，可能会导致生产成本上升，企业为了维持利润率，将成本上涨转嫁到产品价格上，推动物价上涨。</p>
</li>
<li>
<p>需求推动：当需求超过供应时，供应不能满足市场需求，商品和服务的价格上涨。这可能是由于人口增长、消费需求增加、投资增加等引起的。</p>
</li>
</ol>
<p>高通胀可能会带来一系列的经济和社会问题，包括以下几点：</p>
<ol>
<li>
<p>财务不稳定：高通胀会削弱货币的购买力，对个人、家庭和企业的财务状况造成不利影响，尤其是固定收入者和持有现金的人。</p>
</li>
<li>
<p>消费减弱：由于物价上涨，消费者购买力下降，导致消费减少，对经济增长产生负面影响。</p>
</li>
<li>
<p>投资不确定性：高通胀环境下，价格不稳定，增加了投资决策的不确定性，可能抑制投资活动。</p>
</li>
<li>
<p>社会不稳定：高通胀可能引发社会不满和不平等加剧，对社会稳定造成威胁。</p>
</li>
</ol>
<h3 id="经常账户" class="headerLink">
    <a href="#%e7%bb%8f%e5%b8%b8%e8%b4%a6%e6%88%b7" class="header-mark"></a>经常账户</h3><p>经常账户（Current Account）是国际收支表中的一个重要部分，用于记录一个国家与其他国家之间的货物、服务、收入和转移的交易。</p>
<p>经常账户包括以下几个主要组成部分：</p>
<ol>
<li>
<p>货物贸易：货物贸易是指一个国家的出口和进口物品的价值。出口物品的价值增加了经常账户的借项（收入），而进口物品的价值增加了经常账户的贷项（支出）。货物贸易通常占据经常账户最大的部分。</p>
</li>
<li>
<p>服务贸易：服务贸易是指一个国家的出口和进口服务的价值，如旅游、运输、保险、金融、咨询等。出口服务增加了经常账户的借项，而进口服务增加了经常账户的贷项。</p>
</li>
<li>
<p>收入：收入部分记录了一个国家从海外获得的收入，包括工资、利息、股息、利润等。收入的借项表示从海外获得的收入，而贷项表示国内向海外支付的收入。</p>
</li>
<li>
<p>转移支付：转移支付是指一个国家与其他国家之间的无对价的转移，如国际援助、移民汇款、赠款等。转移支付的借项表示从海外获得的转移支付，而贷项表示国内向海外支付的转移支付。</p>
</li>
</ol>
<p>经常账户的结余（顺差）或逆差反映了一个国家与其他国家之间的净贸易状况。经常账户顺差表示国家的收入超过支出，而逆差表示支出超过收入。</p>
<p>经常账户是国际收支表的一个重要指标，它反映了一个国家与世界其他国家之间的经济关系和交流。经常账户的变动可以受到多种因素的影响，如贸易政策、经济增长、汇率变动、国际投资等。对经常账户的监测和管理有助于了解一个国家的国际经济状况，并可以帮助政策制定者采取适当的措施来平衡国际收支和维护经济稳定。</p>
<h2 id="贸易逆差和贸易顺差" class="headerLink">
    <a href="#%e8%b4%b8%e6%98%93%e9%80%86%e5%b7%ae%e5%92%8c%e8%b4%b8%e6%98%93%e9%a1%ba%e5%b7%ae" class="header-mark"></a>贸易逆差和贸易顺差</h2><p>贸易逆差（Trade deficit）和贸易顺差（Trade surplus）是国际贸易中两个重要的概念，用于描述一个国家的出口和进口之间的差额。</p>
<p>贸易顺差：贸易顺差指一个国家在一定时间内的出口总值超过其进口总值的情况。换句话说，贸易顺差表示该国的出口收入大于其进口支出。贸易顺差是一个国家经济的一种正面指标，意味着该国在国际贸易中净获得了经济价值。</p>
<p>贸易顺差可能会带来以下影响：</p>
<ul>
<li>
<p>增加外汇储备：贸易顺差意味着该国获得了外币收入，增加了其外汇储备，使其在国际支付和应对外部经济冲击时更具弹性。</p>
</li>
<li>
<p>刺激就业和经济增长：贸易顺差可以促进国内产业和出口相关行业的发展，刺激就业和经济增长。</p>
</li>
<li>
<p>改善经常账户：贸易顺差对经常账户有积极的影响，因为它表示国家在商品和服务贸易方面的净收入。</p>
</li>
</ul>
<p>贸易逆差：贸易逆差指一个国家在一定时间内的进口总值超过其出口总值的情况。贸易逆差表示该国的进口支出超过了其出口收入。贸易逆差通常被视为一个国家经济的挑战，因为它意味着该国需要依赖外国供应来满足国内需求。</p>
<p>贸易逆差可能会带来以下影响：</p>
<ul>
<li>
<p>减少外汇储备：贸易逆差意味着该国需要支付更多的外汇来购买进口商品，可能会减少其外汇储备，使其在国际支付方面面临挑战。</p>
</li>
<li>
<p>潜在的失业风险：贸易逆差可能会导致国内产业的竞争力下降，进而对就业产生负面影响。</p>
</li>
<li>
<p>经常账户压力：贸易逆差对经常账户产生负面影响，因为它表示国家在商品和服务贸易方面的净支出。</p>
</li>
</ul>
]]></description>
</item><item>
    <title>windows 下 python virtualenvwrapper-win 使用</title>
    <link>https://www.xiaobinqt.cn/virtualenvwrapper-win/</link>
    <pubDate>Fri, 26 May 2023 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/virtualenvwrapper-win/</guid>
    <description><![CDATA[<!-- author： xiaobinqt -->
<!-- email： xiaobinqt@163.com -->
<!-- https://xiaobinqt.github.io -->
<!-- https://www.xiaobinqt.cn -->
<p>Virtualenvwrapper 是一个用于管理 Python 虚拟环境的工具，它为创建、切换和删除虚拟环境提供了一组方便的命令，并通过简化管理多个虚拟环境的过程来提高开发效率。</p>
<h2 id="安装" class="headerLink">
    <a href="#%e5%ae%89%e8%a3%85" class="header-mark"></a>安装</h2><p>可以使用 pip 安装 Virtualenvwrapper：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">pip install virtualenvwrapper-win
</span></span></code></pre></td></tr></table>
</div>
</div><p>安装完成后，需要设置一些环境变量。创建一个名为<code>WORKON_HOME</code>的环境变量，用于指定虚拟环境的存储位置。例如，可以将其设置为<code>D:\python\venv</code>。</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230526/7e68bb0eecb1482b88a6ab962986487a.png?imageView2/0/q/75%7cwatermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" title="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230526/7e68bb0eecb1482b88a6ab962986487a.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230526/7e68bb0eecb1482b88a6ab962986487a.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-sub-html="<h2>WORKON_HOME</h2>">
        
    </a><figcaption class="image-caption">WORKON_HOME</figcaption>
    </figure></p>
<p>在安装并配置好 Virtualenvwrapper 后，打开一个<strong>新的</strong>命令行窗口，以便新的环境变量生效。</p>
<h2 id="创建虚拟环境" class="headerLink">
    <a href="#%e5%88%9b%e5%bb%ba%e8%99%9a%e6%8b%9f%e7%8e%af%e5%a2%83" class="header-mark"></a>创建虚拟环境</h2><p>使用 mkvirtualenv 命令创建一个新的虚拟环境。例如，要创建一个名为 go.src 的虚拟环境，可以运行以下命令：</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230526/9b1e834a1bff4c54b551bedd9b49e384.png?imageView2/0/q/75%7cwatermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" title="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230526/9b1e834a1bff4c54b551bedd9b49e384.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230526/9b1e834a1bff4c54b551bedd9b49e384.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-sub-html="<h2>mkvirtualenv</h2>">
        
    </a><figcaption class="image-caption">mkvirtualenv</figcaption>
    </figure></p>
<h2 id="查看所有虚拟环境" class="headerLink">
    <a href="#%e6%9f%a5%e7%9c%8b%e6%89%80%e6%9c%89%e8%99%9a%e6%8b%9f%e7%8e%af%e5%a2%83" class="header-mark"></a>查看所有虚拟环境</h2><p>要列出所有可用的虚拟环境，可以使用 workon 命令，不带任何参数运行它：</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230526/cce01cbdc5254cee8b9115e2bd2cb30d.png?imageView2/0/q/75%7cwatermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" title="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230526/cce01cbdc5254cee8b9115e2bd2cb30d.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230526/cce01cbdc5254cee8b9115e2bd2cb30d.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-sub-html="<h2>workon</h2>">
        
    </a><figcaption class="image-caption">workon</figcaption>
    </figure></p>
<h2 id="激活虚拟环境" class="headerLink">
    <a href="#%e6%bf%80%e6%b4%bb%e8%99%9a%e6%8b%9f%e7%8e%af%e5%a2%83" class="header-mark"></a>激活虚拟环境</h2><p>创建虚拟环境后，可以使用 workon 命令来激活该环境。例如，要激活名为 go.src 的虚拟环境，可以运行以下命令：</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230526/1109c7cf3de9479081bbf3aeafdf4c61.png?imageView2/0/q/75%7cwatermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" title="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230526/1109c7cf3de9479081bbf3aeafdf4c61.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230526/1109c7cf3de9479081bbf3aeafdf4c61.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-sub-html="<h2>激活虚拟环境</h2>">
        
    </a><figcaption class="image-caption">激活虚拟环境</figcaption>
    </figure></p>
<h2 id="删除虚拟环境" class="headerLink">
    <a href="#%e5%88%a0%e9%99%a4%e8%99%9a%e6%8b%9f%e7%8e%af%e5%a2%83" class="header-mark"></a>删除虚拟环境</h2><p>如果要删除不再需要的虚拟环境，可以使用 rmvirtualenv 命令，后跟要删除的虚拟环境的名称。例如，要删除名为 myenv 的虚拟环境，可以运行以下命令：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">rmvirtualenv myenv
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="退出虚拟环境" class="headerLink">
    <a href="#%e9%80%80%e5%87%ba%e8%99%9a%e6%8b%9f%e7%8e%af%e5%a2%83" class="header-mark"></a>退出虚拟环境</h2><p>可以使用 deactivate 命令退出虚拟环境：</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230526/3a979dd3e94942f1aaeaa2a2d54a967e.png?imageView2/0/q/75%7cwatermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" title="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230526/3a979dd3e94942f1aaeaa2a2d54a967e.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230526/3a979dd3e94942f1aaeaa2a2d54a967e.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-sub-html="<h2>退出虚拟环境</h2>">
        
    </a><figcaption class="image-caption">退出虚拟环境</figcaption>
    </figure></p>
<h2 id="pycharm-配置" class="headerLink">
    <a href="#pycharm-%e9%85%8d%e7%bd%ae" class="header-mark"></a>pycharm 配置</h2><p><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230526/856d78b8073b47dc9d57874624a7ea6b.png?imageView2/0/q/75%7cwatermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" title="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230526/856d78b8073b47dc9d57874624a7ea6b.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230526/856d78b8073b47dc9d57874624a7ea6b.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15">
        
    </a></p>
<p><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230526/4093998f664f4d47ad95d563cbfab817.png?imageView2/0/q/75%7cwatermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" title="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230526/4093998f664f4d47ad95d563cbfab817.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230526/4093998f664f4d47ad95d563cbfab817.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15">
        
    </a></p>
]]></description>
</item><item>
    <title>Docker bridge 网络与自定义 DNS 解析</title>
    <link>https://www.xiaobinqt.cn/docker-net-custom-dns/</link>
    <pubDate>Wed, 24 May 2023 00:00:00 &#43;0000</pubDate><author>
        <name>xiaobinqt</name>
    </author><guid>https://www.xiaobinqt.cn/docker-net-custom-dns/</guid>
    <description><![CDATA[<!-- author： xiaobinqt -->
<!-- email： xiaobinqt@163.com -->
<!-- https://xiaobinqt.github.io -->
<!-- https://www.xiaobinqt.cn -->
<h2 id="常见-dns-记录类型" class="headerLink">
    <a href="#%e5%b8%b8%e8%a7%81-dns-%e8%ae%b0%e5%bd%95%e7%b1%bb%e5%9e%8b" class="header-mark"></a>常见 DNS 记录类型</h2><ul>
<li>A 记录（Address Record）</li>
</ul>
<p>记录格式：<code>example.com. IN A 192.0.2.1</code>，将域名映射到 IPv4 地址，不包含端口信息。</p>
<ul>
<li>AAAA 记录（IPv6 Address Record）</li>
</ul>
<p>记录格式：<code>example.com. IN AAAA 2001:db8::1</code>，将域名映射到 IPv6 地址。</p>
<ul>
<li>CNAME 记录（Canonical Name Record）</li>
</ul>
<p>记录格式：<code>www.example.com. IN CNAME example.com.</code>，将一个域名指向另一个域名，实现域名的别名或重定向。</p>
<ul>
<li>TXT 记录（Text Record）</li>
</ul>
<p>记录格式：<code>example.com. IN TXT &quot;Some text here&quot;</code>，存储与域名相关的文本信息，常用于验证域名所有权、防止电子邮件欺诈等。</p>
<ul>
<li>SRV 记录（Service Record）</li>
</ul>
<p>记录格式：<code>_service._proto.name. IN SRV priority weight port target</code>。<code>priority</code>表示优先级，用于指定备用服务器的顺序。值越小，优先级越高。<code>weight</code>表示权重，用于在具有相同优先级的记录之间进行负载均衡。值越大，权重越高。<code>port</code>表示服务的端口号。<code>target</code>表示提供该服务的目标主机的域名。</p>
<p>SRV 用于指定特定服务的域名、端口和优先级等信息，它用于在 DNS 中提供服务发现的功能，让客户端能够通过域名查找到提供特定服务的目标主机和端口。</p>
<ul>
<li>PTR 记录（Pointer Record）</li>
</ul>
<p>记录格式：<code>1.2.0.192.in-addr.arpa. IN PTR example.com.</code>，用于进行反向 DNS 查找，将 IP 地址解析为域名。</p>
<blockquote>
<p>IN（表示Internet）在 DNS 记录中是可选的，可以省略。当省略 IN 时，默认为 IN，因为大多数 DNS 记录都是针对互联网的。</p>
</blockquote>
<h2 id="resolvconf-配置文件" class="headerLink">
    <a href="#resolvconf-%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6" class="header-mark"></a>resolv.conf 配置文件</h2><p>resolv.conf 配置文件，存储了用于解析域名的 DNS 服务器的相关信息，用于指定系统的 DNS 解析配置。</p>
<p>resolv.conf 文件通常位于 Linux 系统中的 /etc/resolv.conf。每行包含一个配置项，配置项由关键字和对应的值组成，以空格或制表符分隔。常见的配置项包括：</p>
<ul>
<li>nameserver：指定 DNS 服务器的 IP 地址。可以有多个 nameserver 行，按照优先级从上到下进行解析。</li>
<li>search：指定默认的搜索域名列表。当使用不完全限定的域名时，系统会自动尝试附加这些域名来进行解析。</li>
<li>domain：指定系统的默认域名。当使用不完全限定的主机名时，系统会自动尝试附加默认域名来进行解析。</li>
<li>options：指定其他的解析选项，如超时时间、转发等。</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">nameserver 8.8.8.8
</span></span><span class="line"><span class="cl">nameserver 8.8.4.4
</span></span><span class="line"><span class="cl">search example.com
</span></span></code></pre></td></tr></table>
</div>
</div><p>比如以下的这个配置</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230529/8b4dd5e7b70a4e17870780c2f4708751.png?imageView2/0/q/75%7cwatermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" title="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230529/8b4dd5e7b70a4e17870780c2f4708751.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230529/8b4dd5e7b70a4e17870780c2f4708751.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-sub-html="<h2>resolv.conf</h2>">
        
    </a><figcaption class="image-caption">resolv.conf</figcaption>
    </figure></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">search xae-zcbus-20230523.28e5df10.csphere.local csphere.local
</span></span></code></pre></td></tr></table>
</div>
</div><p>这条 search 配置表示系统默认的搜索域名列表包括两个域名：<code>xae-zcbus-20230523.28e5df10.csphere.local</code> 和 <code>csphere.local</code>。</p>
<p>当进行 DNS 解析时，如果使用一个不完全限定的域名（没有包含点号），系统会按照 search 配置中的顺序尝试逐个附加这些搜索域名，以尝试解析域名。例如，如果要解析的域名是 example，系统会依次尝试解析 <code>example.xae-zcbus-20230523.28e5df10.csphere.local</code> 和 <code>example.csphere.local</code>。</p>
<p>这样配置搜索域名列表可以简化 DNS 查询过程，特别是在本地网络内部使用内部域名时，通过设置合适的搜索域名，可以直接使用不完全限定的主机名进行解析，而无需每次都输入完整的域名。</p>
<p>ndots 参数控制着系统在进行 DNS 解析时是否自动追加搜索域名。它指定了一个域名中至少要包含的点号<code>.</code>的数量。点号在域名中的数量表示域名的层级结构，例如<code>example.com</code>有一个点号，而<code>www.example.com</code>有两个点号。当一个域名的层级结构中点号的数量达到或超过 ndots 参数指定的值时，系统将<strong>不再追加</strong>搜索域名。</p>
<p>如上的配置<code>options ndots:2</code>，表示当进行 DNS 解析时，如果域名中包含至少两个点号（层级结构至少为三级），系统将不会自动追加搜索域名。如果域名的层级结构不足三级（点号少于两个），系统会自动尝试使用 /etc/resolv.conf 中指定的搜索域名列表进行解析。</p>
<p><code>nameserver 172.17.0.1</code>用于指定 DNS 解析时要使用的 DNS 服务器的 IP 地址。这里的<code>172.17.0.1</code>是 Docker bridge 网络下虚拟网桥 docker0 的 IP 地址。</p>
<p>因为容器中没有 dns 解析服务，不管是 dnsmasq 还是 pdns 都是装在宿主机上的，所以最后肯定是到宿主机上来解析的域名，但是这里如果直接写宿主机 IP 会影响效率「TODO 待补充」。</p>
<h2 id="etchosts-配置文件" class="headerLink">
    <a href="#etchosts-%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6" class="header-mark"></a>/etc/hosts 配置文件</h2><p>/etc/hosts 是本地的主机名解析文件，用于将主机名映射到对应的 IP 地址。/etc/hosts 文件包含了主机名和对应 IP 地址的映射关系。每行的格式为 <code>&lt;IP 地址&gt; &lt;主机名&gt;</code> 或者 <code>&lt;IP 地址&gt; &lt;主机别名&gt; &lt;主机名&gt;</code>。</p>
<p>/etc/hosts 文件中的条目优先于 DNS（Domain Name System）解析，当系统需要解析主机名时，会首先查看 /etc/hosts 文件，如果找到匹配的主机名，则直接使用对应的 IP 地址进行通信，无需进行 DNS 查询。</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230524/16561b7c30f74809822274beff9af838.png?imageView2/0/q/75%7cwatermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" title="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230524/16561b7c30f74809822274beff9af838.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230524/16561b7c30f74809822274beff9af838.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-sub-html="<h2>hosts</h2>">
        
    </a><figcaption class="image-caption">hosts</figcaption>
    </figure></p>
<h2 id="pdns" class="headerLink">
    <a href="#pdns" class="header-mark"></a>PDNS</h2><p>PDNS 是 PowerDNS 的简称，它是一款开源的域名系统（DNS）服务器软件。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1"># 安装 pdns</span>
</span></span><span class="line"><span class="cl">yum install pdns pdns-backend-pipe -y
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># pdns 启动,停止和查看是否运行正常</span>
</span></span><span class="line"><span class="cl">systemctl start/stop/status pdns
</span></span></code></pre></td></tr></table>
</div>
</div><p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230525/fa40c2fa19674bd1a29c4edd0496ff5b.png?imageView2/0/q/75%7cwatermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" title="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230525/fa40c2fa19674bd1a29c4edd0496ff5b.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230525/fa40c2fa19674bd1a29c4edd0496ff5b.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-sub-html="<h2>查看 dnsmasq 是否正常</h2>">
        
    </a><figcaption class="image-caption">查看 dnsmasq 是否正常</figcaption>
    </figure></p>
<p>如果有问题需要排查，可以使用如下命令让 pdns 在前台运行</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">/usr/sbin/pdns_server --guardian<span class="o">=</span>no --daemon<span class="o">=</span>no --disable-syslog --log-timestamp<span class="o">=</span>no --write-pid<span class="o">=</span>no
</span></span></code></pre></td></tr></table>
</div>
</div><p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230527/fc4df6cc9be049929788893a037ccd6f.png?imageView2/0/q/75%7cwatermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" title="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230527/fc4df6cc9be049929788893a037ccd6f.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230527/fc4df6cc9be049929788893a037ccd6f.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-sub-html="<h2>前台运行模式</h2>">
        
    </a><figcaption class="image-caption">前台运行模式</figcaption>
    </figure></p>
<p><code>--guardian=no</code>: 禁用 Guardian 模式。Guardian 模式是 PowerDNS 的守护进程管理机制，它负责监控和重启 PowerDNS 进程。通过将此参数设置为 no，禁用了 Guardian 模式。</p>
<p><code>--daemon=no</code>: 禁用守护进程模式。默认情况下，PowerDNS 以守护进程的形式运行，即在后台作为系统服务运行。通过将此参数设置为 no，PowerDNS 将在前台运行，输出日志和调试信息到终端。</p>
<p><code>--disable-syslog</code>: 禁用使用系统日志。默认情况下，PowerDNS 会将日志信息写入系统日志。通过使用此参数，禁用了将日志写入系统日志的功能。</p>
<p><code>--log-timestamp=no</code>: 禁用日志时间戳。默认情况下，PowerDNS 在日志中添加时间戳以指示每个日志条目的时间。通过将此参数设置为 no，禁用了时间戳的添加。</p>
<p><code>--write-pid=no</code>: 禁用写入 PID 文件。默认情况下，PowerDNS 会将其进程 ID 写入 PID 文件。通过将此参数设置为 no，禁用了 PID 文件的写入。</p>
<h3 id="pipe-backend" class="headerLink">
    <a href="#pipe-backend" class="header-mark"></a>pipe backend</h3><p>在 PowerDNS 中，pipe 是一种后端（Backend）类型，用于将 DNS 查询通过管道（Pipe）方式传递给外部程序进行处理。这种后端类型被称为 &ldquo;pipe backend&rdquo;。</p>
<p>使用 pipe backend，PowerDNS 可以将接收到的 DNS 查询通过管道发送给一个外部的自定义脚本或程序，然后由该脚本或程序处理查询并返回结果给 PowerDNS。这种方式允许用户根据自己的需求编写自定义逻辑来处理 DNS 查询，从而实现更灵活的功能。</p>
<p>在 PowerDNS 中配置 pipe backend 需要以下步骤：</p>
<ol>
<li>
<p>编写自定义脚本或程序：根据需求，编写一个能够接收 DNS 查询并返回结果的脚本或程序。该脚本或程序可以使用任何编程语言来实现，例如 Python、Perl、Shell 等。</p>
</li>
<li>
<p>配置 PowerDNS：在 PowerDNS 的配置文件中指定使用 pipe backend，并设置要执行的脚本或程序的路径。通常需要修改 PowerDNS 的配置文件（例如 pdns.conf）来进行配置。</p>
</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nv">launch</span><span class="o">=</span>pipe
</span></span><span class="line"><span class="cl">pipe-command<span class="o">=</span>/path/to/your/script.py
</span></span></code></pre></td></tr></table>
</div>
</div><p>上述示例中，pipe-command 指定了自定义脚本或程序的路径。在修改完配置文件后，<strong>需要重新启动</strong> PowerDNS 服务，使配置生效。</p>
<p>当 PowerDNS 接收到 DNS 查询时，它将会将查询数据通过管道传递给指定的脚本或程序。脚本或程序可以处理查询并返回结果给 PowerDNS，然后由 PowerDNS 将结果返回给客户端。</p>
<p>通过配置 pipe backend，可以根据自己的需求编写自定义的逻辑来处理 DNS 查询，例如基于外部数据源、自定义策略、过滤等操作。</p>
<h2 id="dnsmasq" class="headerLink">
    <a href="#dnsmasq" class="header-mark"></a>dnsmasq</h2><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1"># 安装 dnsmasq</span>
</span></span><span class="line"><span class="cl">yum install dnsmasq
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 一些状态命令</span>
</span></span><span class="line"><span class="cl">systemctl start/stop/restart/status dnsmasq
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 检查配置文件语法是否正确</span>
</span></span><span class="line"><span class="cl">dnsmasq --test
</span></span></code></pre></td></tr></table>
</div>
</div><p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230529/21042ad8bf514e519d55c93d7431336d.png?imageView2/0/q/75%7cwatermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" title="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230529/21042ad8bf514e519d55c93d7431336d.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230529/21042ad8bf514e519d55c93d7431336d.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-sub-html="<h2>dnsmasq 命令</h2>">
        
    </a><figcaption class="image-caption">dnsmasq 命令</figcaption>
    </figure></p>
<p>Dnsmasq 是一个轻量级的 DNS 和 DHCP 服务器软件，用于提供本地域名解析和网络地址分配功能，配置文件通常位于 /etc/dnsmasq.conf。下面是一些常用的配置文件字段说明：</p>
<ul>
<li>
<p>port（端口）：指定 Dnsmasq 监听的 DNS 查询端口。默认为 53，但可以根据需要进行更改。</p>
</li>
<li>
<p>cache-size（缓存大小）：指定DNS缓存的最大大小（以条目数量表示）。缓存可以提高解析性能，减少对上游 DNS 服务器的查询次数。例如，cache-size=1000 表示最多缓存 1000 条 DNS 解析记录。</p>
</li>
<li>
<p>server（服务器）：用于指定要使用的上游 DNS 服务器。可以配置多个 server 字段，每个字段后面跟随一个有效的 DNS 服务器地址。Dnsmasq 会按顺序向这些服务器发送 DNS 查询请求。</p>
</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nv">server</span><span class="o">=</span>8.8.8.8
</span></span><span class="line"><span class="cl"><span class="nv">server</span><span class="o">=</span>8.8.4.4
</span></span></code></pre></td></tr></table>
</div>
</div><p>server 的另一种写法是用来指定特定域名的 DNS 服务器映射。比如：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nv">server</span><span class="o">=</span>/domain.org/192.168.14.5
</span></span></code></pre></td></tr></table>
</div>
</div><p>这个配置表示将域名 domain.org 解析到 IP 地址 192.168.14.5 上。当 Dnsmasq 收到对<code>domain.org</code>域名的解析请求时，它将使用指定的 IP 地址作为响应。这在本地网络中创建自定义的域名解析规则非常有用，可以用于内部域名解析或重定向特定域名到特定 IP 地址。</p>
<ul>
<li>address 参数用于指定域名解析的静态映射，将特定域名解析到指定的IP地址。它的语法如下：</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nv">address</span><span class="o">=</span>/域名/IP地址
</span></span><span class="line"><span class="cl"><span class="nv">address</span><span class="o">=</span>/example.com/192.168.1.100
</span></span></code></pre></td></tr></table>
</div>
</div><p>这个配置将域名 example.com 解析为 IP 地址 192.168.1.100。当 Dnsmasq 接收到关于 example.com 的解析请求时，它将使用指定的 IP 地址进行解析，而不会向上游 DNS 服务器发送查询请求。</p>
<h2 id="演练" class="headerLink">
    <a href="#%e6%bc%94%e7%bb%83" class="header-mark"></a>演练</h2><p>现在有 2 台机器，分别是<code>192.168.14.103</code>用来做控制器，安装有 powerDNS，作为上游 DNS，用来最后解析 DNS，<code>192.168.14.100</code>用来做 agent，安装有 dnsmasq 解析本地 DNS，通过配置 server 参数，将域名交给上游 DNS 服务器解析，也就是交给<code>192.168.14.103</code>解析处理。 pdns 通过 pipe backend 的 python 脚本，对所有的以<code>domain.org</code>结尾的域名请求都返回<code>192.168.40.223</code>的 IP，以下是 backend.py 的 python 脚本，python 版本是 python 3.6.8。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span><span class="lnt">119
</span><span class="lnt">120
</span><span class="lnt">121
</span><span class="lnt">122
</span><span class="lnt">123
</span><span class="lnt">124
</span><span class="lnt">125
</span><span class="lnt">126
</span><span class="lnt">127
</span><span class="lnt">128
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="ch">#!/usr/bin/env python</span>
</span></span><span class="line"><span class="cl"><span class="c1"># -*- coding: utf-8 -*-</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">os</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">random</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">sys</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">time</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">DNSLookup</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;Handle PowerDNS pipe-backend domain name lookups.&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="n">ttl</span> <span class="o">=</span> <span class="mi">30</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">query</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;parse DNS query and produce lookup result.
</span></span></span><span class="line"><span class="cl"><span class="s2">
</span></span></span><span class="line"><span class="cl"><span class="s2">        query: a sequence containing the DNS query as per PowerDNS manual appendix A:
</span></span></span><span class="line"><span class="cl"><span class="s2">        http://downloads.powerdns.com/documentation/html/backends-detail.html#PIPEBACKEND-PROTOCOL
</span></span></span><span class="line"><span class="cl"><span class="s2">        &#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">(</span><span class="n">_type</span><span class="p">,</span> <span class="n">qname</span><span class="p">,</span> <span class="n">qclass</span><span class="p">,</span> <span class="n">qtype</span><span class="p">,</span> <span class="n">_id</span><span class="p">,</span> <span class="n">ip</span><span class="p">)</span> <span class="o">=</span> <span class="n">query</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">has_result</span> <span class="o">=</span> <span class="kc">False</span>  <span class="c1"># has a DNS query response</span>
</span></span><span class="line"><span class="cl">        <span class="n">qname_lower</span> <span class="o">=</span> <span class="n">qname</span><span class="o">.</span><span class="n">lower</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;List of servers to round-robin&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">servers</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;192.168.40.223&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="n">server</span> <span class="o">=</span> <span class="n">random</span><span class="o">.</span><span class="n">choice</span><span class="p">(</span><span class="n">servers</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">results</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1"># if (qtype == &#39;A&#39; or qtype == &#39;ANY&#39;) and qname_lower.endswith(&#39;domain.org&#39;):</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">qtype</span> <span class="o">==</span> <span class="s1">&#39;ANY&#39;</span> <span class="ow">and</span> <span class="n">qname_lower</span><span class="o">.</span><span class="n">endswith</span><span class="p">(</span><span class="s1">&#39;domain.org&#39;</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">results</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s1">&#39;DATA</span><span class="se">\t</span><span class="si">%s</span><span class="se">\t</span><span class="si">%s</span><span class="se">\t</span><span class="s1">A</span><span class="se">\t</span><span class="si">%d</span><span class="se">\t</span><span class="s1">-1</span><span class="se">\t</span><span class="si">%s</span><span class="s1">&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">qname</span><span class="p">,</span> <span class="n">qclass</span><span class="p">,</span> <span class="n">DNSLookup</span><span class="o">.</span><span class="n">ttl</span><span class="p">,</span> <span class="n">server</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">has_result</span> <span class="o">=</span> <span class="kc">True</span>
</span></span><span class="line"><span class="cl">        <span class="k">elif</span> <span class="n">qtype</span> <span class="o">==</span> <span class="s1">&#39;SOA&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">results</span><span class="o">.</span><span class="n">append</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">                <span class="s1">&#39;DATA</span><span class="se">\t</span><span class="si">%s</span><span class="se">\t</span><span class="si">%s</span><span class="se">\t</span><span class="si">%s</span><span class="se">\t</span><span class="s1">3600</span><span class="se">\t</span><span class="s1">-1</span><span class="se">\t</span><span class="s1">ns1.test.soa</span><span class="se">\t</span><span class="s1">admin.test.soa</span><span class="se">\t</span><span class="s1">2014032110</span><span class="se">\t</span><span class="s1">10800</span><span class="se">\t</span><span class="s1">3600</span><span class="se">\t</span><span class="s1">604800</span><span class="se">\t</span><span class="s1">3600&#39;</span>
</span></span><span class="line"><span class="cl">                <span class="o">%</span> <span class="p">(</span><span class="n">qname</span><span class="p">,</span> <span class="n">qclass</span><span class="p">,</span> <span class="n">qtype</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">has_result</span> <span class="o">=</span> <span class="kc">True</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">str_result</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;return string result suitable for pipe-backend output to PowerDNS.&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">has_result</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="s1">&#39;</span><span class="se">\n</span><span class="s1">&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">results</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="s1">&#39;&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">Logger</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="n">pid</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">getpid</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">logfile</span> <span class="o">=</span> <span class="s1">&#39;/tmp/backend.log&#39;</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;self.logfile = &#39;/tmp/backend-</span><span class="si">%d</span><span class="s2">.log&#39; % pid&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">write</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">msg</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="n">logline</span> <span class="o">=</span> <span class="s1">&#39;</span><span class="si">%s</span><span class="s1">|</span><span class="si">%s</span><span class="se">\n</span><span class="s1">&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">time</span><span class="o">.</span><span class="n">asctime</span><span class="p">(),</span> <span class="n">msg</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">logfile</span><span class="p">,</span> <span class="s1">&#39;a&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">logline</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">f</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">debug_log</span><span class="p">(</span><span class="n">msg</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="n">logger</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">msg</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">PowerDNSbackend</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;The main PowerDNS pipe backend process.&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">filein</span><span class="p">,</span> <span class="n">fileout</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;initialise and run PowerDNS pipe backend process.&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">filein</span> <span class="o">=</span> <span class="n">filein</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">fileout</span> <span class="o">=</span> <span class="n">fileout</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">_process_requests</span><span class="p">()</span>  <span class="c1"># main program loop</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">_process_requests</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;main program loop&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">first_time</span> <span class="o">=</span> <span class="kc">True</span>
</span></span><span class="line"><span class="cl">        <span class="k">while</span> <span class="mi">1</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">rawline</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">filein</span><span class="o">.</span><span class="n">readline</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">rawline</span> <span class="o">==</span> <span class="s1">&#39;&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">debug_log</span><span class="p">(</span><span class="s1">&#39;EOF&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="k">return</span>  <span class="c1"># EOF detected</span>
</span></span><span class="line"><span class="cl">            <span class="n">line</span> <span class="o">=</span> <span class="n">rawline</span><span class="o">.</span><span class="n">rstrip</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="n">debug_log</span><span class="p">(</span><span class="s1">&#39;received from pdns:</span><span class="si">%s</span><span class="s1">&#39;</span> <span class="o">%</span> <span class="n">line</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">first_time</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="k">if</span> <span class="n">line</span> <span class="o">==</span> <span class="s1">&#39;HELO</span><span class="se">\t</span><span class="s1">1&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                    <span class="bp">self</span><span class="o">.</span><span class="n">_fprint</span><span class="p">(</span><span class="s1">&#39;OK</span><span class="se">\t</span><span class="s1">Python backend firing up&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                    <span class="bp">self</span><span class="o">.</span><span class="n">_fprint</span><span class="p">(</span><span class="s1">&#39;FAIL&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                    <span class="n">debug_log</span><span class="p">(</span><span class="s1">&#39;HELO input not received - execution aborted&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                    <span class="n">rawline</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">filein</span><span class="o">.</span><span class="n">readline</span><span class="p">()</span>  <span class="c1"># as per docs - read another line before aborting</span>
</span></span><span class="line"><span class="cl">                    <span class="n">debug_log</span><span class="p">(</span><span class="s1">&#39;calling sys.exit()&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                    <span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="n">first_time</span> <span class="o">=</span> <span class="kc">False</span>
</span></span><span class="line"><span class="cl">            <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">query</span> <span class="o">=</span> <span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;</span><span class="se">\t</span><span class="s1">&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">query</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">6</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                    <span class="bp">self</span><span class="o">.</span><span class="n">_fprint</span><span class="p">(</span><span class="s1">&#39;LOG</span><span class="se">\t</span><span class="s1">PowerDNS sent unparseable line&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                    <span class="bp">self</span><span class="o">.</span><span class="n">_fprint</span><span class="p">(</span><span class="s1">&#39;FAIL&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                    <span class="n">debug_log</span><span class="p">(</span><span class="s1">&#39;Performing DNSLookup(</span><span class="si">%s</span><span class="s1">)&#39;</span> <span class="o">%</span> <span class="nb">repr</span><span class="p">(</span><span class="n">query</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">                    <span class="n">lookup</span> <span class="o">=</span> <span class="n">DNSLookup</span><span class="p">(</span><span class="n">query</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                    <span class="k">if</span> <span class="n">lookup</span><span class="o">.</span><span class="n">has_result</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                        <span class="n">pdns_result</span> <span class="o">=</span> <span class="n">lookup</span><span class="o">.</span><span class="n">str_result</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">                        <span class="bp">self</span><span class="o">.</span><span class="n">_fprint</span><span class="p">(</span><span class="n">pdns_result</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                        <span class="n">debug_log</span><span class="p">(</span><span class="s1">&#39;DNSLookup result(</span><span class="si">%s</span><span class="s1">)&#39;</span> <span class="o">%</span> <span class="n">pdns_result</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                    <span class="bp">self</span><span class="o">.</span><span class="n">_fprint</span><span class="p">(</span><span class="s1">&#39;END&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">_fprint</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">message</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;Print the given message with newline and flushing.&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">fileout</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">message</span> <span class="o">+</span> <span class="s1">&#39;</span><span class="se">\n</span><span class="s1">&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">fileout</span><span class="o">.</span><span class="n">flush</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="n">debug_log</span><span class="p">(</span><span class="s1">&#39;sent to pdns:</span><span class="si">%s</span><span class="s1">&#39;</span> <span class="o">%</span> <span class="n">message</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s1">&#39;__main__&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">logger</span> <span class="o">=</span> <span class="n">Logger</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">infile</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">stdin</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># sys.stdout.close()</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># outfile = os.fdopen(1, &#39;w&#39;, 1)</span>
</span></span><span class="line"><span class="cl">    <span class="n">outfile</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">stdout</span>
</span></span><span class="line"><span class="cl">    <span class="k">try</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">PowerDNSbackend</span><span class="p">(</span><span class="n">infile</span><span class="p">,</span> <span class="n">outfile</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">except</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">debug_log</span><span class="p">(</span><span class="s1">&#39;execution failure:&#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">exc_info</span><span class="p">()[</span><span class="mi">0</span><span class="p">]))</span>
</span></span><span class="line"><span class="cl">        <span class="k">raise</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230529/a1a644dcf7bb425e9cd4eb4606c554a9.png?imageView2/0/q/75%7cwatermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" title="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230529/a1a644dcf7bb425e9cd4eb4606c554a9.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230529/a1a644dcf7bb425e9cd4eb4606c554a9.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-sub-html="<h2>pipe backend</h2>">
        
    </a><figcaption class="image-caption">pipe backend</figcaption>
    </figure></p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230529/761e93174f9d4763be59cef6711c3fe0.png?imageView2/0/q/75%7cwatermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" title="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230529/761e93174f9d4763be59cef6711c3fe0.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230529/761e93174f9d4763be59cef6711c3fe0.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-sub-html="<h2>dig 解析正常</h2>">
        
    </a><figcaption class="image-caption">dig 解析正常</figcaption>
    </figure></p>
<p>现在在 agent 机器也就是<code>192.168.14.100</code>上通过 <a href="https://hub.docker.com/r/xiaobinqt/redis/tags" target="_blank" rel="noopener noreferrer">xiaobinqt/redis:7-ping</a> 镜像启动一个 redis 容器，容器名为 c-redis：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-docker" data-lang="docker"><span class="line"><span class="cl">docker run --name c-redis --dns 172.17.0.1 --dns-search domain.org --dns-opt <span class="s2">&#34;ndots:2&#34;</span> -d  xiaobinqt/redis:7-ping<span class="err">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>比如，当在容器中执行 <code>ping abdd</code>时，正常会先走 hosts 但是这里的 hosts 都没有对应的域名，所以 hosts 失效，再去 nameserver 指定的 DNS 服务器解析域名，由于配置了 ndots:2 ，系统会自动追加搜索域名<code>domain.org</code>，所以会去 172.17.0.1 DNS 服务器搜索域名 <code>abdd.domain.org</code>，172.17.0.1 对应的是宿主机的 docker0 虚拟网桥，最后会走到<strong>宿主机的 dns 服务</strong>，也就是<code>192.168.14.100</code> 的 dnsmasq 服务，对应的端口是 53。</p>
<p><figure><a class="lightgallery" href="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230529/ae90a8281d72406ca0bf831fc375f36c.png?imageView2/0/q/75%7cwatermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" title="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230529/ae90a8281d72406ca0bf831fc375f36c.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-thumbnail="https://cdn.xiaobinqt.cn/xiaobinqt.io/20230529/ae90a8281d72406ca0bf831fc375f36c.png?imageView2/0/q/75|watermark/2/text/eGlhb2JpbnF0/font/dmlqYXlh/fontsize/1000/fill/IzVDNUI1Qg==/dissolve/52/gravity/SouthEast/dx/15/dy/15" data-sub-html="<h2>调试结果</h2>">
        
    </a><figcaption class="image-caption">调试结果</figcaption>
    </figure></p>
<h2 id="参考" class="headerLink">
    <a href="#%e5%8f%82%e8%80%83" class="header-mark"></a>参考</h2><ul>
<li><a href="https://gist.github.com/sokratisg/10069682" target="_blank" rel="noopener noreferrer">pdns-pipebackend.py</a></li>
<li><a href="https://www.linuxhelp.com/questions/powerdns-libpipebackend-so-no-such-file-or-directory" target="_blank" rel="noopener noreferrer">PowerDNS : libpipebackend.so no such file or directory</a></li>
<li><a href="https://community.zextras.com/dns-server-installation-guide-on-centos-7-rhel-7-and-centos-8-rhel-8-using-dnsmasq/" target="_blank" rel="noopener noreferrer">Installing DNS Server on CentOS/RHEL using dnsmasq | Zimbra</a></li>
</ul>
]]></description>
</item></channel>
</rss>
